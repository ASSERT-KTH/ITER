bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  currentFolderIndex);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  currentFolderIndex);	  archive.packPos    =    readPackInfo(header,    header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	20	None	replace
2	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  header);	  archive.packPos    =    readPackInfo(header,    header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	20	None	replace
3	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  /  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  /  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  /  header.readUnsignedByte();	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
4	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readPackInfo();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readPackInfo();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  header.readPackInfo();	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
5	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  *  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  *  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  *  header.readUnsignedByte();	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
6	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.getUnsignedByte();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.getUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  header.getUnsignedByte();	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
7	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte();  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte();	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	2	None	replace
8	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  password,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  password,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  password,  true);	  archive.packPos    =    readUint64(header,    signature,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	94	None	replace
9	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  true);  [CE]  cannot  find  symbol  nid  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  true);	  archive.packPos    =    readUint64(header,    signature,    true);    	non-compiled	[CE]  cannot  find  symbol  nid	94	None	replace
10	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  true);	  archive.packPos    =    readUint64(header,    signature,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	94	None	replace
11	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID.kSize,  true);	  archive.packPos    =    readUint64(header,    signature,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	94	None	replace
12	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  fileName,  signature);	  archive.packPos    =    readUint64(header,    true,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	24	None	replace
13	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  signature,  fileName);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  signature,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  signature,  fileName);	  archive.packPos    =    readUint64(header,    true,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	24	None	replace
14	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  fileName,  header);	  archive.packPos    =    readUint64(header,    true,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
15	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  nid,  fileName);  [CE]  cannot  find  symbol  nid  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  nid,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  nid,  fileName);	  archive.packPos    =    readUint64(header,    true,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	24	None	replace
16	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  nid);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  fileName,  nid);	  archive.packPos    =    readUint64(header,    true,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	24	None	replace
17	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  nid);  [CE]  cannot  find  symbol  nid  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  nid);	  archive.packPos    =    readUint64(header,    false,    header);    	non-compiled	[CE]  cannot  find  symbol  nid	27	None	replace
18	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  true);	  archive.packPos    =    readUint64(header,    false,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	27	None	replace
19	[BUG]  [BUGGY]  archives.packPos  =  readUint64(header,  false,  header);  [CE]  cannot  find  symbol  archives  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archives.packPos  =  readUint64(header,  false,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archives.packPos  =  readUint64(header,  false,  header);	  archive.packPos    =    readUint64(header,    false,    header);    	non-compiled	[CE]  cannot  find  symbol  archives	27	None	replace
20	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  false);	  archive.packPos    =    readUint64(header,    fileName,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
21	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  false,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  false,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  false,  header);	  archive.packPos    =    readUint64(header,    fileName,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
22	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  false);  [CE]  cannot  find  symbol  nid  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  false);	  archive.packPos    =    readUint64(header,    fileName,    false);    	non-compiled	[CE]  cannot  find  symbol  nid	11	None	replace
23	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false),  header.readUnsignedByte());  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false),  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false),  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
24	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false)?  header.readUnsignedByte()  :  header.readUnsignedByte();  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false)?  header.readUnsignedByte()  :  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false)?  header.readUnsignedByte()  :  header.readUnsignedByte();	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
25	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false)-  header.readUnsignedByte());  [CE]  ';'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false)-  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false)-  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
26	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false)+  header.readUnsignedByte());  [CE]  ';'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false)+  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false)+  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
27	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false)?  header.readUnsignedByte()  :  header.readUnsignedByte());  [CE]  ';'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false)?  header.readUnsignedByte()  :  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false)?  header.readUnsignedByte()  :  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
28	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive.packPos());  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive.packPos());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  archive.packPos());	  archive.packPos    =    readUnsignedByte(0);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
29	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.fileName,  fileName);  [CE]  cannot  find  symbol  fileName  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.fileName,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.fileName,  fileName);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  fileName	33	None	replace
30	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	33	None	replace
31	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive,  signature);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  archive,  signature);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  signature	33	None	replace
32	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  fileName,  archive);  [CE]  cannot  find  symbol  dataInput  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  fileName,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  dataInput,  fileName,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  dataInput	33	None	replace
33	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	33	None	replace
34	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	33	None	replace
35	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  archive.packPos);	  archive.packPos    =    readUint64(header,    header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	83	None	replace
36	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPos,  header);	  archive.packPos    =    readUint64(header,    header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	83	None	replace
37	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  fileName,  signature);	  archive.packPos    =    readUint64(header,    archive,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	69	None	replace
38	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  fileName,  header);	  archive.packPos    =    readUint64(header,    archive,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	69	None	replace
39	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  nid);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  fileName,  nid);	  archive.packPos    =    readUint64(header,    archive,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	69	None	replace
40	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  signature,  fileName);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  signature,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  signature,  fileName);	  archive.packPos    =    readUint64(header,    archive,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	69	None	replace
41	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  fileName,  numPackStreams);	  archive.packPos    =    readUint64(header,    archive,    fileName);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	69	None	replace
42	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  true);	  archive.packPos    =    readUint64(header,    null,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	30	None	replace
43	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  false,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  false,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  false,  header);	  archive.packPos    =    readUint64(header,    null,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	30	None	replace
44	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  null,  false);	  archive.packPos    =    readUint64(header,    null,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	30	None	replace
45	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  false);	  archive.packPos    =    readUint64(header,    null,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	30	None	replace
46	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  false);	  archive.packPos    =    readUint64(header,    null,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	30	None	replace
47	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  false,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  false,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  false,  fileName);	  archive.packPos    =    readUint64(header,    null,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	30	None	replace
48	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos,  header;  [CE]  ';'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos,  header;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).packPos,  header;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  ';'  expected	70	None	replace
49	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos  +  1;  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos  +  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).packPos  +  1;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
50	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos,  nid;  [CE]  ';'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos,  nid;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).packPos,  nid;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  ';'  expected	70	None	replace
51	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos,  0;  [CE]  ';'  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos,  0;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).packPos,  0;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  ';'  expected	70	None	replace
52	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  i);  [CE]  cannot  find  symbol  i  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  i);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  i);	  archive.packPos    =    readUint64(header,    baseUri);    	non-compiled	[CE]  cannot  find  symbol  i	67	None	replace
53	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  data);  [CE]  cannot  find  symbol  data  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  data);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  data);	  archive.packPos    =    readUint64(header,    baseUri);    	non-compiled	[CE]  cannot  find  symbol  data	67	None	replace
54	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(3);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(3);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(3);	  archive.packPos    =    readUnsignedByte(1);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
55	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(4);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(4);	  archive.packPos    =    readUnsignedByte(1);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
56	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  false);	  archive.packPos    =    readUint64(header,    signature,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	88	None	replace
57	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID.kSize,  false);	  archive.packPos    =    readUint64(header,    signature,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	88	None	replace
58	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  password,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  password,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  password,  false);	  archive.packPos    =    readUint64(header,    signature,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	88	None	replace
59	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    null,    nid);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
60	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  NID);  [CE]  cannot  find  symbol  NID  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  NID);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  NID);	  archive.packPos    =    readUint64(header,    null,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	40	None	replace
61	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  NID.kSize);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  NID.kSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  NID.kSize);	  archive.packPos    =    readUint64(header,    null,    nid);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
62	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.length);  [CE]  cannot  find  symbol  length  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header.length);	  archive.packPos    =    readUint64(header,    null,    nid);    	non-compiled	[CE]  cannot  find  symbol  length	40	None	replace
63	[BUG]  [BUGGY]  Archive.packPos  =  readPackInfo(header);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readPackInfo(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readPackInfo(header);	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
64	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte(header);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUnsignedByte(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte(header);	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
65	[BUG]  [BUGGY]  Archive.packPos  =  readUint64(header);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUint64(header);	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
66	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte(0);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUnsignedByte(0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte(0);	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
67	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte()  +  1;  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUnsignedByte()  +  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte()  +  1;	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
68	[BUG]  [BUGGY]  Archive.packPos  =  readPackInfo(header,  archive);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readPackInfo(header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readPackInfo(header,  archive);	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
69	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packLength);  [CE]  cannot  find  symbol  packLength  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packLength);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packLength);	  archive.packPos    =    readUint64(header,    archive.packSize);    	non-compiled	[CE]  cannot  find  symbol  packLength	32	None	replace
70	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packSize  -  1);  [CE]  cannot  find  symbol  packSize  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packSize  -  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packSize  -  1);	  archive.packPos    =    readUint64(header,    archive.packSize);    	non-compiled	[CE]  cannot  find  symbol  packSize	32	None	replace
71	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPrefix);  [CE]  cannot  find  symbol  packPrefix  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPrefix);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPrefix);	  archive.packPos    =    readUint64(header,    archive.packSize);    	non-compiled	[CE]  cannot  find  symbol  packPrefix	32	None	replace
72	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  archive);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
73	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  nid);  [CE]  cannot  find  symbol  nid  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  nid);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  nid	1	None	replace
74	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  false);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  false);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
75	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  header);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  header);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
76	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  fileName);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  fileName);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
77	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  null);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  null);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
78	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0L,  0L);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0L,  0L);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0L,  0L);	  archive.packPos    =    readUint64(header,    0L);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
79	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  0L);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  0L);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  0L);	  archive.packPos    =    readUint64(header,    0L);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
80	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0L,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0L,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0L,  0);	  archive.packPos    =    readUint64(header,    0L);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
81	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0L,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0L,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0L,  1);	  archive.packPos    =    readUint64(header,    0L);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
82	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0L,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0L,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0L,  header);	  archive.packPos    =    readUint64(header,    0L);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
83	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0L,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0L,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0L,  numPackStreams);	  archive.packPos    =    readUint64(header,    0L);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	58	None	replace
84	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  numPackStreams);	  archive.packPos    =    readUint64(header,    null,    numPackPos);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	78	None	replace
85	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  nid,  header.readUnsignedByte());  [CE]  cannot  find  symbol  nid  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  nid,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  nid,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  nid	95	None	replace
86	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  nid);  [CE]  cannot  find  symbol  nid  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  nid);	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  nid	95	None	replace
87	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  header.readUnsignedByte());  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  nid	95	None	replace
88	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
89	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  signature);  [CE]  cannot  find  symbol  signature  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  signature);	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  signature	95	None	replace
90	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  numPackStreams);	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	95	None	replace
91	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  signature);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	96	None	replace
92	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  fileName);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  fileName);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	96	None	replace
93	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  fileName);  [CE]  cannot  find  symbol  dataInput  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  dataInput,  fileName);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  dataInput	96	None	replace
94	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  header,  fileName);  [CE]  cannot  find  symbol  nid  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  header,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  header,  fileName);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	96	None	replace
95	[BUG]  [BUGGY]  final  long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  long  nid  =  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  long  nid  =  header.readUnsignedByte();	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	51	None	replace
96	[BUG]  [BUGGY]  final  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readUnsignedByte()  +  1;	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	51	None	replace
97	[BUG]  [BUGGY]  final  int  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  archive.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  archive.readUnsignedByte();	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
98	[BUG]  [BUGGY]  final  int  nid  =  header.readEndByte();  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  header.readEndByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readEndByte();	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
99	[BUG]  [BUGGY]  final  int  nid  =  header.readUTF();  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  header.readUTF();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readUTF();	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	51	None	replace
100	[BUG]  [BUGGY]  final  int  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  header.readUnsignedByte(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readUnsignedByte(header);	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	51	None	replace
101	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  header);	  archive.packPos    =    readUint64(header,    null,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	37	None	replace
102	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte()  &  SIGNATURE_HEADER_SIZE;  [CE]  int  cannot  be  dereferenced  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  NID  =  header.readUnsignedByte()  &  SIGNATURE_HEADER_SIZE;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte()  &  SIGNATURE_HEADER_SIZE;	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
103	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte()  -  1;  [CE]  int  cannot  be  dereferenced  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  NID  =  header.readUnsignedByte()  -  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte()  -  1;	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
104	[BUG]  [BUGGY]  final  long  NID  =  header.readUnsignedByte();  [CE]  long  cannot  be  dereferenced  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  long  NID  =  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  long  NID  =  header.readUnsignedByte();	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  long  cannot  be  dereferenced	53	None	replace
105	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  NID  =  header.readUnsignedByte()  +  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte()  +  1;	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
106	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte()  -  6;  [CE]  int  cannot  be  dereferenced  [FE]                          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  NID  =  header.readUnsignedByte()  -  6;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte()  -  6;	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
107	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  NID  =  header.readUnsignedByte(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte(header);	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	53	None	replace
108	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  nid,  header.readUnsignedByte());  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  nid,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  nid,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  nid	84	None	replace
109	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
110	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  nid);  [CE]  cannot  find  symbol  nid  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  nid);	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  nid	84	None	replace
111	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  false,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  false,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  false,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
112	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  fileName);	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
113	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  buffer,  header.readUnsignedByte());  [CE]  cannot  find  symbol  buffer  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  buffer,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  buffer,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  buffer	84	None	replace
114	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.values();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
115	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.values();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
116	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.values();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  header.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
117	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.values();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  archive.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
118	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.values();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  currentFolderInputStream.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
119	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.values());  [CE]  cannot  find  symbol  length  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.values());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.values());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol  length	63	None	replace
120	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  0,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  0,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  0,  1);	  archive.packPos    =    readUint64(header,    0,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	44	None	replace
121	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0,  1);	  archive.packPos    =    readUint64(header,    0,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	44	None	replace
122	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  0,  1);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  0,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  0,  1);	  archive.packPos    =    readUint64(header,    0,    1);    	non-compiled	[CE]  cannot  find  symbol  nid	44	None	replace
123	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  0,  1);	  archive.packPos    =    readUint64(header,    0,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	44	None	replace
124	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  0);	  archive.packPos    =    readUint64(header,    0,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	44	None	replace
125	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  numPackStreams);	  archive.packPos    =    readUint64(header,    0,    1);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	44	None	replace
126	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  nid);  [CE]  cannot  find  symbol  nid  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  nid);	  archive.packPos    =    readUint64(header,    archive,    header);    	non-compiled	[CE]  cannot  find  symbol  nid	68	None	replace
127	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  numPackStreams);	  archive.packPos    =    readUint64(header,    archive,    header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	68	None	replace
128	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  null);	  archive.packPos    =    readUint64(header,    archive,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
129	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  null);	  archive.packPos    =    readUint64(header,    header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
130	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  null);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  null);	  archive.packPos    =    readUint64(header,    header,    null);    	non-compiled	[CE]  cannot  find  symbol  nid	39	None	replace
131	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  null,  fileName);	  archive.packPos    =    readUint64(header,    header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
132	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  7ZSignature);  [CE]  ')'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  7ZSignature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  7ZSignature);	  archive.packPos    =    readUint64(header,    signature,    fileName);    	non-compiled	[CE]  ')'  expected	97	None	replace
133	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    signature,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	97	None	replace
134	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID.kSize,  fileName);	  archive.packPos    =    readUint64(header,    signature,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	97	None	replace
135	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  password,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  password,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  password,  fileName);	  archive.packPos    =    readUint64(header,    signature,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	97	None	replace
136	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  header);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
137	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  numPackStreams);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	46	None	replace
138	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  nid);  [CE]  cannot  find  symbol  nid  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  nid);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  cannot  find  symbol  nid	46	None	replace
139	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  header.length);  [CE]  cannot  find  symbol  length  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  header.length);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  cannot  find  symbol  length	46	None	replace
140	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  fileName);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
141	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  0);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
142	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length);  [CE]  cannot  find  symbol  length  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  length	50	None	replace
143	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	50	None	replace
144	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	50	None	replace
145	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(numPackStreams);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	50	None	replace
146	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  might  not  have  been  initialized  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  variable  deferredBlockStreams  might  not  have  been  initialized	50	None	replace
147	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	50	None	replace
148	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  signature);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	38	None	replace
149	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  0);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	38	None	replace
150	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  nid);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  nid);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	38	None	replace
151	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  header,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header,  fileName);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	38	None	replace
152	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  header.length);  [CE]  cannot  find  symbol  length  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  header.length);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  cannot  find  symbol  length	38	None	replace
153	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  4);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  4);	  archive.packPos    =    readUint64(header,    4);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	75	None	replace
154	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  4  +  header);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  4  +  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  4  +  header);	  archive.packPos    =    readUint64(header,    4);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	75	None	replace
155	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  file);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  file);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  file);	  archive.packPos    =    readPackInfo(header,    sourceFile);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	60	None	replace
156	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  null);  [CE]  incompatible  types  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  null);	  archive.packPos    =    readPackInfo(header,    sourceFile);    	non-compiled	[CE]  incompatible  types	60	None	replace
157	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  header.length);  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0,  header.length);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
158	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0,  header);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
159	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  nid);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0,  nid);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  cannot  find  symbol  nid	9	None	replace
160	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0,  numPackStreams);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	9	None	replace
161	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  100);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  100);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  100);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
162	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  0);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
163	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID.kSize,  1);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	45	None	replace
164	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  2);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  2);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  2);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  cannot  find  symbol  nid	45	None	replace
165	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  1);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	45	None	replace
166	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  1);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	45	None	replace
167	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  nid);  [CE]  cannot  find  symbol  nid  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPos,  nid);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  nid	31	None	replace
168	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPos,  0);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	31	None	replace
169	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPos,  signature);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	31	None	replace
170	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPos,  fileName);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	31	None	replace
171	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPos,  numPackStreams);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	31	None	replace
172	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
173	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  inputStreamStack.length());  [CE]  cannot  find  symbol  inputStreamStack  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  inputStreamStack.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  inputStreamStack.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	64	None	replace
174	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length()  +  1);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length()  +  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length()  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
175	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length(),  archive.length());  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length(),  archive.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length(),  archive.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
176	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length(),  header.length());  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length(),  header.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length(),  header.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
177	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  header.length());  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  header.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  header.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
178	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  signature);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64,  signature);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  cannot  find  symbol  signature	98	None	replace
179	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64,  header);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	98	None	replace
180	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  nid);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64,  nid);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  cannot  find  symbol  nid	98	None	replace
181	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  32);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  32);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  32);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	98	None	replace
182	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64,  numPackStreams);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	98	None	replace
183	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64,  0);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	98	None	replace
184	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  64,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  64,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  64,  fileName);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	98	None	replace
185	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readPackInfo();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readPackInfo();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  header.readPackInfo();	  archive.packPos    =    readUnsignedByte()    +    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
186	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.byteValue();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.byteValue();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  header.byteValue();	  archive.packPos    =    readUnsignedByte()    +    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
187	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(header);	  archive.packPos    =    readUnsignedByte()    +    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
188	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  password);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  password);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  password);	  archive.packPos    =    readUint64(header,    archive,    signature);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	34	None	replace
189	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    archive,    signature);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	34	None	replace
190	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  7ZSignature);  [CE]  ')'  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  7ZSignature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  7ZSignature);	  archive.packPos    =    readUint64(header,    archive,    signature);    	non-compiled	[CE]  ')'  expected	34	None	replace
191	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  NID.kSize);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  NID.kSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  NID.kSize);	  archive.packPos    =    readUint64(header,    archive,    signature);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	34	None	replace
192	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header,  archive);	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	92	None	replace
193	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.length);  [CE]  cannot  find  symbol  length  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header,  archive.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header,  archive.length);	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	92	None	replace
194	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packSizes);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packSizes);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header,  archive.packSizes);	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	92	None	replace
195	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header.length);	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	92	None	replace
196	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header,  archive.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header,  archive.readUnsignedByte());	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
197	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.kSize);  [CE]  cannot  find  symbol  kSize  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header,  archive.kSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header,  archive.kSize);	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  kSize	92	None	replace
198	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
199	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  1);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
200	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length(),  header);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length(),  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length(),  header);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
201	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  1);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
202	[BUG]  [BUGGY]  final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
203	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  /  2);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  /  2);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  /  2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
204	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  0,  header.length);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  0,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  0,  header.length);	  archive.packPos    =    readUint64(header,    true,    0);    	non-compiled	[CE]  cannot  find  symbol  length	25	None	replace
205	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  0);	  archive.packPos    =    readUint64(header,    true,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
206	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  1);	  archive.packPos    =    readUint64(header,    true,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
207	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  4);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  4);	  archive.packPos    =    readUint64(header,    true,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
208	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  100);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  100);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  100);	  archive.packPos    =    readUint64(header,    true,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
209	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID.kSize);	  archive.packPos    =    readUint64(header,    numPackPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	66	None	replace
210	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  int  nid  =  archive.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	int  nid  =  archive.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
211	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	91	None	replace
212	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  header.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	91	None	replace
213	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  possible  loss  of  precision  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	byte  nid  =  header.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  possible  loss  of  precision	91	None	replace
214	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  true,  true);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
215	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  false,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  false,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  false,  header);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
216	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  false,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  false,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  true,  false,  header);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
217	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  true,  false);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
218	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  false,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  false,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  false,  fileName);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
219	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  true,  false);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
220	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  this.inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  this.inputStreamStack);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  this.inputStreamStack);	  archive.packPos    =    readPackInfo(header,    source);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	61	None	replace
221	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  header);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	12	None	replace
222	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  signature);  [CE]  cannot  find  symbol  signature  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  signature);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  cannot  find  symbol  signature	12	None	replace
223	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  null);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	12	None	replace
224	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  nid);  [CE]  cannot  find  symbol  nid  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  nid);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  cannot  find  symbol  nid	12	None	replace
225	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  numPackStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  numPackStreams);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	12	None	replace
226	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  currentFolderIndex);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  currentFolderIndex);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	81	None	replace
227	[BUG]  [BUGGY]  archive.packPos  =  readUint64(currentFolderIndex,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(currentFolderIndex,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(currentFolderIndex,  header);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	81	None	replace
228	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  currentFolderIndex);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  currentFolderIndex);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	81	None	replace
229	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  nid  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  currentFolderIndex);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  nid	81	None	replace
230	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex,  nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex,  nextHeaderSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  currentFolderIndex,  nextHeaderSize);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	81	None	replace
231	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  entryIndex,  currentFolderIndex);  [CE]  cannot  find  symbol  entryIndex  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  entryIndex,  currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  entryIndex,  currentFolderIndex);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  entryIndex	81	None	replace
232	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  currentFolderIndex,  fileName);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	81	None	replace
233	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  inputStreamStack,  fileName,  deferredBlockStreams);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  inputStreamStack,  fileName,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  inputStreamStack,  fileName,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	71	None	replace
234	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  inputStreamStack,  deferredBlockStreams);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  inputStreamStack,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  inputStreamStack,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	71	None	replace
235	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  DEFAULT_PREFIX,  fileName,  deferredBlockStreams);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  DEFAULT_PREFIX,  fileName,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  DEFAULT_PREFIX,  fileName,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	71	None	replace
236	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  encodedBlockStreams);  [CE]  cannot  find  symbol  encodedBlockStreams  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  encodedBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  encodedBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  encodedBlockStreams	71	None	replace
237	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  deferredBlockStreams,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  deferredBlockStreams,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  deferredBlockStreams,  fileName);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
238	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  outputStreamStack,  deferredBlockStreams);  [CE]  cannot  find  symbol  outputStreamStack  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  outputStreamStack,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  outputStreamStack,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  outputStreamStack	71	None	replace
239	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  deferredBlockStreams,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  deferredBlockStreams,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  deferredBlockStreams,  header);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
240	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.length  -  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.length  -  1);	  archive.packPos    =    readUint64(header,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
241	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.length  +  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.length  +  1);	  archive.packPos    =    readUint64(header,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
242	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.length  -  2);  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.length  -  2);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.length  -  2);	  archive.packPos    =    readUint64(header,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
243	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  nid	87	None	replace
244	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  header);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	87	None	replace
245	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nid);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nid);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  nid	87	None	replace
246	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	87	None	replace
247	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nextHeaderSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nextHeaderSize);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	87	None	replace
248	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  fileName);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	87	None	replace
249	[BUG]  [BUGGY]  final  long  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  long  nid  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  long  nid  =  readUint64(header);	  final    int    nid    =    readUint64(header);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	52	None	replace
250	[BUG]  [BUGGY]  final  byte  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  byte  nid  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  byte  nid  =  readUint64(header);	  final    int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
251	[BUG]  [BUGGY]  final  double  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  double  nid  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  double  nid  =  readUint64(header);	  final    int    nid    =    readUint64(header);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	52	None	replace
252	[BUG]  [BUGGY]  final  int  nid  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  readUint64(header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  readUint64(header,  archive);	  final    int    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
253	[BUG]  [BUGGY]  final  char  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  char  nid  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  char  nid  =  readUint64(header);	  final    int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
254	[BUG]  [BUGGY]  final  short  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  short  nid  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  short  nid  =  readUint64(header);	  final    int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
255	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
256	[BUG]  [BUGGY]  final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
257	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
258	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
259	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
260	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
261	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
262	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
263	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
264	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  header,  nid);  [CE]  cannot  find  symbol  nid  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  header,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  header,  nid);	  archive.packPos    =    readUint64(header,    true,    header);    	non-compiled	[CE]  cannot  find  symbol  nid	22	None	replace
265	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  header,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  header,  fileName);	  archive.packPos    =    readUint64(header,    true,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	22	None	replace
266	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  NID.kSize);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  NID.kSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  NID.kSize);	  archive.packPos    =    readUint64(header,    fileName,    key);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	73	None	replace
267	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  DEFERRED_BLOCKS);  [CE]  cannot  find  symbol  DEFERRED_BLOCKS  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  DEFERRED_BLOCKS);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  DEFERRED_BLOCKS);	  archive.packPos    =    readUint64(header,    fileName,    key);    	non-compiled	[CE]  cannot  find  symbol  DEFERRED_BLOCKS	73	None	replace
268	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	48	None	add
269	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
270	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    final  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	48	None	add
271	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
272	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  readUint64(header);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  readUint64(header);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	48	None	add
273	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	48	None	add
274	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	48	None	add
275	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  sourceFile);  [CE]  cannot  find  symbol  sourceFile  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  sourceFile);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  sourceFile);	  archive.packPos    =    readUint64(header,    fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	7	None	replace
276	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer);  [CE]  cannot  find  symbol  buffer  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  buffer);	  archive.packPos    =    readUint64(header,    fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  buffer	7	None	replace
277	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  nid);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  nid);	  archive.packPos    =    readUint64(header,    fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  nid	7	None	replace
278	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  true);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
279	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  true,  header);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
280	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  fileName,  true);  [CE]  cannot  find  symbol  nid  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  fileName,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  fileName,  true);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  cannot  find  symbol  nid	10	None	replace
281	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  nid);  [CE]  cannot  find  symbol  nid  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  true,  nid);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  cannot  find  symbol  nid	10	None	replace
282	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID.kSize,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID.kSize,  archive);	  archive.packPos    =    readUint64(header,    nid,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
283	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  archive);	  archive.packPos    =    readUint64(header,    nid,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
284	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  archive);	  archive.packPos    =    readUint64(header,    nid,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
285	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  JSON_HEADER_SIZE,  archive);  [CE]  cannot  find  symbol  JSON_HEADER_SIZE  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  JSON_HEADER_SIZE,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  JSON_HEADER_SIZE,  archive);	  archive.packPos    =    readUint64(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  JSON_HEADER_SIZE	36	None	replace
286	[BUG]  [BUGGY]  archive.packPos  =  readUint64(this.header,  header);  [CE]  cannot  find  symbol  header  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(this.header,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(this.header,  header);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  header	82	None	replace
287	[BUG]  [BUGGY]  archive.packPos  =  readUint64(nextHeader,  this.header);  [CE]  cannot  find  symbol  nextHeader  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(nextHeader,  this.header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(nextHeader,  this.header);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  nextHeader	82	None	replace
288	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  this.headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  this.headerSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  this.headerSize);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  headerSize	82	None	replace
289	[BUG]  [BUGGY]  archive.packPos  =  readUint64(currentFolder,  this.header);  [CE]  cannot  find  symbol  currentFolder  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(currentFolder,  this.header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(currentFolder,  this.header);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	82	None	replace
290	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  this.headerLength);  [CE]  cannot  find  symbol  headerLength  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  this.headerLength);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  this.headerLength);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  headerLength	82	None	replace
291	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  0,  header.length);  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  0,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  0,  header.length);	  archive.packPos    =    readPackInfo(header,    0);    	non-compiled	[CE]  cannot  find  symbol  length	59	None	replace
292	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  0);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  0);	  archive.packPos    =    readPackInfo(header,    0);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
293	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  null,  0);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  null,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  null,  0);	  archive.packPos    =    readPackInfo(header,    0);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
294	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  0,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  0,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  0,  header);	  archive.packPos    =    readPackInfo(header,    0);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
295	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  1);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  1);	  archive.packPos    =    readPackInfo(header,    0);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
296	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte(header,  archive.packPos);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUnsignedByte(header,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte(header,  archive.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	89	None	replace
297	[BUG]  [BUGGY]  archives.packPos  =  readUnsignedByte(header,  archive.packPos);  [CE]  cannot  find  symbol  archives  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archives.packPos  =  readUnsignedByte(header,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archives.packPos  =  readUnsignedByte(header,  archive.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  archives	89	None	replace
298	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archives.packPos);  [CE]  cannot  find  symbol  archives  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archives.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  archives.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  archives	89	None	replace
299	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive.packPos  +  1);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive.packPos  +  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  archive.packPos  +  1);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
300	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
301	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [CE]  cannot  find  symbol  length  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  length	47	None	replace
302	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	47	None	replace
303	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  signature);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	17	None	replace
304	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  true);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  true);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
305	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  nid);  [CE]  cannot  find  symbol  nid  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  nid);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	17	None	replace
306	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  false);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
307	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  null);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  null);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
308	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  NID);  [CE]  cannot  find  symbol  NID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  NID);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  NID);	  archive.packPos    =    readUint64(header,    fileName,    signature);    	non-compiled	[CE]  cannot  find  symbol  NID	6	None	replace
309	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  inputStreamStack);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  inputStreamStack);	  archive.packPos    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	14	None	replace
310	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  fileName,  signature);	  archive.packPos    =    readUint64(header,    false,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	28	None	replace
311	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  fileName,  header);	  archive.packPos    =    readUint64(header,    false,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	28	None	replace
312	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  header,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  header,  fileName);	  archive.packPos    =    readUint64(header,    false,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	28	None	replace
313	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  signature,  fileName);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  signature,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  signature,  fileName);	  archive.packPos    =    readUint64(header,    false,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	28	None	replace
314	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  nid);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  fileName,  nid);	  archive.packPos    =    readUint64(header,    false,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	28	None	replace
315	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  false,  fileName);	  archive.packPos    =    readPackInfo(header,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	19	None	replace
316	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  false,  header);	  archive.packPos    =    readPackInfo(header,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	19	None	replace
317	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  header.readUnsignedByte());  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  false,  header.readUnsignedByte());	  archive.packPos    =    readPackInfo(header,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	19	None	replace
318	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  null,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  null,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  null,  false);	  archive.packPos    =    readPackInfo(header,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	19	None	replace
319	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  true);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  false,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  false,  true);	  archive.packPos    =    readPackInfo(header,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	19	None	replace
320	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  true,  fileName);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	21	None	replace
321	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  true,  header);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	21	None	replace
322	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  true,  false);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	21	None	replace
323	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  nid);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  true,  nid);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  cannot  find  symbol  nid	21	None	replace
324	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  0);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  true,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  true,  0);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	21	None	replace
325	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  SIGNATURE_HEADER_SIZE,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  SIGNATURE_HEADER_SIZE,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  SIGNATURE_HEADER_SIZE,  1);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
326	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  SIGNATURE_HEADER_SIZE,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  SIGNATURE_HEADER_SIZE,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  SIGNATURE_HEADER_SIZE,  1);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
327	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nid,  1);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nid,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  nid,  1);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  cannot  find  symbol  nid	42	None	replace
328	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  0);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
329	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE,  1);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE,  1);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  cannot  find  symbol  nid	42	None	replace
330	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  NID.kSize,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  NID.kSize,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  NID.kSize,  1);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
331	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  /  1;  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  /  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  /  1;	  archive.packPos    =    readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
332	[BUG]  [BUGGY]  archives.packPos  =  readUnsignedByte();  [CE]  cannot  find  symbol  archives  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archives.packPos  =  readUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archives.packPos  =  readUnsignedByte();	  archive.packPos    =    readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  archives	3	None	replace
333	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  1;  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  -  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  1;	  archive.packPos    =    readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
334	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  nid);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  nid);	  archive.packPos    =    readUint64(header,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  nid	86	None	replace
335	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  UID.kSize,  header.readUnsignedByte());  [CE]  cannot  find  symbol  UID  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  UID.kSize,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  UID.kSize,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  UID	86	None	replace
336	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  fileName);	  archive.packPos    =    readUint64(header,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	86	None	replace
337	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  Collections.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
338	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(length);  [CE]  cannot  find  symbol  length  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(length);	  ArrayList    <    String>    deferredBlockStreams    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  length	54	None	replace
339	[BUG]  [BUGGY]  final  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  Collections  [FE]                        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	54	None	replace
340	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  SIGNATURE_HEADER_SIZE);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readPackInfo(header,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	18	None	replace
341	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  NID);  [CE]  cannot  find  symbol  NID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  NID);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  NID);	  archive.packPos    =    readPackInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	18	None	replace
342	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  UID);  [CE]  cannot  find  symbol  UID  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  UID);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  UID);	  archive.packPos    =    readPackInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  UID	18	None	replace
343	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  true);	  archive.packPos    =    readUint64(header,    header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	80	None	replace
344	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  true);  [CE]  cannot  find  symbol  dataInput  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  dataInput,  true);	  archive.packPos    =    readUint64(header,    header,    true);    	non-compiled	[CE]  cannot  find  symbol  dataInput	80	None	replace
345	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  header.length);  [CE]  cannot  find  symbol  length  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  0,  header.length);	  archive.packPos    =    readUint64(header,    null,    0);    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
346	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  null,  0);	  archive.packPos    =    readUint64(header,    null,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
347	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  0,  0);	  archive.packPos    =    readUint64(header,    null,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
348	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  0);	  archive.packPos    =    readUint64(header,    null,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
349	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  2);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  2);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  2);	  archive.packPos    =    readUint64(header,    fileName,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
350	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  1);	  archive.packPos    =    readUint64(header,    fileName,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
351	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  3);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  3);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  3);	  archive.packPos    =    readUint64(header,    fileName,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
352	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo.length);  [CE]  cannot  find  symbol  packInfo  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packInfo.length);	  archive.packPos    =    readUint64(header,    archive.packInfo);    	non-compiled	[CE]  cannot  find  symbol  packInfo	35	None	replace
353	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packName);  [CE]  cannot  find  symbol  packName  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packName);	  archive.packPos    =    readUint64(header,    archive.packInfo);    	non-compiled	[CE]  cannot  find  symbol  packName	35	None	replace
354	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.packPos);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.packPos);	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	16	None	replace
355	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.packPos());  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.packPos());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.packPos());	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
356	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.packSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.packSize);	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packSize	16	None	replace
357	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.bodyPos);  [CE]  cannot  find  symbol  bodyPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.bodyPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.bodyPos);	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  bodyPos	16	None	replace
358	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    true,    nid);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
359	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  NID);  [CE]  cannot  find  symbol  NID  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  NID);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  NID);	  archive.packPos    =    readUint64(header,    true,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	26	None	replace
360	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  null);	  archive.packPos    =    readUint64(header,    true,    nid);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
361	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  1);  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.length  -  1);	  archive.packPos    =    readUint64(header,    0,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
362	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  +  1);  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  +  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.length  +  1);	  archive.packPos    =    readUint64(header,    0,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
363	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  2);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  2);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.length  -  2);	  archive.packPos    =    readUint64(header,    0,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
364	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  4);  [CE]  cannot  find  symbol  length  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.length  -  4);	  archive.packPos    =    readUint64(header,    0,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
365	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  6);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  6);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.length  -  6);	  archive.packPos    =    readUint64(header,    0,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
366	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID);  [CE]  cannot  find  symbol  NID  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID);	  archive.packPos    =    readUint64(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	13	None	replace
367	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  false);	  archive.packPos    =    readUint64(header,    header,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
368	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  false);	  archive.packPos    =    readUint64(header,    header,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
369	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  this.nid);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  this.nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  this.nid);	  archive.packPos    =    readUint64(header,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  nid	8	None	replace
370	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
371	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
372	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
373	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
374	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
375	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  ArrayList.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  ArrayList.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  ArrayList.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
376	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  0,  header);	  archive.packPos    =    readUint64(header,    0,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	57	None	replace
377	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  nid);  [CE]  cannot  find  symbol  nid  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  nid);	  archive.packPos    =    readUint64(header,    0,    header);    	non-compiled	[CE]  cannot  find  symbol  nid	57	None	replace
378	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  1,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  1,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  1,  header);	  archive.packPos    =    readUint64(header,    0,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	57	None	replace
379	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  6);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  6);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  6);	  archive.packPos    =    readUint64(header,    fileName,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
380	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  [CE]  no  suitable  constructor  found  for  ArrayList(DataInput)  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(DataInput)	50	None	replace
381	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  currentFolderIndex,  header);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	81	None	replace
382	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  index,  currentFolderIndex);  [CE]  cannot  find  symbol  index  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  index,  currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  index,  currentFolderIndex);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  index	81	None	replace
383	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  key);  [CE]  cannot  find  symbol  key  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName,  key);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  fileName,  key);	  archive.packPos    =    readUint64(header,    false,    fileName);    	non-compiled	[CE]  cannot  find  symbol  key	28	None	replace
384	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  DeferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  DeferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  DeferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	48	None	add
385	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
386	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
387	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
388	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	49	12	replace
389	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(6);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(6);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(6);	  archive.packPos    =    readUnsignedByte(2);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
390	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  7ZSignature);  [CE]  ')'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  7ZSignature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  7ZSignature);	  archive.packPos    =    readUint64(header,    4);    	non-compiled	[CE]  ')'  expected	75	None	replace
391	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  6);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  6);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  6);	  archive.packPos    =    readUint64(header,    4);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	75	None	replace
392	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  64);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  64);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  64);	  archive.packPos    =    readUint64(header,    4);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	75	None	replace
393	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true)+  header.readUnsignedByte());  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true)+  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true)+  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
394	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true)-  header.readUnsignedByte());  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true)-  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true)-  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
395	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte()  -  1);  [CE]  ';'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte()  -  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte()  -  1);	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
396	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte(),  header.length);  [CE]  ';'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte(),  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte(),  header.length);	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
397	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.values();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  inputStreamStack.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
398	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  source);  [CE]  cannot  find  symbol  source  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  source);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  source);	  archive.packPos    =    readUint64(header,    null,    header);    	non-compiled	[CE]  cannot  find  symbol  source	37	None	replace
399	[BUG]  [BUGGY]  archives.packPos  =  readUint64(header,  null,  header);  [CE]  cannot  find  symbol  archives  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archives.packPos  =  readUint64(header,  null,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archives.packPos  =  readUint64(header,  null,  header);	  archive.packPos    =    readUint64(header,    null,    header);    	non-compiled	[CE]  cannot  find  symbol  archives	37	None	replace
400	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  sourceName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  sourceName);	  archive.packPos    =    readUint64(header,    null,    header);    	non-compiled	[CE]  cannot  find  symbol  sourceName	37	None	replace
401	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  12);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  12);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  12);	  archive.packPos    =    readUint64(header,    true,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
402	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packStackPos);  [CE]  cannot  find  symbol  packStackPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packStackPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packStackPos);	  archive.packPos    =    readUint64(header,    archive.packSize);    	non-compiled	[CE]  cannot  find  symbol  packStackPos	32	None	replace
403	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);  [CE]  cannot  find  symbol  Lists  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	47	None	replace
404	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(header);  [CE]  cannot  find  symbol  Lists  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(header);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	47	None	replace
405	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	38	None	replace
406	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  i);  [CE]  cannot  find  symbol  i  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName,  i);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName,  i);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  cannot  find  symbol  i	38	None	replace
407	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  fileName);	  archive.packPos    =    readUint64(header,    signature,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	97	None	replace
408	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  null,  true);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  null,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  null,  true);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	21	None	replace
409	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  signature,  true);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  signature,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  signature,  true);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  cannot  find  symbol  signature	21	None	replace
410	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  i);  [CE]  cannot  find  symbol  i  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  i);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64,  i);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  cannot  find  symbol  i	98	None	replace
411	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  NID  =  header.readUnsignedByte(0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte(0);	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	53	None	replace
412	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  header,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  header,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  header,  null);	  archive.packPos    =    readUint64(header,    header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
413	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  header,  archive);  [CE]  cannot  find  symbol  dataInput  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  dataInput,  header,  archive);	  archive.packPos    =    readUint64(header,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  dataInput	83	None	replace
414	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  baseUri,  archive);  [CE]  cannot  find  symbol  baseUri  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  baseUri,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  baseUri,  archive);	  archive.packPos    =    readUint64(header,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  baseUri	83	None	replace
415	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  baseUri,  archive);  [CE]  cannot  find  symbol  baseUri  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  baseUri,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  baseUri,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  baseUri	33	None	replace
416	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  i,  archive);  [CE]  cannot  find  symbol  i  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  i,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  i,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  i	33	None	replace
417	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer,  archive);  [CE]  cannot  find  symbol  buffer  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  buffer,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  buffer	33	None	replace
418	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  dataInput,  archive);  [CE]  cannot  find  symbol  dataInput  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  dataInput,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  dataInput,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  dataInput	33	None	replace
419	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  WARNING_SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  WARNING_SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  WARNING_SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    fileName,    signature);    	non-compiled	[CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE	6	None	replace
420	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte(header,  archive);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUnsignedByte(header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte(header,  archive);	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
421	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte(1);  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Archive.packPos  =  readUnsignedByte(1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte(1);	  Archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	4	None	replace
422	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  0);	  archive.packPos    =    readUint64(header,    archive,    signature);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	34	None	replace
423	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  1,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  1,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  1,  0);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
424	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  headerSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0,  headerSize);	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  cannot  find  symbol  headerSize	9	None	replace
425	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  deferredBlockStreams);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  deferredBlockStreams);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
426	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  sourceFile);  [CE]  cannot  find  symbol  sourceFile  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  sourceFile);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  sourceFile);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	17	None	replace
427	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  encoder);  [CE]  cannot  find  symbol  encoder  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  encoder);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  encoder);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  encoder	17	None	replace
428	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  0);	  archive.packPos    =    readUint64(header,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	86	None	replace
429	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  header);	  archive.packPos    =    readUint64(header,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	86	None	replace
430	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  HEAD_SIZE);  [CE]  cannot  find  symbol  HEAD_SIZE  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  HEAD_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  HEAD_SIZE);	  archive.packPos    =    readUint64(header,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  HEAD_SIZE	8	None	replace
431	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos();  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).packPos();	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
432	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive),  header.packPos;  [CE]  ';'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive),  header.packPos;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive),  header.packPos;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  ';'  expected	70	None	replace
433	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos  -  1;  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos  -  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).packPos  -  1;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
434	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive).packPos;  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive).packPos;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  archive).packPos;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
435	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).loadPos();  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive).loadPos();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).loadPos();	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
436	[BUG]  [BUGGY]  archive.packPos  =  readUint64(fileName,  archive,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(fileName,  archive,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(fileName,  archive,  header);	  archive.packPos    =    readUint64(header,    archive,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	69	None	replace
437	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  sourceFile,  fileName);  [CE]  cannot  find  symbol  sourceFile  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  sourceFile,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  sourceFile,  fileName);	  archive.packPos    =    readUint64(header,    archive,    fileName);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	69	None	replace
438	[BUG]  [BUGGY]  archive.packPos  =  readUint64(sourceName,  this.header);  [CE]  cannot  find  symbol  sourceName  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(sourceName,  this.header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(sourceName,  this.header);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  sourceName	82	None	replace
439	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  0);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  0);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
440	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  7ZSignature,  false);  [CE]  ')'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  7ZSignature,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  7ZSignature,  false);	  archive.packPos    =    readUint64(header,    signature,    false);    	non-compiled	[CE]  ')'  expected	88	None	replace
441	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  inputStreamStack);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  inputStreamStack);	  archive.packPos    =    readUint64(header,    fileName,    source);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	74	None	replace
442	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  baseUri);  [CE]  cannot  find  symbol  baseUri  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  baseUri);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  baseUri);	  archive.packPos    =    readUint64(header,    archive,    header);    	non-compiled	[CE]  cannot  find  symbol  baseUri	68	None	replace
443	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  7ZSignature);  [CE]  ')'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  7ZSignature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  7ZSignature);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  ')'  expected	42	None	replace
444	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  6);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  6);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  6);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
445	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  -1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  -1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  -1);	  archive.packPos    =    readUint64(header,    null,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
446	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  4);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  4);	  archive.packPos    =    readUint64(header,    null,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
447	[BUG]  [BUGGY]  archives.packPos  =  readUint64(header,  true,  header);  [CE]  cannot  find  symbol  archives  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archives.packPos  =  readUint64(header,  true,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archives.packPos  =  readUint64(header,  true,  header);	  archive.packPos    =    readUint64(header,    true,    header);    	non-compiled	[CE]  cannot  find  symbol  archives	22	None	replace
448	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  source);  [CE]  cannot  find  symbol  source  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  source);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  source);	  archive.packPos    =    readUint64(header,    true,    header);    	non-compiled	[CE]  cannot  find  symbol  source	22	None	replace
449	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
450	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer,  deferredBlockStreams);  [CE]  cannot  find  symbol  buffer  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  buffer,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  buffer	71	None	replace
451	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  1,  0);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  1,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  1,  0);	  archive.packPos    =    readPackInfo(header,    0);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
452	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive).length;  [CE]  void  cannot  be  dereferenced  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive).length;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive).length;	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  void  cannot  be  dereferenced	16	None	replace
453	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.length);  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.length);	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
454	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.padding);  [CE]  cannot  find  symbol  padding  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.padding);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.padding);	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  padding	16	None	replace
455	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.sourceName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.sourceName);	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  sourceName	16	None	replace
456	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  true,  false);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
457	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  false);  [CE]  cannot  find  symbol  signature  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  signature,  false);	  archive.packPos    =    readUint64(header,    fileName,    false);    	non-compiled	[CE]  cannot  find  symbol  signature	11	None	replace
458	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte(),  header);	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
459	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  null,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  null,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
460	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  sourceName,  header.readUnsignedByte());  [CE]  cannot  find  symbol  sourceName  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  sourceName,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  sourceName,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  sourceName	84	None	replace
461	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  i,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  i  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  i,  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  i,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  i	87	None	replace
462	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  signature);  [CE]  cannot  find  symbol  signature  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  signature);	  archive.packPos    =    readUint64(header,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  signature	87	None	replace
463	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  NID.kSize);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  NID.kSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  NID.kSize);	  archive.packPos    =    readUint64(header,    true,    nid);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
464	[BUG]  [BUGGY]  final  float  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  float  nid  =  readUint64(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  float  nid  =  readUint64(header);	  final    int    nid    =    readUint64(header);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	52	None	replace
465	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  10);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  10);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  10);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
466	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  100);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  100);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  100);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
467	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte(header);	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
468	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readPackInfo(header);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readPackInfo(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  header.readPackInfo(header);	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
469	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte(0);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte(0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte(0);	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
470	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  SIGNATURE_HEADER_SIZE,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  SIGNATURE_HEADER_SIZE,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  SIGNATURE_HEADER_SIZE,  false);	  archive.packPos    =    readPackInfo(header,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	19	None	replace
471	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  archive.packPos);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	31	None	replace
472	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  NID.kSize);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  NID.kSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  NID.kSize);	  archive.packPos    =    readPackInfo(header,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	18	None	replace
473	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  baseUri);  [CE]  cannot  find  symbol  baseUri  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  baseUri);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  baseUri);	  archive.packPos    =    readUint64(header,    fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  baseUri	7	None	replace
474	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header,  fileName);	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	92	None	replace
475	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  header,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header,  false);	  archive.packPos    =    readUint64(header,    null,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	30	None	replace
476	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceName,  header);  [CE]  cannot  find  symbol  sourceName  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  sourceName,  header);	  archive.packPos    =    readPackInfo(header,    header);    	non-compiled	[CE]  cannot  find  symbol  sourceName	20	None	replace
477	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  archive.length());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  archive.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  archive.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
478	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  file.length());  [CE]  no  suitable  constructor  found  for  ArrayList(DataInput,long)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  file.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  file.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(DataInput,long)	64	None	replace
479	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  source.length());  [CE]  cannot  find  symbol  source  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  source.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  source.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  cannot  find  symbol  source	64	None	replace
480	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(deferredBlockStreams);  [CE]  cannot  find  symbol  Collections  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(deferredBlockStreams);	  ArrayList    <    String>    deferredBlockStreams    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	54	None	replace
481	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(header.readUnsignedByte());  [CE]  cannot  find  symbol  Collections  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList(header.readUnsignedByte());	  ArrayList    <    String>    deferredBlockStreams    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	54	None	replace
482	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  inputStreamStack);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  inputStreamStack);	  archive.packPos    =    readPackInfo(header,    sourceFile);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	60	None	replace
483	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEAFDER_SIZE,  1);  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEAFDER_SIZE,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEAFDER_SIZE,  1);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	45	None	replace
484	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	12	None	replace
485	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer,  null);  [CE]  cannot  find  symbol  buffer  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  buffer,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  buffer,  null);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  cannot  find  symbol  buffer	12	None	replace
486	[BUG]  [BUGGY]  archive.packPos  =  readUint64(fileName,  header,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(fileName,  header,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(fileName,  header,  header);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	96	None	replace
487	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	96	None	replace
488	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  files,  fileName);  [CE]  cannot  find  symbol  files  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  files,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  files,  fileName);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  files	96	None	replace
489	[BUG]  [BUGGY]  archives.packPos  =  readUint64(header,  fileName,  header);  [CE]  cannot  find  symbol  archives  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archives.packPos  =  readUint64(header,  fileName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archives.packPos  =  readUint64(header,  fileName,  header);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  archives	96	None	replace
490	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
491	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  header);	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
492	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte(),  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
493	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  encodedFiles.readUnsignedByte());  [CE]  cannot  find  symbol  encodedFiles  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  encodedFiles.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  encodedFiles.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  encodedFiles	95	None	replace
494	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  0,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  0,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  0,  header);	  archive.packPos    =    readUint64(header,    0,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	57	None	replace
495	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  headerSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  headerSize);	  archive.packPos    =    readUint64(header,    0,    header);    	non-compiled	[CE]  cannot  find  symbol  headerSize	57	None	replace
496	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	int  nid  =  header.readUnsignedByte(header);	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	91	None	replace
497	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  true);	  archive.packPos    =    readUint64(header,    header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	80	None	replace
498	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  true,  fileName);	  archive.packPos    =    readUint64(header,    header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	80	None	replace
499	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  true,  header);	  archive.packPos    =    readUint64(header,    header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	80	None	replace
500	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  key);  [CE]  cannot  find  symbol  key  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName,  key);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  fileName,  key);	  archive.packPos    =    readUint64(header,    true,    fileName);    	non-compiled	[CE]  cannot  find  symbol  key	24	None	replace
501	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  fileName,  archive.packPos);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  fileName,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  fileName,  archive.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
502	[BUG]  [BUGGY]  final  int  nid  =  header.readUnsignedByte()  +  6;  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  header.readUnsignedByte()  +  6;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readUnsignedByte()  +  6;	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	51	None	replace
503	[BUG]  [BUGGY]  final  int  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  header.readUnsignedByte(0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readUnsignedByte(0);	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	51	None	replace
504	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(0);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(0);	  archive.packPos    =    readUnsignedByte()    +    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
505	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.getUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.getUnsignedByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  header.getUnsignedByte();	  archive.packPos    =    readUnsignedByte()    +    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
506	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(1);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte(1);	  archive.packPos    =    readUnsignedByte()    +    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
507	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null,  true);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
508	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  true,  0);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
509	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  signature);  [CE]  cannot  find  symbol  signature  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  true,  signature);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  cannot  find  symbol  signature	10	None	replace
510	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  7ZSignature,  true);  [CE]  ')'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  7ZSignature,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  7ZSignature,  true);	  archive.packPos    =    readUint64(header,    signature,    true);    	non-compiled	[CE]  ')'  expected	94	None	replace
511	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  HEAD_HEADER_SIZE);  [CE]  cannot  find  symbol  HEAD_HEADER_SIZE  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  HEAD_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  HEAD_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  HEAD_HEADER_SIZE	8	None	replace
512	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readEndByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readEndByte();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  header.readEndByte();	  archive.packPos    =    readUnsignedByte()    -    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
513	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  this.header);  [CE]  cannot  find  symbol  header  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  this.header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  this.header);	  archive.packPos    =    readPackInfo(header,    header);    	non-compiled	[CE]  cannot  find  symbol  header	20	None	replace
514	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceFile,  header);  [CE]  cannot  find  symbol  sourceFile  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceFile,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  sourceFile,  header);	  archive.packPos    =    readPackInfo(header,    header);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	20	None	replace
515	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  baseUri);  [CE]  cannot  find  symbol  baseUri  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  baseUri);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  baseUri);	  archive.packPos    =    readPackInfo(header,    header);    	non-compiled	[CE]  cannot  find  symbol  baseUri	20	None	replace
516	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPackSize);  [CE]  cannot  find  symbol  packPackSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPackSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPackSize);	  archive.packPos    =    readUint64(header,    archive.packSize);    	non-compiled	[CE]  cannot  find  symbol  packPackSize	32	None	replace
517	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  DEFERRED_HEADER_SIZE);  [CE]  cannot  find  symbol  DEFERRED_HEADER_SIZE  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  DEFERRED_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  DEFERRED_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    true,    nid);    	non-compiled	[CE]  cannot  find  symbol  DEFERRED_HEADER_SIZE	26	None	replace
518	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header).packPos;  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header).packPos;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header).packPos;	  archive.packPos    =    readUint64(header,    archive).packPos;    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
519	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  true,  0);	  archive.packPos    =    readUint64(header,    header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	80	None	replace
520	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  nid);  [CE]  cannot  find  symbol  nid  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  true,  nid);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  true,  nid);	  archive.packPos    =    readUint64(header,    header,    true);    	non-compiled	[CE]  cannot  find  symbol  nid	80	None	replace
521	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName,  null);  [CE]  cannot  find  symbol  signature  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  fileName,  null);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  cannot  find  symbol  signature	12	None	replace
522	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  null);  [CE]  cannot  find  symbol  signature  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  signature,  null);	  archive.packPos    =    readUint64(header,    fileName,    null);    	non-compiled	[CE]  cannot  find  symbol  signature	12	None	replace
523	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  this.header  +  1);  [CE]  cannot  find  symbol  header  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  this.header  +  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  this.header  +  1);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  header	82	None	replace
524	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  this.headerLabel);  [CE]  cannot  find  symbol  headerLabel  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  this.headerLabel);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  this.headerLabel);	  archive.packPos    =    readUint64(header,    this.header);    	non-compiled	[CE]  cannot  find  symbol  headerLabel	82	None	replace
525	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  false,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  false,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  false,  header);	  archive.packPos    =    readUint64(header,    header,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
526	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  header.readUnsignedByte());  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  header.readUnsignedByte());	  archive.packPos    =    readPackInfo(header,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	18	None	replace
527	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  true);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  true);	  archive.packPos    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
528	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.bodyPosition);  [CE]  cannot  find  symbol  bodyPosition  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  archive.bodyPosition);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive.bodyPosition);	  archive.packPos    =    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  bodyPosition	16	None	replace
529	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
530	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID,  1);  [CE]  cannot  find  symbol  NID  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID,  1);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID,  1);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  cannot  find  symbol  NID	45	None	replace
531	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  4);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  4);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  4);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  cannot  find  symbol  nid	45	None	replace
532	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  3);  [CE]  cannot  find  symbol  nid  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  3);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  3);	  archive.packPos    =    readUint64(header,    nid,    1);    	non-compiled	[CE]  cannot  find  symbol  nid	45	None	replace
533	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
534	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  header.readUnsignedByte());  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  signature,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  signature	95	None	replace
535	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  sourceName,  header.readUnsignedByte());  [CE]  cannot  find  symbol  sourceName  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  sourceName,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  sourceName,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol  sourceName	95	None	replace
536	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  header,  signature);  [CE]  cannot  find  symbol  signature  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  header,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  header,  signature);	  archive.packPos    =    readUint64(header,    false,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	28	None	replace
537	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  int  nid  =  header.readUnsignedInt();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	int  nid  =  header.readUnsignedInt();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
538	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  0);	  archive.packPos    =    readUint64(header,    fileName,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
539	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  signature);	  archive.packPos    =    readUint64(header,    fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  signature	7	None	replace
540	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  i);  [CE]  cannot  find  symbol  i  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header,  i);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header,  i);	  archive.packPos    =    readUint64(header,    fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
541	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
542	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false));  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false));  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false));	  archive.packPos    =    readUint64(header,    true),    header.readUnsignedByte());    	non-compiled	[CE]  ';'  expected	93	None	replace
543	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  this.currentFolderIndex);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  this.currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  this.currentFolderIndex);	  archive.packPos    =    readUint64(header,    fileName,    source);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	74	None	replace
544	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  dataInput);  [CE]  cannot  find  symbol  dataInput  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  dataInput);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  dataInput);	  archive.packPos    =    readUint64(header,    fileName,    source);    	non-compiled	[CE]  cannot  find  symbol  dataInput	74	None	replace
545	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  header;  [CE]  ')'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  header;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  header;	  archive.packPos    =    readUint64(header,    true,    header);    	non-compiled	[CE]  ')'  expected	22	None	replace
546	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  header));  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  header));  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  header));	  archive.packPos    =    readUint64(header,    true,    header);    	non-compiled	[CE]  ';'  expected	22	None	replace
547	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  header).length;  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  header).length;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  header).length;	  archive.packPos    =    readUint64(header,    true,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	22	None	replace
548	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfoLength);  [CE]  cannot  find  symbol  packInfoLength  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfoLength);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packInfoLength);	  archive.packPos    =    readUint64(header,    archive.packInfo);    	non-compiled	[CE]  cannot  find  symbol  packInfoLength	35	None	replace
549	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo)+  1;  [CE]  cannot  find  symbol  packInfo  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo)+  1;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packInfo)+  1;	  archive.packPos    =    readUint64(header,    archive.packInfo);    	non-compiled	[CE]  cannot  find  symbol  packInfo	35	None	replace
550	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo).length;  [CE]  cannot  find  symbol  packInfo  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo).length;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packInfo).length;	  archive.packPos    =    readUint64(header,    archive.packInfo);    	non-compiled	[CE]  cannot  find  symbol  packInfo	35	None	replace
551	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfoSize);  [CE]  cannot  find  symbol  packInfoSize  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfoSize);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packInfoSize);	  archive.packPos    =    readUint64(header,    archive.packInfo);    	non-compiled	[CE]  cannot  find  symbol  packInfoSize	35	None	replace
552	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  header,  true);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  header,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  header,  true);	  archive.packPos    =    readPackInfo(header,    true);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	21	None	replace
553	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  0,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  0,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
554	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header;  [CE]  ')'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  header;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header;	  archive.packPos    =    readUint64(header,    null,    header);    	non-compiled	[CE]  ')'  expected	37	None	replace
555	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header.readUnsignedByte());	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	92	None	replace
556	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.name);  [CE]  cannot  find  symbol  name  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  Integer  nid  =  readUint64(header,  archive.name);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Integer  nid  =  readUint64(header,  archive.name);	          Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  name	92	None	replace
557	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  64);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  64);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  64);	  archive.packPos    =    readUint64(header,    fileName,    64);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	98	None	replace
558	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  header.length);  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(header,  0,  deferredBlockStreams,  0,  header.length);	  	non-compiled	[CE]  cannot  find  symbol  length	48	None	add
559	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  1,  archive.length);  [CE]  cannot  find  symbol  length  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  1,  archive.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(header,  0,  deferredBlockStreams,  1,  archive.length);	  	non-compiled	[CE]  cannot  find  symbol  length	48	None	add
560	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  1,  header.length);  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  1,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(header,  0,  deferredBlockStreams,  1,  header.length);	  	non-compiled	[CE]  cannot  find  symbol  length	48	None	add
561	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64,  deferredBlockStreams);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName,    deferredBlockStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
562	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.length);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header.length);	  archive.packPos    =    readUint64(header,    fileName,    1);    	non-compiled	[CE]  cannot  find  symbol  length	43	None	replace
563	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  header);  [CE]  cannot  find  symbol  nid  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  nid,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  header);	  archive.packPos    =    readUint64(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nid	36	None	replace
564	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  NID,  archive);  [CE]  cannot  find  symbol  NID  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  NID,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  NID,  archive);	  archive.packPos    =    readUint64(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  NID	36	None	replace
565	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  currentFolderIndex);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  currentFolderIndex);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  currentFolderIndex);	  archive.packPos    =    readUint64(header,    currentFolderIndex);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	81	None	replace
566	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  archive.packPos);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	31	None	replace
567	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  archive.packPos);  [CE]  cannot  find  symbol  dataInput  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  dataInput,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  dataInput,  archive.packPos);	  archive.packPos    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  dataInput	31	None	replace
568	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  header));  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  header));  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  header));	  archive.packPos    =    readUint64(header,    false,    header);    	non-compiled	[CE]  ';'  expected	27	None	replace
569	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  header;  [CE]  ')'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  header;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  header;	  archive.packPos    =    readUint64(header,    false,    header);    	non-compiled	[CE]  ')'  expected	27	None	replace
570	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  header).length;  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  false,  header).length;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  header).length;	  archive.packPos    =    readUint64(header,    false,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	27	None	replace
571	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  header.packPos);  [CE]  cannot  find  symbol  packPos  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  header.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  header.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  packPos	89	None	replace
572	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  header,  archive.packPos);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  header,  archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  header,  archive.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
573	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  this.archive.packPos);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  this.archive.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  this.archive.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
574	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  dataInput.packPos);  [CE]  cannot  find  symbol  dataInput  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUnsignedByte(header,  dataInput.packPos);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  dataInput.packPos);	  archive.packPos    =    readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  dataInput	89	None	replace
575	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  0,  header.readUnsignedByte());  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  0,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  0,  header.readUnsignedByte());	  archive.packPos    =    readPackInfo(header,    0);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
576	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte()  -  SIGNATURE_HEADER_SIZE;  [CE]  int  cannot  be  dereferenced  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  NID  =  header.readUnsignedByte()  -  SIGNATURE_HEADER_SIZE;  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte()  -  SIGNATURE_HEADER_SIZE;	  final    int    NID    =    header.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
577	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
578	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100,  signature);  [CE]  cannot  find  symbol  signature  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  100,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100,  signature);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  cannot  find  symbol  signature	46	None	replace
579	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  40);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  40);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  40);	  archive.packPos    =    readUint64(header,    100);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
580	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  signature,  false);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  signature,  false);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  signature,  false);	  archive.packPos    =    readPackInfo(header,    false);    	non-compiled	[CE]  cannot  find  symbol  signature	19	None	replace
581	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	50	12	replace
582	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	50	12	replace
583	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	50	12	replace
584	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	50	12	replace
585	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  true,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  true,  header);	  archive.packPos    =    readUint64(header,    true,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
586	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  3);  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length  -  3);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.length  -  3);	  archive.packPos    =    readUint64(header,    0,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
587	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  NID);  [CE]  cannot  find  symbol  NID  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  NID);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  NID);	  archive.packPos    =    readUint64(header,    archive,    signature);    	non-compiled	[CE]  cannot  find  symbol  NID	34	None	replace
588	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  key);  [CE]  cannot  find  symbol  key  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  archive,  key);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  key);	  archive.packPos    =    readUint64(header,    archive,    signature);    	non-compiled	[CE]  cannot  find  symbol  key	34	None	replace
589	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  sourceName,  header);  [CE]  cannot  find  symbol  sourceName  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  sourceName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  sourceName,  header);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  sourceName	96	None	replace
590	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  7ZSignature);  [CE]  ')'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  7ZSignature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  7ZSignature);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  ')'  expected	96	None	replace
591	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName,  0);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName,  0);	  archive.packPos    =    readUint64(header,    header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	96	None	replace
592	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0L,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0L,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0L,  fileName);	  archive.packPos    =    readUint64(header,    0L);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
593	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName,  archive);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  fileName,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  signature	33	None	replace
594	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  sourceName,  archive);  [CE]  cannot  find  symbol  sourceName  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  sourceName,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  sourceName,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  sourceName	33	None	replace
595	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  archive);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  signature,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  signature	33	None	replace
596	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  header,  archive);  [CE]  cannot  find  symbol  signature  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  signature,  header,  archive);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  header,  archive);	  archive.packPos    =    readUint64(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  signature	33	None	replace
597	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  header.readUnsignedByte());  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName,  header.readUnsignedByte());	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
598	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(fileName,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(fileName,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(fileName,  header);	  archive.packPos    =    readPackInfo(header,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
599	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  sourceName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  sourceName);	  archive.packPos    =    readUint64(header,    signature,    fileName);    	non-compiled	[CE]  cannot  find  symbol  sourceName	97	None	replace
600	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  this.source);  [CE]  cannot  find  symbol  source  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  this.source);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  this.source);	  archive.packPos    =    readPackInfo(header,    source);    	non-compiled	[CE]  cannot  find  symbol  source	61	None	replace
601	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0,  header.readUnsignedByte());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
602	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  this.source);  [CE]  cannot  find  symbol  source  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  this.source);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  this.source);	  archive.packPos    =    readUint64(header,    source);    	non-compiled	[CE]  cannot  find  symbol  source	65	None	replace
603	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  fileName.length());  [CE]  no  suitable  constructor  found  for  ArrayList(DataInput,int)  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  fileName.length());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  fileName.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(header.length());    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(DataInput,int)	64	None	replace
604	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayListWithCapacity(length);  [CE]  cannot  find  symbol  length  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayListWithCapacity(length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayListWithCapacity(length);	  ArrayList    <    String>    deferredBlockStreams    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  length	54	None	replace
605	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  true,  signature);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  signature);	  archive.packPos    =    readUint64(header,    true,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	24	None	replace
606	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  true);  [CE]  cannot  find  symbol  signature  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  signature,  true);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  cannot  find  symbol  signature	10	None	replace
607	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName,  true);  [CE]  cannot  find  symbol  signature  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName,  true);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  fileName,  true);	  archive.packPos    =    readUint64(header,    fileName,    true);    	non-compiled	[CE]  cannot  find  symbol  signature	10	None	replace
608	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.size());  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.size());  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.size());	  archive.packPos    =    readUint64(header,    0,    header);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
609	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  0,  header.length);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header,  0,  header.length);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  0,  header.length);	  archive.packPos    =    readUint64(header,    0,    header);    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
610	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.values();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
611	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  header.values();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  header.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  header.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
612	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  archive.values();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  archive.values();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	List  <  String>  deferredBlockStreams  =  archive.values();	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.values();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
613	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  null);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.readUnsignedByte(),  null);	  archive.packPos    =    readUint64(header,    header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	86	None	replace
614	[BUG]  [BUGGY]  final  int  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  final  int  nid  =  header.readUnsignedInt();  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readUnsignedInt();	  final    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
615	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.size);  [CE]  cannot  find  symbol  size  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  header.size);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.size);	  archive.packPos    =    readUint64(header,    header.length);    	non-compiled	[CE]  cannot  find  symbol  size	85	None	replace
616	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  header);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  signature,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  header);	  archive.packPos    =    readUint64(header,    fileName,    key);    	non-compiled	[CE]  cannot  find  symbol  signature	73	None	replace
617	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  password);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  password);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  password);	  archive.packPos    =    readUint64(header,    fileName,    signature);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
618	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  signature,  fileName);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(header,  null,  signature,  fileName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  signature,  fileName);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	38	None	replace
619	[BUG]  [BUGGY]  archive.packPos  =  readUint64(fileName,  null,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readUint64(fileName,  null,  header);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(fileName,  null,  header);	  archive.packPos    =    readUint64(header,    null,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	38	None	replace
620	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {      [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceName);  [BUGGY]      final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  sourceName);	  archive.packPos    =    readPackInfo(header,    sourceFile);    	non-compiled	[CE]  cannot  find  symbol  sourceName	60	None	replace
