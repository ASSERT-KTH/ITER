bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte(header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header);	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
2	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  -  header.readUnsignedByte();	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte()  +  1;  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  1;	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
4	[BUG]  [BUGGY]  Archive.packPos  =  readUnsignedByte();  [CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  Archive.packPos  =  readUnsignedByte();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	Archive.packPos  =  readUnsignedByte();	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  non-static  variable  packPos  cannot  be  referenced  from  a  static  context	10	None	replace
5	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(0);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte(0);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(0);	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
6	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  signature);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  signature);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	4	None	replace
7	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
8	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  nid);  [CE]  cannot  find  symbol  nid  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  nid);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  nid);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  nid	4	None	replace
9	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  0);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  0);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
10	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  true);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  true);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
11	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  false);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  false);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
12	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  null);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  null);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
13	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid);  [CE]  cannot  find  symbol  nid  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  nid);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  cannot  find  symbol  nid	12	None	replace
14	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  numPackStreams);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  numPackStreams);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	12	None	replace
15	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  dataInput);  [CE]  cannot  find  symbol  dataInput  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  dataInput);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  dataInput);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  cannot  find  symbol  dataInput	12	None	replace
16	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  archive);  [CE]  incompatible  types  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  archive);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  archive);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  incompatible  types	9	None	replace
17	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  fileName);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  fileName);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
18	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  nid);  [CE]  cannot  find  symbol  nid  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  nid);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  nid);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  nid	9	None	replace
19	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  false);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  false);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
20	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  header);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
21	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  true);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  true);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  true);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
22	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  true,  header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  header);	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
23	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  true,  false);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  false);	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
24	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  true,  fileName);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  fileName);	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
25	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  true,  0);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  0);	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
26	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true,  nid);  [CE]  cannot  find  symbol  nid  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  true,  nid);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true,  nid);	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  cannot  find  symbol  nid	3	None	replace
27	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  false,  header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  header);	  archive.packPos    =    readUint64(header,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
28	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  false,  fileName);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false,  fileName);	  archive.packPos    =    readUint64(header,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
29	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  header,  false);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  false);	  archive.packPos    =    readUint64(header,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
30	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  false);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  false);	  archive.packPos    =    readUint64(header,    false);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
31	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  archive.packPos);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packPos);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
32	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  archive.packSize);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packSize);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packSize	11	None	replace
33	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  archive);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  archive);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
34	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  signature);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  archive,  signature);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  signature);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  signature	11	None	replace
35	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo);  [CE]  cannot  find  symbol  packInfo  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  archive.packInfo);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive.packInfo);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packInfo	11	None	replace
36	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  archive);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  nid,  archive);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  archive);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  nid	11	None	replace
37	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header);	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
38	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  fileName);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  fileName);	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
39	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  header,  null);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  null);	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
40	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  nid);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  nid);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  nid);	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  cannot  find  symbol  nid	6	None	replace
41	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  0);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  0);	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
42	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  1);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE,  1);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
43	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  1);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  1);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
44	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  0,  1);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  1);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
45	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  nid,  1);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  nid,  1);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  nid,  1);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  cannot  find  symbol  nid	5	None	replace
46	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  100);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  100);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  100);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
47	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]    IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	      	non-compiled	[CE]  cannot  find  symbol  Lists	8	None	replace
48	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	      	compilable	  [FE]  IOException  	8	12	replace
49	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	      	compilable	  [FE]  IOException  	8	12	replace
50	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	      	non-compiled	[CE]  cannot  find  symbol  length	8	None	replace
51	[BUG]  [BUGGY]  final  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  final  int  nid  =  header.readUnsignedByte();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  header.readUnsignedByte();	      	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	8	None	replace
52	[BUG]  [BUGGY]  final  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]            IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  final  int  nid  =  readUint64(header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  nid  =  readUint64(header);	      	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
53	[BUG]  [BUGGY]  final  int  NID  =  header.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]              IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  final  int  NID  =  header.readUnsignedByte();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	final  int  NID  =  header.readUnsignedByte();	      	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
54	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  Collections  [FE]                IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();	      	non-compiled	[CE]  cannot  find  symbol  Collections	8	None	replace
55	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
56	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length);  [CE]  cannot  find  symbol  length  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  0,  header.length);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header.length);	  archive.packPos    =    readUint64(header,    0);    	non-compiled	[CE]  cannot  find  symbol  length	1	None	replace
57	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  0,  header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0,  header);	  archive.packPos    =    readUint64(header,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
58	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0L);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  0L);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0L);	  archive.packPos    =    readUint64(header,    0);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
59	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  0);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  0);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  0);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
60	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceFile);  [CE]  cannot  find  symbol  sourceFile  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  sourceFile);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  sourceFile);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	9	None	replace
61	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header,  source);  [CE]  cannot  find  symbol  source  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readPackInfo(header,  source);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header,  source);	  archive.packPos    =    readPackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  source	9	None	replace
62	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  inputStreamStack  [FE]    IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	      	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	replace
63	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.values();  [CE]  cannot  find  symbol  inputStreamStack  [FE]      IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.values();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.values();	      	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	replace
64	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length());  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length());  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.length());	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
65	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  source);  [CE]  cannot  find  symbol  source  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  source);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  source);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  cannot  find  symbol  source	12	None	replace
66	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  numPackPos);  [CE]  cannot  find  symbol  numPackPos  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  numPackPos);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  numPackPos);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  cannot  find  symbol  numPackPos	12	None	replace
67	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  baseUri);  [CE]  cannot  find  symbol  baseUri  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  baseUri);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  baseUri);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  cannot  find  symbol  baseUri	12	None	replace
68	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  archive,  header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  header);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
69	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  archive,  fileName);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive,  fileName);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
70	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos;  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  archive).packPos;  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive).packPos;	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
71	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  deferredBlockStreams);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  deferredBlockStreams);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
72	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  i);  [CE]  cannot  find  symbol  i  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  i);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  i);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  i	4	None	replace
73	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  key);  [CE]  cannot  find  symbol  key  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  key);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  key);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  key	4	None	replace
74	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  source);  [CE]  cannot  find  symbol  source  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  source);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  source);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  source	4	None	replace
75	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  4);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  4);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  4);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
76	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(1);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte(1);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(1);	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
77	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(2);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte(2);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(2);	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
78	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  numPackPos);  [CE]  cannot  find  symbol  numPackPos  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  numPackPos);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  numPackPos);	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  cannot  find  symbol  numPackPos	6	None	replace
79	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  i);  [CE]  cannot  find  symbol  i  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  i);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  i);	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  cannot  find  symbol  i	6	None	replace
80	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  header,  true);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  true);	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
81	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  currentFolderIndex);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  currentFolderIndex);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	12	None	replace
82	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  this.header);  [CE]  cannot  find  symbol  header  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  this.header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  this.header);	  archive.packPos    =    readUint64(header,    header);    	non-compiled	[CE]  cannot  find  symbol  header	12	None	replace
83	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  header,  archive);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  archive);	  archive.packPos    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
84	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte());  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    null);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
85	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.length);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  header.length);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.length);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
86	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  header.readUnsignedByte());  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
87	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  SIGNATURE_HEADER_SIZE);	  archive.packPos    =    readUint64(header,    1);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
88	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  false);  [CE]  cannot  find  symbol  signature  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  signature,  false);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  false);	  archive.packPos    =    readUint64(header,    false);    	non-compiled	[CE]  cannot  find  symbol  signature	2	None	replace
89	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive.packPos);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte(header,  archive.packPos);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte(header,  archive.packPos);	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
90	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte()  +  header.readUnsignedByte();	  archive.packPos    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
91	[BUG]  [BUGGY]      int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]      int  nid  =  header.readUnsignedByte();  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	        int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	7	None	add
92	[BUG]  [BUGGY]      Integer  nid  =  readUint64(header);  [CE]  incompatible  types  [FE]      IOException    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]      Integer  nid  =  readUint64(header);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	        Integer  nid  =  readUint64(header);	  	non-compiled	[CE]  incompatible  types	7	None	add
93	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte());  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte());  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true),  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  ';'  expected	3	None	replace
94	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  true);  [CE]  cannot  find  symbol  signature  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  signature,  true);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  true);	  archive.packPos    =    readUint64(header,    true);    	non-compiled	[CE]  cannot  find  symbol  signature	3	None	replace
95	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte());  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  header.readUnsignedByte());	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
96	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  header,  fileName);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header,  fileName);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
97	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  signature,  fileName);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  signature,  fileName);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	4	None	replace
98	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {    [BUGGY]  archive.packPos  =  readUint64(header,  fileName,  64);  [BUGGY]    final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName,  64);	  archive.packPos    =    readUint64(header,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
