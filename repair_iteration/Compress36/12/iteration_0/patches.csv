bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  0);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  0);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
2	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  false);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  false);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
3	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  true);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  true);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  true);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
4	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  fileName);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  fileName);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
5	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  1);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  1);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
6	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  null);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  null);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]                NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]    [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	add	  	archive.packPos  =  readUint64(header);  	compilable	  [FE]  IOException  	23	12	replace
8	[BUG]  [BUGGY]    [FE]  IOException  [FE]                NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]    [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	  	archive.packPos  =  readUint64(header);  	compilable	  [FE]  IOException  	23	12	replace
9	[BUG]  [BUGGY]  archive.packPos  =  readPackInfo(header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readPackInfo(header);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readPackInfo(header);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
10	[BUG]  [BUGGY]  archive.packPos  =  readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUnsignedByte();  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUnsignedByte();	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
11	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  archive);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  archive);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
12	[BUG]  [BUGGY]  archive.packPos  =  readUint64(header,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  [BUGGY]  archive.packPos  =  readUint64(header,  header);  [BUGGY]  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	346	346	12	replace	archive.packPos  =  readUint64(header,  header);	archive.packPos  =  readUint64(header);  	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
