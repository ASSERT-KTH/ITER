bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
2	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
3	[BUG]  [BUGGY]  optimiser.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	      optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
5	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  For(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	For(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiza[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiza[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optimiza[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
8	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
9	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
10	[BUG]  [BUGGY]  optimizer.setOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  goalType));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
11	[BUG]  [BUGGY]  optimizer.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
12	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max),  optima[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max),  optima[i]);	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max),    optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
13	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max),    optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
14	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(max,  bound1,  bound2),  Math.max(max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(max,  bound1,  bound2),  Math.max(max),  optima[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(max,  bound1,  bound2),  Math.max(max),  optima[i]);	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max),    optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
15	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max),    optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
16	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
17	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
18	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
19	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    null)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    null)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    null)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    null)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
24	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(lastNaN,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(lastNaN,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(lastNaN,  max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
25	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(lastNaN,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(lastNaN,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(lastNaN,  max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
26	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(lastNaN,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(lastNaN,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(lastNaN,  goalType));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
27	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
28	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(lastNaN,  max),  Math.max(lastNaN));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(lastNaN,  max),  Math.max(lastNaN));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(lastNaN,  max),  Math.max(lastNaN));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max),    Math.max(lastNaN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
29	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(lastNaN,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(lastNaN,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(lastNaN,  goalType));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max),    Math.max(lastNaN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
30	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(lastNaN,  max),  Math.max(lastNaN));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(lastNaN,  max),  Math.max(lastNaN));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(lastNaN,  max),  Math.max(lastNaN));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max),    Math.max(lastNaN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
31	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
32	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
33	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  goalType));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0,  max  =  optima.length;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0,  max  =  optima.length;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0,  max  =  optima.length;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
45	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
46	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
47	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0,  max  =  optima.length;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0,  max  =  optima.length;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0,  max  =  optima.length;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimization();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimization();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimization();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]  ==  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]  ==  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]  ==  goalType)  {  optima[i]  =  optimizer.getOptimization();  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimization();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
56	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
57	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
58	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
59	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optima[i]    =    Math.min(max,    optima[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optima[i]    =    Math.min(max,    optima[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optima[i]    =    Math.min(max,    optima[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optima[i]    =    Math.min(max,    optima[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
64	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optimaValues[i]));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optimaValues[i]));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
65	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  Math.min(max,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  Math.min(max,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  Math.min(max,  optimaValues[i]),  Math.max(max,  optimaValues[i]));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
66	[BUG]  [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
67	[BUG]  [BUGGY]  optimizer.setOptimize(f,  max,  Math.min(max,  optimaValues[i]),  Math.max(max,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  max,  Math.min(max,  optimaValues[i]),  Math.max(max,  goalType));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  max,  Math.min(max,  optimaValues[i]),  Math.max(max,  goalType));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
68	[BUG]  [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optimaValues[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
69	[BUG]  [BUGGY]  optimiser.setOptimize(f,  min,  Math.min(max,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  min,  Math.min(max,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  min,  Math.min(max,  optimaValues[i]),  Math.max(max,  optimaValues[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
70	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  bound1),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  bound1),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(min,  bound1),  Math.max(max,  optimaValues[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
71	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
72	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  max),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
73	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
74	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(max,  bound1),  Math.max(max));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
78	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
79	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
80	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  max,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  max,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  min,  max,  Math.min(max,  bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
81	[BUG]  [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
82	[BUG]  [BUGGY]  optimiser.setOptimize(f,  min,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  min,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  min,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
83	[BUG]  [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  min,  goalType,  Math.min(max,  optima[i]),  Math.max(max,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
84	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  For(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	For(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
86	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
87	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
88	[BUG]  [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  goalType.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
89	[BUG]  [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  goalType.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
90	[BUG]  [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  goalType.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
91	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
92	[BUG]  [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(max,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  goalType.optimize(f,  min,  Math.min(max,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  goalType.optimize(f,  min,  Math.min(max,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
93	[BUG]  [BUGGY]  optima[i]  =  optimiser.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimiser.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimiser.optimize(f,  min,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
94	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
95	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
96	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
98	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
99	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
100	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
101	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
103	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));	      optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
104	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optimaValues[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimization();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
106	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
107	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max),  optimaValues[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max),  optimaValues[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max),  optimaValues[i]);	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiser[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiser[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optimiser[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound1));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound1));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
110	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
111	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
112	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
113	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optimaValues[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
114	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
115	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max),  optima[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max),  optima[i]);	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max),    optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
116	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max),  optima[i]);	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max),    optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
117	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  null)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    null)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
119	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
120	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max,  optimaValues[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
121	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
122	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(optimaValues[i]));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(optimaValues[i]));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
123	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  bound1),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  bound1),  Math.max(max,  optimaValues[i]));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  bound1),  Math.max(max,  optimaValues[i]));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  maxIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
127	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
128	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
129	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiser[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optimiser[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optimiser[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
132	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
133	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
134	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  max),  Math.max(max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
135	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(max,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(max,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(max,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
136	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(lastNaN));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(lastNaN));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(lastNaN));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max),    Math.max(lastNaN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
137	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(lastNaN));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(lastNaN));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(lastNaN));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max),    Math.max(lastNaN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optima[i]    =    Math.min(max,    optima[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  if(Double.isNaN(optima[i]))  {  optima[i]  =  Math.min(max,  optima[i]);  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optima[i]    =    Math.min(max,    optima[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
144	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
145	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  max,  Math.min(max,  bound1),  Math.max(max));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
146	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  maxIterations;  ++i)  {  if(Optima.isNaN(optima[i]))  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Optima.isNaN(optima[i]))    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
150	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
151	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
152	[BUG]  [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimisation  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimisation  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(max,  optima[i]));	      optimisation    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
153	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optimaValues[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
154	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optimaValues[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
155	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optima[i]),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optima[i]),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optima[i]),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
156	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(Double.isNaN(optima[i]))  {  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(Double.isNaN(optima[i]))    {    optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
158	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
159	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(lastNaN,  optima[i]),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(lastNaN,  optima[i]),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(lastNaN,  optima[i]),  Math.max(max,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
160	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));	      optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
161	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));	      optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimiser.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimiser.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimiser.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  if(max    >    optima.length)    {    for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
163	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound1,  max),  Math.max(optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound1,  max),  Math.max(optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound1,  max),  Math.max(optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
164	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
165	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  optimaValues,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  optimaValues,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  optimaValues,  bound1),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimization();  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimization();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
167	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optimaValues[i]));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(lastNaN,  optimaValues[i]),  Math.max(max,  optimaValues[i]));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
168	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));	  optimizer.setOptimize(f,    goalType,    Math.min(max,    bound1),    Math.max(max,    optimaValues[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
169	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optima[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
170	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
171	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max,  optimaValues[i]));	      optimizer.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	for(int  i  =  0;  i  <  totalIterations;  ++i)  {  if(optima[i]!=  goalType)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,	  for(int    i    =    0;    i    <    max;    ++i)    {    if(optima[i]!=    goalType)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
175	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound1,  max),  Math.max(optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound1,  max),  Math.max(optima[i]);  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound1,  max),  Math.max(optima[i]);	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max),    optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
176	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  i));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  i));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  i));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
177	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  final));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  final));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  final));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
178	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  optimaValues,  bound1),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  optimaValues,  bound1),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  optimaValues,  bound1),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
179	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  optimaValues,  bound1,  max),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  optimaValues,  bound1,  max),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  optimaValues,  bound1,  max),  Math.max(max,  optima[i]));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(max,    bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
180	[BUG]  [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  optima[i]));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
181	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(max,    bound1),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
182	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(min,  bound2),  Math.max(max));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
183	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(max,  bound1,  bound2),  Math.max(max));	      optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
184	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(bound1,  bound2));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound2),  Math.max(bound1,  bound2));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
185	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound1),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound1),  Math.max(bound1,  bound2));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(min,  bound1),  Math.max(bound1,  bound2));	      optima[i]    =    goalType.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
186	[BUG]  [BUGGY]  int  i  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  int  i  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	int  i  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    max;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
187	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(lastNaN));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(lastNaN));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1),  Math.max(lastNaN));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max),    Math.max(lastNaN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
188	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1,  max),  Math.max(lastNaN));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1,  max),  Math.max(lastNaN));  [BUGGY]    }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  }  int  lastNaN  =  optima.length;  for  (int  i  =  0;  i  <  lastNaN;  ++i)  {  if  (Double.isNaN(optima[i]))  {  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(max,  bound1,  max),  Math.max(lastNaN));	      optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(lastNaN,    max),    Math.max(lastNaN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
