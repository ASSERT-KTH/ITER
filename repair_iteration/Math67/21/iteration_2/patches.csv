bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
3	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
4	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
5	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
6	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException( " ");  }	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
7	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
8	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START,  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START,	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
9	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(j    >=    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
10	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(j    >=    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
11	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currY;  j++)  {  if(Double.isNaN(currX]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currY;  j++)  {  if(Double.isNaN(currX]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currY;  j++)  {  if(Double.isNaN(currX]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
13	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optimaValues[i  +  1]  =  min;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optimaValues[i  +  1]  =  min;	  optimaValues[i    +    1]    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
14	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optimaValues[i  +  1]  =  mIX;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optimaValues[i  +  1]  =  mIX;	  optimaValues[i    +    1]    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
15	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optimaValues[i  +  1]  =  currY;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optimaValues[i  +  1]  =  currY;	  optimaValues[i    +    1]    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
16	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
17	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
18	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currY;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currY;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currY;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
21	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
22	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
23	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  goalType.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  goalType.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  goalType.getOptimizer();	  MutableOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
24	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  f.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  f.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  f.getOptimizer();	  MutableOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
25	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  this.optimizer.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  this.optimizer.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  this.optimizer.getOptimizer();	  MutableOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
26	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  targetType.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  targetType.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  targetType.getOptimizer();	  MutableOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
27	[BUG]  [BUGGY]  currX  =  optimaValues[i  +  1]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i  +  1]  +  1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i  +  1]  +  1;	  currX    =    optimaValues[i]    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
28	[BUG]  [BUGGY]  currX  =  optimaValues[i]  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i]  +  2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i]  +  2;	  currX    =    optimaValues[i]    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
29	[BUG]  [BUGGY]  currX  =  optimaValues[i]  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i]  /  1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i]  /  1;	  currX    =    optimaValues[i]    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
30	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
31	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
32	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
33	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
34	[BUG]  [BUGGY]  optima[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optima[i  +  1]  =  bound1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optima[i  +  1]  =  bound1;	  optima[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
35	[BUG]  [BUGGY]  optima[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optima[i  +  1]  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optima[i  +  1]  =  bound2;	  optima[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
36	[BUG]  [BUGGY]  optima[i  +  1]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optima[i  +  1]  =  mIX;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optima[i  +  1]  =  mIX;	  optima[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
37	[BUG]  [BUGGY]  optima[i  +  1]  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optima[i  +  1]  =  max;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optima[i  +  1]  =  max;	  optima[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
38	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
39	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
40	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
41	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
42	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  currY  =  optimaValues[j];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  currY  =  optimaValues[j];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
43	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
44	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
45	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  ==  0)  {  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
46	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  ==  0)  {  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
47	[BUG]  [BUGGY]  ConvergenceException  ex  =  new  ConvergenceException( "Could  not  instantiate  optima[ "  +  i  + "]  for  goal  type: "  +  goalType.toString());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  ex  =  new  ConvergenceException( "Could  not  instantiate  optima[ "  +  i  + "]  for  goal  type: "  +  goalType.toString());  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  ex  =  new  ConvergenceException( "Could  not  instantiate  optima[ "  +  i  + "]  for  goal  type: "  +  goalType.toString());	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
48	[BUG]  [BUGGY]  safeAdd(mIX,  mY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  safeAdd(mIX,  mY,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	safeAdd(mIX,  mY,  max);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
49	[BUG]  [BUGGY]  ConvergenceException  ex  =  new  ConvergenceException( "Could  not  instantiate  optima[ "  +  i  + "]  for  goal  type: "  +  goalType.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  ex  =  new  ConvergenceException( "Could  not  instantiate  optima[ "  +  i  + "]  for  goal  type: "  +  goalType.getName());  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  ex  =  new  ConvergenceException( "Could  not  instantiate  optima[ "  +  i  + "]  for  goal  type: "  +  goalType.getName());	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
50	[BUG]  [BUGGY]  safeAdd(mIX,  mIY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  safeAdd(mIX,  mIY,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	safeAdd(mIX,  mIY,  max);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
51	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimaValues[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimaValues[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  min,  optimaValues[i  +  1]));	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
52	[BUG]  [BUGGY]  DesertionError.error(mIX,  mY,  min,  optimaValues[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mY,  min,  optimaValues[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mY,  min,  optimaValues[i  +  1]));	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
53	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  optimaValues[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  optimaValues[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  currX,  optimaValues[i  +  1]));	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
54	[BUG]  [BUGGY]  mIX  =  bound2[i  +  1];  mIY  =  optimaValues[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  bound2[i  +  1];  mIY  =  optimaValues[i  +  1]  =  bound1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  bound2[i  +  1];  mIY  =  optimaValues[i  +  1]  =  bound1;	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
55	[BUG]  [BUGGY]  mIX  =  bound1[i];  mIY  =  optimaValues[i  +  1]  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  bound1[i];  mIY  =  optimaValues[i  +  1]  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  bound1[i];  mIY  =  optimaValues[i  +  1]  =  optimaValues[i  +  1];	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
56	[BUG]  [BUGGY]  mIX  =  bound2[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  bound2[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  bound2[i];  mIY  =  optimaValues[i  +  1]  =  bound1;	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
57	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    bound1;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
58	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    bound1;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
59	[BUG]  [BUGGY]  int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    bound1;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
60	[BUG]  [BUGGY]  if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
61	[BUG]  [BUGGY]  if(mIX!=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX!=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX!=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
62	[BUG]  [BUGGY]  vices.add(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  vices.add(mIX,  mIY);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	vices.add(mIX,  mIY);	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
63	[BUG]  [BUGGY]  vices.add(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  vices.add(mIX,  currY);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	vices.add(mIX,  currY);	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
64	[BUG]  [BUGGY]  ConvergenceException  ce  =  f.getConvergenceException();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  ce  =  f.getConvergenceException();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  ce  =  f.getConvergenceException();	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
65	[BUG]  [BUGGY]  ConvergenceException  ce  =  f.getConvergenceException( "UnivariateRealOptimizer  is  null ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  ce  =  f.getConvergenceException( "UnivariateRealOptimizer  is  null ");  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  ce  =  f.getConvergenceException( "UnivariateRealOptimizer  is  null ");	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
66	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
67	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
68	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  minEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
69	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optimaValues[i  +  1]  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optimaValues[i  +  1]  =  bound2;	  optimaValues[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
70	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  optimiser[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  optimiser[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  optimiser[i  +  1];	  MutableOptimizer    optimizer    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
71	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  optimaValues[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  optimaValues[i  +  2];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  optimaValues[i  +  2];	  MutableOptimizer    optimizer    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
72	[BUG]  [BUGGY]  mIX  =  bound2;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  bound2;  mIY  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  bound2;  mIY  =  bound2;	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
73	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
74	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
75	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
76	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX!=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX!=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX!=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
77	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
78	[BUG]  [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
79	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
80	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
81	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
82	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  max;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  1;  j  <  max;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  1;  j  <  max;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
83	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
84	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
85	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  }	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
86	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  }  currX  =  optim  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  }  currX  =  optim  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  }  currX  =  optim	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
87	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
88	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
89	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
90	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
91	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimizationValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimizationValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  min,  optimizationValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimizationValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
92	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  max,  bound1,  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  max,  bound1,  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  max,  bound1,  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimizationValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
93	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  max,  optimizedaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  max,  optimizedaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  max,  optimizedaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimizationValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
94	[BUG]  [BUGGY]  if(i  ==  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  ==  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  ==  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
95	[BUG]  [BUGGY]  if(j  ==  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  ==  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  ==  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
96	[BUG]  [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
97	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
98	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  ce  =  goalType.getConvergenceException();	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
99	[BUG]  [BUGGY]  ConvergenceException  e  =  goalType.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  e  =  goalType.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  e  =  goalType.getOptimizer();	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
100	[BUG]  [BUGGY]  ConvergenceException  j  =  goalType.getConvergenceException();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  j  =  goalType.getConvergenceException();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  j  =  goalType.getConvergenceException();	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
101	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException( "Could  not  instantiate  a  goal  type. ");  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException( "Could  not  instantiate  a  goal  type. ");  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  ce  =  goalType.getConvergenceException( "Could  not  instantiate  a  goal  type. ");	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
102	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
103	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
104	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
105	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX!=  optima[i])  {  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX!=  optima[i])  {  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX!=  optima[i])  {  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
106	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  ==  optima[i])  {  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  ==  optima[i])  {  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  ==  optima[i])  {  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
107	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  currY)  {  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  currY)  {  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  currY)  {  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
108	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  min;  mIY  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  min;  mIY  =  bound2;	  mIX    =    max;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
109	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  max;  mIY  =  bound1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  max;  mIY  =  bound1;	  mIX    =    max;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
110	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  max;  mIY  =  currY;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  max;  mIY  =  currY;	  mIX    =    max;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
111	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
112	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
113	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
114	[BUG]  [BUGGY]  currX  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  max;	  currX    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
115	[BUG]  [BUGGY]  currX  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  bound2;	  currX    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
116	[BUG]  [BUGGY]  currX  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  mIX;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  mIX;	  currX    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
117	[BUG]  [BUGGY]  currX  =  mIX  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  mIX  +  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  mIX  +  bound2;	  currX    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
118	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
119	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
120	[BUG]  [BUGGY]  ConvergenceException  ce  =  f.getConvergenceException( "UnivariateRealOptimizer  is  null. ");  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  ConvergenceException  ce  =  f.getConvergenceException( "UnivariateRealOptimizer  is  null. ");  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	ConvergenceException  ce  =  f.getConvergenceException( "UnivariateRealOptimizer  is  null. ");	  if(j    ==    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
121	[BUG]  [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
122	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  min;  mIY  =  optimaValues[i  +  1];	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
123	[BUG]  [BUGGY]  if(i  +  1  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  +  1  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  +  1  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
124	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
125	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
126	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
127	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
128	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  min,  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
129	[BUG]  [BUGGY]  DesertionError.error(mIX,  mY,  min,  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mY,  min,  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mY,  min,  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
130	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  currX,  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
131	[BUG]  [BUGGY]  currX  =  optimaValues[1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[1];	  currX    =    optimaValues[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
132	[BUG]  [BUGGY]  if(j  ==  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  ==  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  ==  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
133	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  ==  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  ==  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
134	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    startEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
135	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  starts);  }	  for(int    j    =    0;    j    <    startEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
136	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    startEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
137	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
138	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
139	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
140	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
141	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
142	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  optima[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  optima[i  +  2];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  optima[i  +  2];	  MutableOptimizer    optimizer    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
143	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  optimizeda[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  optimizeda[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  optimizeda[i  +  1];	  MutableOptimizer    optimizer    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
144	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  1;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  1;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
145	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  min,  currX,  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  min,  currX,  currY,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  min,  currX,  currY,  max);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
146	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound1,  currX,  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound1,  currX,  currY,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound1,  currX,  currY,  max);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
147	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  max,  currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  max,  currX,  currY);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  max,  currX,  currY);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
148	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  min,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  currX,  currY,  min,  max);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
149	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(starts[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
150	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
151	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(ends[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
152	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length  -  1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length  -  1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length  -  1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
153	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
154	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[1]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[1]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[1]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
155	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
156	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(optima);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(optima);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  f.getOptimizer(optima);	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
157	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(mIX);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  f.getOptimizer(mIX);	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
158	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(optimiser);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(optimiser);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  f.getOptimizer(optimiser);	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
159	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  goalType.getOptimizer(f);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  goalType.getOptimizer(f);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  goalType.getOptimizer(f);	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
160	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optimizedaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
161	[BUG]  [BUGGY]  currX  =  optimaValues[i]  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i]  +  bound1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i]  +  bound1;	  currX    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
162	[BUG]  [BUGGY]  currX  =  bound1  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  bound1  +  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  bound1  +  optimaValues[i];	  currX    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
163	[BUG]  [BUGGY]  currX  =  optimaValues[i]  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i]  +  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i]  +  max;	  currX    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
164	[BUG]  [BUGGY]  currX  =  optimaValues[i]  /  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i]  /  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i]  /  bound2;	  currX    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
165	[BUG]  [BUGGY]  vices.add(new  Double(optima[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  vices.add(new  Double(optima[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	vices.add(new  Double(optima[i  +  1]));	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
166	[BUG]  [BUGGY]  vices.add(new  Double(optima[0]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  vices.add(new  Double(optima[0]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	vices.add(new  Double(optima[0]));	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
167	[BUG]  [BUGGY]  vices.add(new  Double(optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  vices.add(new  Double(optima[i]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	vices.add(new  Double(optima[i]));	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
168	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
169	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
170	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
171	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts);  }	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
172	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  mIY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  mIX;  mIY  =  mIY  +  1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  mIX;  mIY  =  mIY  +  1;	  mIX    =    mIX;    mIY    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
173	[BUG]  [BUGGY]  if(mIX!=  max)  {  mIX  =  mIX;  mIY  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX!=  max)  {  mIX  =  mIX;  mIY  =  mIY;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX!=  max)  {  mIX  =  mIX;  mIY  =  mIY;  }	  mIX    =    mIX;    mIY    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
174	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  max;  mIY  =  mIY;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  max;  mIY  =  mIY;	  mIX    =    mIX;    mIY    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
175	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  =  max;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  =  max;	  Neighbor    optimaValues[i    +    1]    =    optimizer;    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
176	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  =  bound1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  =  bound1;	  Neighbor    optimaValues[i    +    1]    =    optimizer;    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
177	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  =  mIX;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  =  mIX;	  Neighbor    optimaValues[i    +    1]    =    optimizer;    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
178	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currY.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currY.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currY.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
179	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
180	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  1;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  1;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
181	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    currY.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
182	[BUG]  [BUGGY]  if(i  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
183	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
184	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
185	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  goalType.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  goalType.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  goalType.getOptimizer();	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
186	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  f.getOptimizer();	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
187	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  targetType.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  targetType.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  targetType.getOptimizer();	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
188	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  this.optimizer.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  this.optimizer.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  this.optimizer.getOptimizer();	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
189	[BUG]  [BUGGY]  currX  =  optimaValues[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i  +  2];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i  +  2];	  currX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
190	[BUG]  [BUGGY]  currX  =  optimaValues[i  +  1]  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i  +  1]  -  bound1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i  +  1]  -  bound1;	  currX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
191	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
192	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
193	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
194	[BUG]  [BUGGY]  mIX  =  optima[i  +  1];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  optima[i  +  1];  mIY  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  optima[i  +  1];  mIY  =  optimaValues[i  +  1];	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
195	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisticaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisticaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisticaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
196	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
197	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
198	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
199	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
200	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
201	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
202	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValu	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
203	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisticaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisticaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisticaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
204	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
205	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
206	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
207	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
208	[BUG]  [BUGGY]  for(int  j  =  start;  j  <  max;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  start;  j  <  max;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  start;  j  <  max;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
209	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
210	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currY.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currY.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currY.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
211	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
212	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  currY  =  optimaValues[j];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  currY  =  optimaValues[j];  }	  if(j    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
213	[BUG]  [BUGGY]  if(i  +  1  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  +  1  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  +  1  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
214	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
215	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(bound1[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(bound1[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(bound1[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    bound1;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
216	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    bound1;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
217	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  optimaValues[i  +  1]  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  bound1;  mIY  =  optimaValues[i  +  1]  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  bound1;  mIY  =  optimaValues[i  +  1]  =  optimaValues[i  +  1];	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
218	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
219	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
220	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(optimizer);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  f.getOptimizer(optimizer);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  f.getOptimizer(optimizer);	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
221	[BUG]  [BUGGY]  LivariateRealOptimizer  optimizer  =  goals.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  LivariateRealOptimizer  optimizer  =  goals.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	LivariateRealOptimizer  optimizer  =  goals.getOptimizer();	  LivariateRealOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
222	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
223	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  >=  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  >=  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
224	[BUG]  [BUGGY]  Neighbor  <  Object>  currX  =  optima[j];  Neighbor  <  Object>  currY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  <  Object>  currX  =  optima[j];  Neighbor  <  Object>  currY  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  <  Object>  currX  =  optima[j];  Neighbor  <  Object>  currY  =  optimaValues[i  +  1];	  if(j    >=    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
225	[BUG]  [BUGGY]  Neighbor  <  Object>  currX  =  optima[j];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  <  Object>  currX  =  optima[j];  mIY  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  <  Object>  currX  =  optima[j];  mIY  =  optimaValues[i  +  1];	  if(j    >=    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
226	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >  max);	  if(j    >=    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
227	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY!=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY!=  0);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY!=  0);	  if(j    >=    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
228	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
229	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  mIY  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  mIY  =  optimaValues[i  +  1];	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
230	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    limit;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
231	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    j    =    0;    j    <    limit;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
232	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  j  =  goalType.getOptimizer();  if(j!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  j  =  goalType.getOptimizer();  if(j!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  j  =  goalType.getOptimizer();  if(j!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
233	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  g  =  goalType.getOptimizer();  if(g!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  g  =  goalType.getOptimizer();  if(g!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  g  =  goalType.getOptimizer();  if(g!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
234	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bounds.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bounds.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bounds.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
235	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bounds.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bounds.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bounds.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
236	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
237	[BUG]  [BUGGY]  if(j  >=  max)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >=  max)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >=  max)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
238	[BUG]  [BUGGY]  Integer  j  =  optimiser.getIntValue(i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Integer  j  =  optimiser.getIntValue(i  +  1);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Integer  j  =  optimiser.getIntValue(i  +  1);	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
239	[BUG]  [BUGGY]  NeighborUtil.isNaN(currX)||  currY  ==  null;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtil.isNaN(currX)||  currY  ==  null;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtil.isNaN(currX)||  currY  ==  null;	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
240	[BUG]  [BUGGY]  NeighborUtil.isNaN(currX)&&!max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtil.isNaN(currX)&&!max;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtil.isNaN(currX)&&!max;	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
241	[BUG]  [BUGGY]  NeighborUtil.isNaN(currX)&&  j  >  0;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtil.isNaN(currX)&&  j  >  0;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtil.isNaN(currX)&&  j  >  0;	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
242	[BUG]  [BUGGY]  if(i  +  1  >=  optimaValues.length)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  +  1  >=  optimaValues.length)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  +  1  >=  optimaValues.length)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
243	[BUG]  [BUGGY]  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1]  =  bound1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  optima[0];  mIY  =  optimaValues[i  +  1]  =  bound1;	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
244	[BUG]  [BUGGY]  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1]  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  optima[0];  mIY  =  optimaValues[i  +  1]  =  bound2;	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
245	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  bound2);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
246	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  ==  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  ==  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  ==  bound2);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
247	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  <  =  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  <  =  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  <  =  bound2);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
248	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  null);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
249	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  <  =  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  <  =  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY  <  =  max);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
250	[BUG]  [BUGGY]  NeighborUtilities.checkState(bounds[i  +  1]  ==  bound1?  optima[i  +  1]  :  optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkState(bounds[i  +  1]  ==  bound1?  optima[i  +  1]  :  optima[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkState(bounds[i  +  1]  ==  bound1?  optima[i  +  1]  :  optima[i  +  1]);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
251	[BUG]  [BUGGY]  if(j  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
252	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  goals.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  goals.getOptimizer();  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  goals.getOptimizer();	  MutableOptimizer    optimizer    =    optimiser.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
253	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currY[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currY.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
254	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
255	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
256	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
257	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WI  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WI  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WI	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
258	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
259	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
260	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Integer  j  =  optimizer.getInt(i  +  1);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Integer  j  =  optimizer.getInt(i  +  1);	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
261	[BUG]  [BUGGY]  Integer  j  =  optimiser.getIntValue(i,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Integer  j  =  optimiser.getIntValue(i,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Integer  j  =  optimiser.getIntValue(i,  max);	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
262	[BUG]  [BUGGY]  Integer  j  =  optimiser.getInt(i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Integer  j  =  optimiser.getInt(i  +  1);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Integer  j  =  optimiser.getInt(i  +  1);	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
263	[BUG]  [BUGGY]  Neighbor  <  Object>  currX  =  optima[i];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  <  Object>  currX  =  optima[i];  mIY  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  <  Object>  currX  =  optima[i];  mIY  =  optimaValues[i  +  1];	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
264	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >=  null);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >=  null);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
265	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound1,  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound1,  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound1,  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
266	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound2,  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound2,  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound2,  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
267	[BUG]  [BUGGY]  DesertionError.error(mIX,  mY,  bound1,  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mY,  bound1,  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mY,  bound1,  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
268	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound2  +  optimaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound2  +  optimaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound2  +  optimaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
269	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound1,  optimaValues[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound1,  optimaValues[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound1,  optimaValues[i  +  1]));	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
270	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound2,  optimaValues[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound2,  optimaValues[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound2,  optimaValues[i  +  1]));	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
271	[BUG]  [BUGGY]  DesertionError.error(mIX,  mY,  bound1,  optimaValues[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mY,  bound1,  optimaValues[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mY,  bound1,  optimaValues[i  +  1]));	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
272	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound2  +  optimaValues[i  +  1]));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound2  +  optimaValues[i  +  1]));  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound2  +  optimaValues[i  +  1]));	  DesertionError.error(mIX,    mIY,    max,    optimaValues[i    +    1]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
273	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
274	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
275	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  optimisera[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  optimisera[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  optimisera[i  +  1];	  MutableOptimizer    optimizer    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
276	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,  starts	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormat.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
277	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    startEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
278	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    startEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
279	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(endEvaluations[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(endEvaluations[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  startEvaluations.length;  j++)  {  if(Double.isNaN(endEvaluations[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    startEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
280	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
281	[BUG]  [BUGGY]  if(bound1!=  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1!=  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1!=  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
282	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(bound2))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
283	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  mIY;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  mIY;  }	  mIX    =    mIX;    mIY    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
284	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound1);  NeighborUtilities.checkArgument(mIY  ==  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound1);  NeighborUtilities.checkArgument(mIY  ==  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound1);  NeighborUtilities.checkArgument(mIY  ==  bound2);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
285	[BUG]  [BUGGY]  optima[i  +  2]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optima[i  +  2]  =  currX;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optima[i  +  2]  =  currX;	  optima[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
286	[BUG]  [BUGGY]  optima[i  +  3]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optima[i  +  3]  =  currX;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optima[i  +  3]  =  currX;	  optima[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
287	[BUG]  [BUGGY]  currX  =  optimiseraValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimiseraValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimiseraValues[i  +  1];	  currX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
288	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
289	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,  starts	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
290	[BUG]  [BUGGY]  if(j  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
291	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
292	[BUG]  [BUGGY]  if(j  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  ==  0)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
293	[BUG]  [BUGGY]  MutableOptimizer.checkNotNull(optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer.checkNotNull(optima[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer.checkNotNull(optima[i  +  1]);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
294	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkNotNull(optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableToJavaIdentifiers.checkNotNull(optima[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableToJavaIdentifiers.checkNotNull(optima[i  +  1]);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
295	[BUG]  [BUGGY]  MutableOptimizer.checkNotNull(optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer.checkNotNull(optima[i]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer.checkNotNull(optima[i]);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
296	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkNotNull(optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableToJavaIdentifiers.checkNotNull(optima[i]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableToJavaIdentifiers.checkNotNull(optima[i]);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
297	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
298	[BUG]  [BUGGY]  DesertionError.error(mIX,  mY,  bound1,  currX,  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mY,  bound1,  currX,  currY,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mY,  bound1,  currX,  currY,  max);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
299	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  bound1  +  currX,  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  bound1  +  currX,  currY,  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  bound1  +  currX,  currY,  max);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
300	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  min);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  currX,  currY,  min);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
301	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound2.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound2.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound2.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
302	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }	  if(j    >    max)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
303	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  max)  {  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  max)  {  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  }	  if(j    >    max)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
304	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  str.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
305	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  1;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  1;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
306	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  ==  null)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
307	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
308	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
309	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
310	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
311	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
312	[BUG]  [BUGGY]  if(mIX  >=  optima[0])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  >=  optima[0])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  >=  optima[0])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
313	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxIterations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxIterations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxIterations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
314	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkNotNull(optima[0]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableToJavaIdentifiers.checkNotNull(optima[0]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableToJavaIdentifiers.checkNotNull(optima[0]);	  if(i    >    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
315	[BUG]  [BUGGY]  optimaValues[i  +  2]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optimaValues[i  +  2]  =  currX;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optimaValues[i  +  2]  =  currX;	  optimaValues[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
316	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
317	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
318	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  optimiseraValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  optimiseraValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  optimiseraValues[i  +  1];	  MutableOptimizer    optimizer    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
319	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
320	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
321	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
322	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
323	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
324	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
325	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  safeMultiply(optima[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	safeMultiply(optima[i  +  1]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
326	[BUG]  [BUGGY]  safeAdd(mIX,  mIY,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  safeAdd(mIX,  mIY,  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	safeAdd(mIX,  mIY,  bound2);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
327	[BUG]  [BUGGY]  safeAdd(mIX,  mIY,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  safeAdd(mIX,  mIY,  bound1);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	safeAdd(mIX,  mIY,  bound1);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
328	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX!=  bound2);  NeighborUtilities.checkArgument(mIY  ==  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX!=  bound2);  NeighborUtilities.checkArgument(mIY  ==  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX!=  bound2);  NeighborUtilities.checkArgument(mIY  ==  bound2);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
329	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  bound2);  NeighborUtilities.checkArgument(mIY!=  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  bound2);  NeighborUtilities.checkArgument(mIY!=  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  ==  bound2);  NeighborUtilities.checkArgument(mIY!=  bound2);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
330	[BUG]  [BUGGY]  Integer  j  =  optimizaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Integer  j  =  optimizaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Integer  j  =  optimizaValues[i  +  1];	  if(j    ==    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
331	[BUG]  [BUGGY]  Integer  j  =  optimisers[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Integer  j  =  optimisers[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Integer  j  =  optimisers[i  +  1];	  if(j    ==    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
332	[BUG]  [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
333	[BUG]  [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  bound1);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  bound1);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
334	[BUG]  [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
335	[BUG]  [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  bound2);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	aughtException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  bound2);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
336	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
337	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
338	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  optimaValues.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  1;  j  <  optimaValues.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  1;  j  <  optimaValues.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
339	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
340	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY  ==  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY  ==  0);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY  ==  0);	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
341	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY!=  null);	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
342	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY!=  null);	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
343	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  ==  null);	  if(j    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
344	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY!=  null);	  if(j    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
345	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  >=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  >=  null);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  >=  null);	  if(j    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
346	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
347	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
348	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
349	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
350	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
351	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
352	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =!=  currX  =  optim  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =!=  currX  =  optim  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =!=  currX  =  optim	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
353	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
354	[BUG]  [BUGGY]  currX  =  optimaValues[i]  *  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i]  *  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i]  *  bound2;	  currX    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
355	[BUG]  [BUGGY]  currX  =  optimiseraValues[i]  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimiseraValues[i]  +  bound1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimiseraValues[i]  +  bound1;	  currX    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
356	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisedaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisedaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisedaValues[i  +  1];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optimizedaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
357	[BUG]  [BUGGY]  if(mIX  >=  optima[0])  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  >=  optima[0])  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  >=  optima[0])  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    optima[j])    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
358	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxIterations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxIterations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxIterations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
359	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
360	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  =  bound2;	  Neighbor    optimaValues[i    +    1]    =    optimizer;    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
361	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  bound1;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
362	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    optimaValues.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
363	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  min;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START,  starts);  }	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
364	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
365	[BUG]  [BUGGY]  NeighborUtil.isEmpty(currX)?  optima[i  +  1]  :  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtil.isEmpty(currX)?  optima[i  +  1]  :  optima[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtil.isEmpty(currX)?  optima[i  +  1]  :  optima[i  +  1];	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
366	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  =  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  =  max);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  =  max);	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
367	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY  <  =  0.0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY  <  =  0.0);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  0);  NeighborUtilities.checkArgument(mIY  <  =  0.0);	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
368	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
369	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(currY[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
370	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
371	[BUG]  [BUGGY]  currX  =  optimaValues[i  +  1]  -  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i  +  1]  -  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i  +  1]  -  bound2;	  currX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
372	[BUG]  [BUGGY]  currX  =  optimaValues[i]  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  currX  =  optimaValues[i]  -  1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	currX  =  optimaValues[i]  -  1;	  currX    =    optimaValues[i]    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
373	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(max[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(max[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max.length;  j++)  {  if(Double.isNaN(max[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
374	[BUG]  [BUGGY]  if(mIX  ==  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  optima[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
375	[BUG]  [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
376	[BUG]  [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
377	[BUG]  [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[0])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
378	[BUG]  [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[1])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[1])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  <  Math.max(mIX,  optima[0]);  Neighbor  <  Math.abs(mIY  -  optima[1])  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  if(j    >=    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
379	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
380	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
381	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
382	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
383	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  max,  optima[j]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  max,  optima[j]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  currX,  currY,  max,  optima[j]);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
384	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  max,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  currX,  currY,  max,  bound1);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  currX,  currY,  max,  bound1);	  DesertionError.error(mIX,    mIY,    currX,    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
385	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  =  optimaValues[i  +  1];	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
386	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
387	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(min))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY,  starts);  }	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
388	[BUG]  [BUGGY]  int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    bound2;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
389	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
390	[BUG]  [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
391	[BUG]  [BUGGY]  if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
392	[BUG]  [BUGGY]  if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
393	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
394	[BUG]  [BUGGY]  for(int  j  =  start;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  start;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  start;  j  <  max;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
395	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    max;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
396	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
397	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY!=  optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY!=  optima[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY!=  optima[i  +  1]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
398	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX!=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX!=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX!=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
399	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  <  =  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  <  =  mIX);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  <  =  mIX);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
400	[BUG]  [BUGGY]  MutableOptimizer  optimizer  =  optima[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  MutableOptimizer  optimizer  =  optima[j  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	MutableOptimizer  optimizer  =  optima[j  +  1];	  MutableOptimizer    optimizer    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
401	[BUG]  [BUGGY]  if(j  <  min)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  <  min)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  <  min)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    max)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
402	[BUG]  [BUGGY]  int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
403	[BUG]  [BUGGY]  int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
404	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
405	[BUG]  [BUGGY]  if(j  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
406	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i]  ||  mIY  ==  optima[i  +  1])  {  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i]  ||  mIY  ==  optima[i  +  1])  {  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i]  ||  mIY  ==  optima[i  +  1])  {  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
407	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optimisera[i])  {  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optimisera[i])  {  mIY  =  optima[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  optimisera[i])  {  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
408	[BUG]  [BUGGY]  if(j  <  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  <  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  <  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    0)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
409	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  mIX;  mIY  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  0)  {  mIX  =  mIX;  mIY  =  mIY;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  0)  {  mIX  =  mIX;  mIY  =  mIY;  }	  mIX    =    mIX;    mIY    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
410	[BUG]  [BUGGY]  if(mIX  ==  mIY)  {  mIX  =  mIX;  mIY  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  mIY)  {  mIX  =  mIX;  mIY  =  mIY;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  mIY)  {  mIX  =  mIX;  mIY  =  mIY;  }	  mIX    =    mIX;    mIY    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
411	[BUG]  [BUGGY]  int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  for(int    j    =    0;    j    <    bound1;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
412	[BUG]  [BUGGY]  int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	int  j  =  0;  j  <  bound2;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT	  for(int    j    =    0;    j    <    bound1;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
413	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  }	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
414	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
415	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  }	  for(int    j    =    0;    j    <    currX.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
416	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  mIX;  mIY  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  mIX;  mIY  =  bound2;	  mIX    =    max;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
417	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
418	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
419	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(i  +  1  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
420	[BUG]  [BUGGY]  Neighbor  optimaValues  =  optima[i];  mIX  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues  =  optima[i];  mIX  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues  =  optima[i];  mIX  =  optimaValues[i  +  1];	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
421	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisedValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisedValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optimisedValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
422	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  currX.length;  j++)  {  if(Double.isNaN(curr[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currY.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
423	[BUG]  [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
424	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
425	[BUG]  [BUGGY]  if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( "  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( "	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
426	[BUG]  [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
427	[BUG]  [BUGGY]  if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
428	[BUG]  [BUGGY]  if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  Il  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  Il  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  Class  <?>  c  =  goalType.getOptimizer();  if(c!=  null)  {  throw  new  Il	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    Class    <?>    c    =    goalType.getOptimizer();    if(c!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
429	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound2;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound2;	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
430	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
431	[BUG]  [BUGGY]  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
432	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1]  =  bound2;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1]  =  bound2;  }	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
433	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(max))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    maxEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
434	[BUG]  [BUGGY]  if(j  >=  mIX)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >=  mIX)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >=  mIX)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
435	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  max;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    currX;    j++)    {    if(Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
436	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]  =  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]  =  optimaValues[j];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]  =  optimaValues[j];	  Neighbor    optimaValues[i    +    1]    =    optimizer;    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
437	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1]  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1]  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1]	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
438	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[j])  {  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[j])  {  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  optima[j])  {  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
439	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
440	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
441	[BUG]  [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[0];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
442	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimizedaValues[i  +  1];  }	  if(j    >    0)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
443	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  mIX;  mIY  =  optimaValues[i  +  1];	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
444	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    j    =    0;    j    <    startEvaluations.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
445	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  mIX  =  bound1;  mIY  =  bound1;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	mIX  =  bound1;  mIY  =  bound1;	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
446	[BUG]  [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound1  ||  mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound1  ||  mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound2  ||  mIY  ==  bound1  ||  mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
447	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
448	[BUG]  [BUGGY]  if(j  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
449	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  bound2)  {  mX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValu	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
450	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaVal  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaVal  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaVal	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValu    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
451	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  limit;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    limit;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
452	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  start;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  start;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  start;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    limit;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
453	[BUG]  [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimizaValues[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  DesertionError.error(mIX,  mIY,  min,  optimizaValues[i  +  1]);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	DesertionError.error(mIX,  mIY,  min,  optimizaValues[i  +  1]);	  DesertionError.error(mIX,    mIY,    max,    optimizationValues[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
454	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  maxEvaluations.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START	  for(int    j    =    0;    j    <    max.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
455	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
456	[BUG]  [BUGGY]  for(int  j  =  start;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  start;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  start;  j  <  str.length;  j++)  {  if(Double.isNaN(optima[j]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO	  for(int    j    =    0;    j    <    str.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_PO    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
457	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  optimaValues[i  +  1]  =  mIY;  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	optimaValues[i  +  1]  =  mIY;	  optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
458	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
459	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	for(int  j  =  0;  j  <  starts.length;  j++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_	  for(int    j    =    0;    j    <    starts.length;    j++)    {    if(Double.isNaN(optima[j]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
460	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this).traverse(optima,  starts);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  AnnotationTraversal.traverse(compiler,  this).traverse(optima,  starts);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	AnnotationTraversal.traverse(compiler,  this).traverse(optima,  starts);	  if(j    ==    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
461	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  j,  starts);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  AnnotationTraversal.traverse(compiler,  j,  starts);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	AnnotationTraversal.traverse(compiler,  j,  starts);	  if(j    ==    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
462	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  goalType,  starts);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  AnnotationTraversal.traverse(compiler,  goalType,  starts);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	AnnotationTraversal.traverse(compiler,  goalType,  starts);	  if(j    ==    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
463	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this).traverse(optima);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  AnnotationTraversal.traverse(compiler,  this).traverse(optima);  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	AnnotationTraversal.traverse(compiler,  this).traverse(optima);	  if(j    ==    0)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_INVALID_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
464	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
465	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
466	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
467	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
468	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
469	[BUG]  [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
470	[BUG]  [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
471	[BUG]  [BUGGY]  if(bound1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
472	[BUG]  [BUGGY]  if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
473	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
474	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
475	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  m	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
476	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    else    {    mIX    =    optima[i];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
477	[BUG]  [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	Neighbor  optimaValues[i  +  1]!=  null)  {  if(Double.isNaN(optima[0]))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts	  Neighbor    optimaValues[i    +    1]    ==    null)    {    if(Double.isNaN(optima[0]))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
478	[BUG]  [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  >=  0)  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    optima[j])    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
479	[BUG]  [BUGGY]  if(mIX  ==  optima[j])  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;      [BUGGY]  if(mIX  ==  optima[j])  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	if(mIX  ==  optima[j])  {  mIX  =  optima[j];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    optima[j])    {    mIX    =    optima[j];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
