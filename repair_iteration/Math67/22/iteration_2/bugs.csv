bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i];  mIY  =  optimaValues[i];	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
2	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  optimaValues[i];	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
3	[BUG]  [BUGGY]  mIX  =  curr[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  curr[i];  mIY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  curr[i];  mIY  =  optimaValues[i];	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
4	[BUG]  [BUGGY]  if(max  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
5	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
6	[BUG]  [BUGGY]  if(max  >  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  bound2)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
7	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
8	[BUG]  [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
9	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
10	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
11	[BUG]  [BUGGY]  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  currX;  mIY  =  optimaValues[i  +  1];	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
12	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  optimaValues[i];  mIY  =  currY;  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  currY;	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
13	[BUG]  [BUGGY]  currY  =  optimaValues[1];  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  currY  =  optimaValues[1];  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[1];	  currY    =    optimaValues[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
14	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(min  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(max    >    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
15	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
16	[BUG]  [BUGGY]  if(min  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(min  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
17	[BUG]  [BUGGY]  mIX  =  currX;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  currX;  mIY  =  bound2;  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  currX;  mIY  =  bound2;	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
18	[BUG]  [BUGGY]  mIX  =  bound2;  mIY  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  bound2;  mIY  =  bound1;  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound2;  mIY  =  bound1;	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
19	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  max;  mIY  =  bound2;  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  max;  mIY  =  bound2;	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
20	[BUG]  [BUGGY]  if(i  <  =  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(i  <  =  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  =  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
21	[BUG]  [BUGGY]  mIX  =  bound2;  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  bound2;  mIY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound2;  mIY  =  optimaValues[i];	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
22	[BUG]  [BUGGY]  bound1  =  optima[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  bound1  =  optima[i];  mIY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i];  mIY  =  optimaValues[i];	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
23	[BUG]  [BUGGY]  currY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  currY  =  optima[j];  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optima[j];	  currY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
24	[BUG]  [BUGGY]  currY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  currY  =  optima[i];  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optima[i];	  currY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
25	[BUG]  [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
26	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  min;  mIY  =  optimaValues[i];	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
27	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
28	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
29	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
30	[BUG]  [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
31	[BUG]  [BUGGY]  mIX  =  currX;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  currX;  mIY  =  currY;  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  currX;  mIY  =  currY;	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  optima.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  0,  count  =  optima.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0,  count  =  optima.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
33	[BUG]  [BUGGY]  if(i  >  max)  {  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(i  >  max)  {  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
34	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  bound1;  mIY  =  currY;  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound1;  mIY  =  currY;	      mIX    =    bound1;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
35	[BUG]  [BUGGY]  currY  =  optimaValues[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  currY  =  optimaValues[i  +  2];  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i  +  2];	  currY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
36	[BUG]  [BUGGY]  currY  =  optimaValues[i]  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  currY  =  optimaValues[i]  +  bound2;  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  +  bound2;	  currY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
37	[BUG]  [BUGGY]  currY  =  optimaValues[i]  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  currY  =  optimaValues[i]  +  bound1;  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  +  bound1;	  currY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
42	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
43	[BUG]  [BUGGY]  if(i  >=  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(i  >=  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >=  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
44	[BUG]  [BUGGY]  currY  =  optimaValues[j  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  currY  =  optimaValues[j  +  2];  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[j  +  2];	  currY    =    optimaValues[j    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
45	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	      mIX    =    bound1;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
46	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	      mIX    =    bound1;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
47	[BUG]  [BUGGY]  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
48	[BUG]  [BUGGY]  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
49	[BUG]  [BUGGY]  bound1  =  optima[i];  boundY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  bound1  =  optima[i];  boundY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i];  boundY  =  optimaValues[i];	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
50	[BUG]  [BUGGY]  bound1  =  optimaValues[i];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  bound1  =  optimaValues[i];  mIY  =  max;  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[i];  mIY  =  max;	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
51	[BUG]  [BUGGY]  bound1  =  optimaValues[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  bound1  =  optimaValues[i];  mIY  =  optimaValues[i];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[i];  mIY  =  optimaValues[i];	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
52	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  mIX  =  max;  mIY  =  optimaValues[i  +  1];  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  max;  mIY  =  optimaValues[i  +  1];	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
53	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
54	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
55	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
56	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
57	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
58	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
59	[BUG]  [BUGGY]  if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
60	[BUG]  [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
61	[BUG]  [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
62	[BUG]  [BUGGY]  if(max  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
63	[BUG]  [BUGGY]  if(max  >  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(max  >  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(max    >    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
64	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
65	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
66	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
67	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
68	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
69	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
70	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      if(max    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
71	[BUG]  [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	      mIX    =    bound1;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
72	[BUG]  [BUGGY]  if(mIX!=  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX!=  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	      mIX    =    bound1;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
73	[BUG]  [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	      mIX    =    bound1;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
74	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
75	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
76	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      mIX    =    currX;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
77	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(max    >    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
78	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(j  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(max    >    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
79	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
80	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
81	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }	      mIX    =    bound1;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  for(int  i  =  start;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]    }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
86	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
87	[BUG]  [BUGGY]  if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
88	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
89	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
90	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
91	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
92	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
93	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	      if(mIX    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
94	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	      if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
95	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	      if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
96	[BUG]  [BUGGY]  if(bound1  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(bound1  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
97	[BUG]  [BUGGY]  if(bound1  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(bound1  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
98	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
99	[BUG]  [BUGGY]  if(mIX!=  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX!=  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	      mIX    =    max;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
100	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];    [BUGGY]  if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]    currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	      if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
