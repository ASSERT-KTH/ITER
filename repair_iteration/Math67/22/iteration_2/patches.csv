bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
2	[BUG]  [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  &&  mIY  <  =  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
3	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(min    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
4	[BUG]  [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
5	[BUG]  [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  max)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
6	[BUG]  [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
7	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(j    >    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
8	[BUG]  [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
9	[BUG]  [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
10	[BUG]  [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
11	[BUG]  [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currY)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
12	[BUG]  [BUGGY]  if(max  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    >=    min)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
13	[BUG]  [BUGGY]  if(i  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    >=    min)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
14	[BUG]  [BUGGY]  if(max  >  mIX)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  mIX)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  mIX)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(mIX    >    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
15	[BUG]  [BUGGY]  mIX  =  currX;  mIY  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  currX;  mIY  =  bound1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  currX;  mIY  =  bound1;	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
16	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  max;  mIY  =  bound1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  max;  mIY  =  bound1;	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
17	[BUG]  [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  currY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i  +  1];  mIY  =  currY;	  if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    currY;    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
30	[BUG]  [BUGGY]  mIX  =  bound2;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  bound2;  mIY  =  bound2;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound2;  mIY  =  bound2;	  mIX    =    currX;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
31	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  max;  mIY  =  currY;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  max;  mIY  =  currY;	  mIX    =    currX;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
32	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
33	[BUG]  [BUGGY]  if(max  >  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(min    >    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
34	[BUG]  [BUGGY]  if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
35	[BUG]  [BUGGY]  if(i  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(i    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
36	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(i    >=    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
37	[BUG]  [BUGGY]  if(max!=  0)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max!=  0)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max!=  0)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
38	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
39	[BUG]  [BUGGY]  mIX  =  bound1[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  bound1[i];  mIY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound1[i];  mIY  =  optimaValues[i];	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
40	[BUG]  [BUGGY]  if(mIX  ==  currY)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currY)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currY)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
41	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
42	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  mIX  =  optima[i];  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  mIX  =  optima[i];  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  mIX  =  optima[i];  mIY  =  currY;  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
43	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  min;  mIY  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  min;  mIY  =  max;	  mIX    =    min;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
44	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  min;  mIY  =  optimaValues[i  +  1];	  mIX    =    min;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
45	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  mIX    =    min;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
46	[BUG]  [BUGGY]  currY  =  optima[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optima[j  +  1];  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optima[j  +  1];	  currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
47	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  currX;  mIY  =  currY;  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
48	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  min;  mIY  =  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  min;  mIY  =  bound2;	  mIX    =    max;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
49	[BUG]  [BUGGY]  if(j  ==  0)  {  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  ==  0)  {  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
50	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
51	[BUG]  [BUGGY]  if(j  ==  0)  {  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  ==  0)  {  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
52	[BUG]  [BUGGY]  if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
53	[BUG]  [BUGGY]  if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  min;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
57	[BUG]  [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
58	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
59	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
60	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  ==  0)  {  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
61	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  min;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
65	[BUG]  [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
66	[BUG]  [BUGGY]  if(max!=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max!=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max!=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(max    >=    mIX)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
67	[BUG]  [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
68	[BUG]  [BUGGY]  if(currY  ==  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
69	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
70	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  min;  mIY  =  optimaValues[j];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  min;  mIY  =  optimaValues[j];	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
71	[BUG]  [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
72	[BUG]  [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound1;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound1;  }	  if(min    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
73	[BUG]  [BUGGY]  mIX  =  bound2;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  bound2;  mIY  =  currY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound2;  mIY  =  currY;	  mIX    =    bound1;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
74	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optima[i];  mIY  =  currY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i];  mIY  =  currY;	  mIX    =    optimaValues[i];    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
75	[BUG]  [BUGGY]  currY  =  optimaValues[i]  /  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i]  /  bound2;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  /  bound2;	  currY    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
76	[BUG]  [BUGGY]  currY  =  optimaValues[i]  +  j;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i]  +  j;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  +  j;	  currY    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
77	[BUG]  [BUGGY]  currY  =  optimaValues[i]  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i]  +  max;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  +  max;	  currY    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
78	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i];  mIY  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  max;	  if(mIX    ==    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
79	[BUG]  [BUGGY]  if(i  +  1  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  +  1  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  +  1  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
80	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
81	[BUG]  [BUGGY]  mIX  =  optima[i  +  1];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optima[i  +  1];  mIY  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i  +  1];  mIY  =  optimaValues[i  +  1];	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
82	[BUG]  [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  2];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  2];	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
83	[BUG]  [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[j  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[j  +  1];	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
84	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  if(max    >    max)    {    mIX    =    min;    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
85	[BUG]  [BUGGY]  if(max  >  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }	  if(max    >    max)    {    mIX    =    min;    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  min;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
89	[BUG]  [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  min;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
90	[BUG]  [BUGGY]  if(min  >  max)  {  if(bound1  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(bound1  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(bound1  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  max;  }	  if(bound1    >=    min)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
91	[BUG]  [BUGGY]  bound1  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i];	  bound1    =    optima[i];    boundY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
92	[BUG]  [BUGGY]  bound2  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound2  =  optima[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound2  =  optima[i];	  bound1    =    optima[i];    boundY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
93	[BUG]  [BUGGY]  bound1  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[i];	  bound1    =    optima[i];    boundY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
94	[BUG]  [BUGGY]  bound1  =  optima[0];  boundY  =  optimaValues[0];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[0];  boundY  =  optimaValues[0];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[0];  boundY  =  optimaValues[0];	  bound1    =    optima[i];    boundY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
95	[BUG]  [BUGGY]  currY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optima[i  +  1];  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optima[i  +  1];	  currY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
96	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  bound1;  mIY  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound1;  mIY  =  optimaValues[i  +  1];	  mIX    =    currX;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
97	[BUG]  [BUGGY]  mIX  =  bound2;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  bound2;  mIY  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound2;  mIY  =  optimaValues[i  +  1];	  mIX    =    currX;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
98	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
99	[BUG]  [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
100	[BUG]  [BUGGY]  if(max  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(mIX    <    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
101	[BUG]  [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
102	[BUG]  [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
103	[BUG]  [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
104	[BUG]  [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(max  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
105	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
106	[BUG]  [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
107	[BUG]  [BUGGY]  if(max  ==  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  ==  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  ==  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
108	[BUG]  [BUGGY]  if(max  ==  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  ==  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  ==  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
109	[BUG]  [BUGGY]  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
110	[BUG]  [BUGGY]  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
111	[BUG]  [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
112	[BUG]  [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
113	[BUG]  [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  }	  if(mIX    ==    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
114	[BUG]  [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  max)  {  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
115	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
116	[BUG]  [BUGGY]  if(mIX!=  bound2  &&  mIY  <  =  currY)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX!=  bound2  &&  mIY  <  =  currY)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  bound2  &&  mIY  <  =  currY)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(mIX!=    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
117	[BUG]  [BUGGY]  bound2  =  optima[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound2  =  optima[i];  mIY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound2  =  optima[i];  mIY  =  optimaValues[i];	  bound1    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
118	[BUG]  [BUGGY]  bound1  =  optima[i];  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[i];  mIY  =  mIY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i];  mIY  =  mIY;	  bound1    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
119	[BUG]  [BUGGY]  Integer  j  =  currY.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  Integer  j  =  currY.intValue();  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	Integer  j  =  currY.intValue();	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
120	[BUG]  [BUGGY]  Integer  j  =  currY.getIntValue();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  Integer  j  =  currY.getIntValue();  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	Integer  j  =  currY.getIntValue();	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
121	[BUG]  [BUGGY]  Integer  j  =  currX.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  Integer  j  =  currX.intValue();  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	Integer  j  =  currX.intValue();	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
122	[BUG]  [BUGGY]  ConvergenceError  ce  =  goalType.getOptimizationError();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  ConvergenceError  ce  =  goalType.getOptimizationError();  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	ConvergenceError  ce  =  goalType.getOptimizationError();	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
123	[BUG]  [BUGGY]  bound2  =  optima[i];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound2  =  optima[i];  mIY  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound2  =  optima[i];  mIY  =  max;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
124	[BUG]  [BUGGY]  bound1  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  max;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
125	[BUG]  [BUGGY]  bound1  =  optima[i];  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[i];  mIY  =  currY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i];  mIY  =  currY;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
126	[BUG]  [BUGGY]  bound1  =  optima[i];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[i];  mIY  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i];  mIY  =  max;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  min;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
130	[BUG]  [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  min;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  currX.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0,  count  =  currX.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0,  count  =  currX.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }	  for(int    i    =    0,    count    =    optima.length;    i    <    count;    i++)    {    mIX    +=    currY[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  optima.length;  i  <  len;  i++)  {  mIX  +=  currY[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0,  len  =  optima.length;  i  <  len;  i++)  {  mIX  +=  currY[i];  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0,  len  =  optima.length;  i  <  len;  i++)  {  mIX  +=  currY[i];  }	  for(int    i    =    0,    count    =    optima.length;    i    <    count;    i++)    {    mIX    +=    currY[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
133	[BUG]  [BUGGY]  int  count  =  optima.length;  i  <  count;  i++)  {  mIX  +=  currX[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  count  =  optima.length;  i  <  count;  i++)  {  mIX  +=  currX[i];  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  count  =  optima.length;  i  <  count;  i++)  {  mIX  +=  currX[i];  }	  for(int    i    =    0,    count    =    optima.length;    i    <    count;    i++)    {    mIX    +=    currY[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  currY.length;  i  <  count;  i++)  {  mIX  +=  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0,  count  =  currY.length;  i  <  count;  i++)  {  mIX  +=  optima[i];  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0,  count  =  currY.length;  i  <  count;  i++)  {  mIX  +=  optima[i];  }	  for(int    i    =    0,    count    =    optima.length;    i    <    count;    i++)    {    mIX    +=    currY[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
135	[BUG]  [BUGGY]  currY  =  optimaValues[i  +  3];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i  +  3];  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i  +  3];	  currY    =    optimaValues[i    +    2];    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
136	[BUG]  [BUGGY]  if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
137	[BUG]  [BUGGY]  if(currX  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
138	[BUG]  [BUGGY]  if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
139	[BUG]  [BUGGY]  if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  min;  mIX  =  bound1;  mIY  =  bound2;  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  min;  mIX  =  bound1;  mIY  =  bound2;  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  min;  mIX  =  bound1;  mIY  =  bound2;  }  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
140	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  max;  mIY  =  optimaValues[j];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  max;  mIY  =  optimaValues[j];	  if(mIX    ==    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
141	[BUG]  [BUGGY]  currY  =  optimaValues[i]  /  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i]  /  bound1;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  /  bound1;	  currY    =    optimaValues[i]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
142	[BUG]  [BUGGY]  currY  =  optimaValues[i  +  1]  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i  +  1]  +  bound1;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i  +  1]  +  bound1;	  currY    =    optimaValues[i]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
143	[BUG]  [BUGGY]  Integer  j  =  currY.getIntValue(min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  Integer  j  =  currY.getIntValue(min);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	Integer  j  =  currY.getIntValue(min);	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0;  i  <  bound1;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0;  i  <  bound1;  i++)  {  optima[i]  =  currY;  }	  if(i    >    max)    {    for(int    i    =    0;    i    <    bound2;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }	  if(i    >    max)    {    for(int    i    =    0;    i    <    bound2;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currX;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currX;  }	  if(i    >    max)    {    for(int    i    =    0;    i    <    bound2;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  currX;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0;  i  <  currX;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0;  i  <  currX;  i++)  {  optima[i]  =  currY;  }	  if(i    >    max)    {    for(int    i    =    0;    i    <    bound2;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
148	[BUG]  [BUGGY]  if(max  >  min)  {  if(min  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  if(min  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  if(min  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
149	[BUG]  [BUGGY]  if(max  >  min)  {  if(min  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  if(min  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  if(min  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
150	[BUG]  [BUGGY]  if(max  >  min)  {  if(min  >  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  if(min  >  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  if(min  >  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
151	[BUG]  [BUGGY]  if(i  <  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    =    max)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
152	[BUG]  [BUGGY]  if(i  <  =  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  =  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  =  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    =    max)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
153	[BUG]  [BUGGY]  mIX  =  curr[i];  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  curr[i];  mIY  =  currY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  curr[i];  mIY  =  currY;	  mIX    =    curr[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
154	[BUG]  [BUGGY]  if(max  >  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
155	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
156	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
157	[BUG]  [BUGGY]  bound1  =  optima[i  +  1];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[i  +  1];  mIY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i  +  1];  mIY  =  optimaValues[i];	  bound1    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
158	[BUG]  [BUGGY]  if(max  >  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  mIX)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
160	[BUG]  [BUGGY]  if(max  >=  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
161	[BUG]  [BUGGY]  if(max  >=  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  min)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
162	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
163	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(i    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
164	[BUG]  [BUGGY]  if(max  ==  0)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  ==  0)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  ==  0)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX    ==    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
165	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  currY;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
166	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  }	  mIX    =    currX;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
167	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    currX;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
168	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  bound2)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  }	  mIX    =    currX;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
169	[BUG]  [BUGGY]  if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
170	[BUG]  [BUGGY]  if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
171	[BUG]  [BUGGY]  currY  =  optimaValues[i]  *  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i]  *  bound2;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  *  bound2;	  currY    =    optimaValues[i]    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
172	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  bound1;  mIY  =  currY  +  1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound1;  mIY  =  currY  +  1;	  mIX    =    bound1;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
173	[BUG]  [BUGGY]  if(i  +  1  <  optimaValues.length)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  +  1  <  optimaValues.length)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  +  1  <  optimaValues.length)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
174	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
175	[BUG]  [BUGGY]  NeighborUtilities.checkState(currX  ==  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtilities.checkState(currX  ==  currY);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtilities.checkState(currX  ==  currY);	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
176	[BUG]  [BUGGY]  NeighborUtil.isNaN(currX)&&  j  <  =  max)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtil.isNaN(currX)&&  j  <  =  max)  {  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtil.isNaN(currX)&&  j  <  =  max)  {	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
177	[BUG]  [BUGGY]  NeighborUtilities.checkState(currX  ==  null);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtilities.checkState(currX  ==  null);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtilities.checkState(currX  ==  null);	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
178	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(currX  ==  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtilities.checkArgument(currX  ==  null);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtilities.checkArgument(currX  ==  null);	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
179	[BUG]  [BUGGY]  currY  =  optimisera[j];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimisera[j];  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimisera[j];	  currY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
180	[BUG]  [BUGGY]  if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
181	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
182	[BUG]  [BUGGY]  if(currX  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
183	[BUG]  [BUGGY]  if(currY  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
184	[BUG]  [BUGGY]  if(currX  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  m  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  m  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  m	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
185	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
186	[BUG]  [BUGGY]  if(currY  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  optima.length;  i  <  currX;  i++)  {  mIX  +=  currY[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0,  count  =  optima.length;  i  <  currX;  i++)  {  mIX  +=  currY[i];  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0,  count  =  optima.length;  i  <  currX;  i++)  {  mIX  +=  currY[i];  }	  for(int    i    =    0,    count    =    optima.length;    i    <    count;    i++)    {    mIX    +=    currY[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  optimaValues.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0,  count  =  optimaValues.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0,  count  =  optimaValues.length;  i  <  count;  i++)  {  mIX  +=  currY[i];  }	  for(int    i    =    0,    count    =    optima.length;    i    <    count;    i++)    {    mIX    +=    currY[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WI  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WI  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WI	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
193	[BUG]  [BUGGY]  if(max  >  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
194	[BUG]  [BUGGY]  if(max  >  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
195	[BUG]  [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    currY;    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
196	[BUG]  [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i  +  1];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  max)  {  mIX  =  optimaValues[i  +  1];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  max)  {  mIX  =  optimaValues[i  +  1];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    currY;    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
197	[BUG]  [BUGGY]  if(currY  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
199	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  min;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
204	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound1;  mIX  =  bound2;  mIY  =  bound2;  }	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
205	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
206	[BUG]  [BUGGY]  currY  =  optimaValues[i]  -  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i]  -  bound2;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  -  bound2;	  currY    =    optimaValues[i]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
207	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
208	[BUG]  [BUGGY]  if(j  >  lastNaN)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >  lastNaN)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  lastNaN)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
209	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }	  if(j    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
210	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  mIX    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
211	[BUG]  [BUGGY]  if(OptimaType.equals(optima[0]))  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(OptimaType.equals(optima[0]))  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(OptimaType.equals(optima[0]))  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  mIX    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
212	[BUG]  [BUGGY]  mIX  =  optima[0];  mIY  =  optimaValues[0];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optima[0];  mIY  =  optimaValues[0];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[0];  mIY  =  optimaValues[0];	  mIX    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
213	[BUG]  [BUGGY]  bound1  =  optima[0];  boundY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[0];  boundY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[0];  boundY  =  optimaValues[i];	  bound1    =    optima[i];    boundY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
214	[BUG]  [BUGGY]  bound1  =  optima[i];  boundY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[i];  boundY  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[i];  boundY  =  optimaValues[i  +  1];	  bound1    =    optima[i];    boundY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
215	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  optimaValues[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  optimaValues[i];  mIY  =  max;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  optimaValues[i];  mIY  =  max;  }	  if(mIX    <    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
216	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound1;	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
217	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i];  mIY  =  optimaValues[i  +  1]  =  bound2;	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
218	[BUG]  [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    currX;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
219	[BUG]  [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    currX;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
220	[BUG]  [BUGGY]  if(i  +  1  >=  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  +  1  >=  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  +  1  >=  bound1)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    currX;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
221	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
222	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
223	[BUG]  [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  mIX  =  bound1;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  mIX  =  bound1;  mIY  =  currY;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  mIX  =  bound1;  mIY  =  currY;  }	  mIX    =    currX;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
224	[BUG]  [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  +  1  <  bound1)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    currX;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
225	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
226	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
227	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i]  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i]  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i]	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
228	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
229	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
230	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
231	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
232	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  mIX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
233	[BUG]  [BUGGY]  if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(mIX    >=    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
234	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
235	[BUG]  [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
236	[BUG]  [BUGGY]  if(max  >  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  if(max    >    max)    {    mIX    =    min;    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
237	[BUG]  [BUGGY]  if(currX  ==  bound1  &&  currY  <  =  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1  &&  currY  <  =  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1  &&  currY  <  =  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
238	[BUG]  [BUGGY]  if(currX  ==  bound1  &&  currY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1  &&  currY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1  &&  currY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
239	[BUG]  [BUGGY]  bound2  =  optimaValues[i];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound2  =  optimaValues[i];  mIY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound2  =  optimaValues[i];  mIY  =  optimaValues[i];	  bound1    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
240	[BUG]  [BUGGY]  bound1  =  optimaValues[i  +  1];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optimaValues[i  +  1];  mIY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[i  +  1];  mIY  =  optimaValues[i];	  bound1    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
241	[BUG]  [BUGGY]  bound1  =  optimaValues[0];  mIY  =  optimaValues[0];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optimaValues[0];  mIY  =  optimaValues[0];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[0];  mIY  =  optimaValues[0];	  bound1    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
242	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
244	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
245	[BUG]  [BUGGY]  if(max  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
246	[BUG]  [BUGGY]  if(max  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
247	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
248	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
249	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i];  mIY  =  optima[i];	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
250	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
251	[BUG]  [BUGGY]  bound1  =  optima[0];  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[0];  mIY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[0];  mIY  =  optimaValues[i];	  bound1    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
252	[BUG]  [BUGGY]  bound1  =  optima[0];  mIY  =  optimaValues[0];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optima[0];  mIY  =  optimaValues[0];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optima[0];  mIY  =  optimaValues[0];	  bound1    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
253	[BUG]  [BUGGY]  if(max  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
254	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
255	[BUG]  [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i  +  1])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i  +  1])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  &&  mIY  <  =  optimaValues[i  +  1])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
256	[BUG]  [BUGGY]  if(i  >=  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >=  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >=  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    =    max)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
257	[BUG]  [BUGGY]  if(i  <  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    =    max)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
258	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    =    max)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  max;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  max;  }	  if(i    >    max)    {    for(int    i    =    0;    i    <    bound2;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
260	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  bound2);  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  bound2);  mIY  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtilities.checkArgument(mIX  ==  bound2);  mIY  =  optimaValues[i  +  1];	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
261	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
262	[BUG]  [BUGGY]  if(max  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(max    >    min)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
263	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
264	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
265	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
266	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimizeda[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimizeda[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimizeda[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
267	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
268	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
269	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[j  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[j  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[j  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
270	[BUG]  [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  return  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  return  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  return  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
271	[BUG]  [BUGGY]  bound1  =  optimaValues[i];  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optimaValues[i];  mIY  =  currY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[i];  mIY  =  currY;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
272	[BUG]  [BUGGY]  bound2  =  optimaValues[i];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound2  =  optimaValues[i];  mIY  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound2  =  optimaValues[i];  mIY  =  max;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
273	[BUG]  [BUGGY]  bound1  =  optimaValues[i  +  1];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optimaValues[i  +  1];  mIY  =  max;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[i  +  1];  mIY  =  max;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
274	[BUG]  [BUGGY]  bound1  =  optimaValues[i];  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  bound1  =  optimaValues[i];  mIY  =  mIY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	bound1  =  optimaValues[i];  mIY  =  mIY;	  bound1    =    optimaValues[i];    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
275	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }	  mIX    =    optimaValues[i];    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
276	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    optimaValues[i];    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
277	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }	  mIX    =    optimaValues[i];    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
278	[BUG]  [BUGGY]  if(mIX!=  bound2  &&  mIY  <  =  optimaValues[i  +  1])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX!=  bound2  &&  mIY  <  =  optimaValues[i  +  1])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  bound2  &&  mIY  <  =  optimaValues[i  +  1])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(mIX!=    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
279	[BUG]  [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
280	[BUG]  [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
281	[BUG]  [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
282	[BUG]  [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[j];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
283	[BUG]  [BUGGY]  Integer  j  =  currY.getIntValue(i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  Integer  j  =  currY.getIntValue(i  +  1);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	Integer  j  =  currY.getIntValue(i  +  1);	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
284	[BUG]  [BUGGY]  Integer  j  =  currY.getIntValue(max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  Integer  j  =  currY.getIntValue(max);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	Integer  j  =  currY.getIntValue(max);	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
285	[BUG]  [BUGGY]  Integer  j  =  currY.getIntValue(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  Integer  j  =  currY.getIntValue(min,  max);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	Integer  j  =  currY.getIntValue(min,  max);	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
286	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
287	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
288	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
289	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
290	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
291	[BUG]  [BUGGY]  if(max  >  bound1)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  bound1)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  bound1)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX    ==    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
292	[BUG]  [BUGGY]  if(max  >  bound1)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  bound1)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  bound1)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }	  if(mIX    ==    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
295	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
296	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
297	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }	  mIX    =    bound2;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
298	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  mIX    =    bound2;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
299	[BUG]  [BUGGY]  if(currY  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
300	[BUG]  [BUGGY]  if(currY  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currY  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currY  ==  null)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
301	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
303	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  bound1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  bound1;  i  <  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
305	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
306	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
307	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  >  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
308	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  bound2;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
310	[BUG]  [BUGGY]  if(j  >  lastNaN)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >  lastNaN)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  lastNaN)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(j    >    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
311	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
312	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
313	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
314	[BUG]  [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i+1];  }  else  {  mIX  =  optima[i+1];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i+1];  }  else  {  mIX  =  optima[i+1];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i+1];  }  else  {  mIX  =  optima[i+1];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
315	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
316	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
317	[BUG]  [BUGGY]  if(mIX  >=  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  bound2  &&  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(mIX!=    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
318	[BUG]  [BUGGY]  if(j  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  if(j    >    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
319	[BUG]  [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
320	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX    ==    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
321	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX    ==    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
322	[BUG]  [BUGGY]  if(j  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
323	[BUG]  [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
324	[BUG]  [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(mIX  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
325	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  currX);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtilities.checkArgument(mIX  ==  currX);	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
326	[BUG]  [BUGGY]  pendencyInclusive(max,  currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  pendencyInclusive(max,  currX,  currY);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	pendencyInclusive(max,  currX,  currY);	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
327	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtilities.checkArgument(mIX  >=  currX);	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
328	[BUG]  [BUGGY]  NeighborUtilities.checkState(mIX  ==  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  NeighborUtilities.checkState(mIX  ==  currX);  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	NeighborUtilities.checkState(mIX  ==  currX);	  if(j    ==    0)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
329	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
330	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
331	[BUG]  [BUGGY]  if(mIX!=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX!=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
332	[BUG]  [BUGGY]  if(j  <  min)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    =    max)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
333	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    =    max)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currX)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currX)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currX)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
335	[BUG]  [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
336	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    min;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
337	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  max;  mIY  =  optimaValues[i];  }	  mIX    =    min;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
338	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
339	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
340	[BUG]  [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  ==  0)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
341	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
342	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  max;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  max;  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
343	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
344	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
345	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
346	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
347	[BUG]  [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
348	[BUG]  [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
349	[BUG]  [BUGGY]  if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    currY;    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
350	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    currY;    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
351	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    currY;    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
352	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  currX;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    currY;    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
353	[BUG]  [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
354	[BUG]  [BUGGY]  if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
355	[BUG]  [BUGGY]  if(bound1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
356	[BUG]  [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
357	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIY  =  min;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >  max)  {  mIY  =  min;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >  max)  {  mIY  =  min;  mIY  =  optimaValues[i  +  1];  }	  if(max    >    max)    {    mIX    =    min;    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
358	[BUG]  [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  min;  mIY  =  optimaValues[i  +  1];  }	  if(max    >    max)    {    mIX    =    min;    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
359	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  optima[i];  mIY  =  mIY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  optima[i];  mIY  =  mIY;	  mIX    =    optimaValues[i];    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
360	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }	  mIX    =    optimaValues[i];    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
361	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  bound1;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
364	[BUG]  [BUGGY]  if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
365	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIY  =  max;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIY  =  max;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIY  =  max;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
366	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  mIX;  mIY  =  optimaValues[i  +  1];	  mIX    =    currX;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
367	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    currX;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
368	[BUG]  [BUGGY]  if(mIX!=  optimaValues[i  +  1])  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX!=  optimaValues[i  +  1])  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  optimaValues[i  +  1])  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
369	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  0)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
370	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  optimaValues[i  +  1];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i    +    1];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
371	[BUG]  [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  min)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(currX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
372	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  currY;  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
373	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
374	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
375	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  min;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
376	[BUG]  [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(currX)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
377	[BUG]  [BUGGY]  if(j  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  max)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
378	[BUG]  [BUGGY]  if(j  <  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  if(max  >  bound1)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    if(max    >    bound1)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
379	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
380	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
381	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  mIX    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
382	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  mIX    =    optima[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
383	[BUG]  [BUGGY]  if(j  <  min)  {  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
384	[BUG]  [BUGGY]  if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  if(mIX  ==  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
385	[BUG]  [BUGGY]  if(j  <  min)  {  if(mIX  >=  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  if(mIX  >=  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  if(mIX  >=  max)  {  mIX  =  optimaValues[i];  mIY  =  mIY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
386	[BUG]  [BUGGY]  if(j  <  min)  {  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  if(mIX  >  max)  {  mIX  =  optimaValues[i];  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(j    <    min)    {    if(mIX    ==    max)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
387	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
388	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(min    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
389	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
390	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
391	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
392	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
393	[BUG]  [BUGGY]  if(mIX!=  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX!=  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
394	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
395	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
396	[BUG]  [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  ||  mIY  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
397	[BUG]  [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  start;  i  <  =  max;  i++)  {  if(!mIX  +  currY)  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(!mIX    +    currY)    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
398	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  max;  mIY  =  mIY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  max;  mIY  =  mIY;	  mIX    =    max;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
399	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  mIX;  mIY  =  bound2;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  mIX;  mIY  =  bound2;	  mIX    =    max;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
400	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
401	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(i  <  min)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
402	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currY)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currY)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  currX;  i++)  {  if(Double.isNaN(currY)||  Double.isNaN(currY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_	  for(int    i    =    start;    i    <    bound2;    i++)    {    if(Double.isNaN(currX)||    Double.isNaN(currY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
403	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
404	[BUG]  [BUGGY]  if(mIX!=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX!=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
405	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(mIX!=    max)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
406	[BUG]  [BUGGY]  currY  =  optimaValues[i]  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  currY  =  optimaValues[i]  -  bound1;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	currY  =  optimaValues[i]  -  bound1;	  currY    =    optimaValues[i]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
407	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  optimaValues.length;  i  <  count;  i++)  {  mIX  +=  currX[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  0,  count  =  optimaValues.length;  i  <  count;  i++)  {  mIX  +=  currX[i];  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  0,  count  =  optimaValues.length;  i  <  count;  i++)  {  mIX  +=  currX[i];  }	  for(int    i    =    0,    count    =    optima.length;    i    <    count;    i++)    {    mIX    +=    currY[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
408	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_A	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
409	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
410	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  min;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  min;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
411	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  start;  i  <  =  max;  i++)  {  if(Double.isNaN(mIX)||  Double.isNaN(mIY))  {  throw  new  OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_	  for(int    i    =    start;    i    <    max;    i++)    {    if(Double.isNaN(mIX)||    Double.isNaN(mIY))    {    throw    new    OptimizationException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
412	[BUG]  [BUGGY]  if(j  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >=  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(i    >=    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
413	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  bound1;  mIY  =  bound1;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  bound1;  mIY  =  bound1;	  mIX    =    bound2;    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
414	[BUG]  [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
415	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
416	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  mIX;  mIY  =  currY;  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  mIX;  mIY  =  currY;	  mIX    =    bound1;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
417	[BUG]  [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  currX)  {  mIX  =  bound1;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2  &&  mIY  <  =  currX)  {  mIX  =  bound1;  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  &&  mIY  <  =  currX)  {  mIX  =  bound1;  mIY  =  currY;  }	  mIX    =    bound1;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
418	[BUG]  [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  ||  mIY  ==  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }	  mIX    =    bound2;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
419	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }	  mIX    =    bound2;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
420	[BUG]  [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2  ||  mIY  ==  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  ||  mIY  ==  optimaValues[i])  {  mIX  =  bound2;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    bound2;    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
421	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  mIX;  mIY  =  optimaValues[i];  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  mIX;  mIY  =  optimaValues[i];	  if(mIX    ==    currX)    {    mIX    =    mIX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
422	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
423	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  bound2  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    else    {    bound2    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
424	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
425	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
426	[BUG]  [BUGGY]  if(mIX!=  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX!=  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX!=  max)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }	  mIX    =    max;    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
427	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  mIX;  mIY  =  optimaValues[i];  }	  if(mIX    ==    null)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
428	[BUG]  [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  <  bound2)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
429	[BUG]  [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
430	[BUG]  [BUGGY]  if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  <  =  max)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
431	[BUG]  [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  optimaValues[0];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  optimaValues[0];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(bound1  ==  0)  {  mIX  =  bound1;  mIY  =  optimaValues[0];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
432	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
433	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  currY;  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
434	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
435	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  min)  {  mIX  =  max;  mIY  =  optimaValues[i  +  1];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(mIX    >=    max)    {    mIX    =    min;    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
436	[BUG]  [BUGGY]  int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currX;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currX;  }	  if(i    >    max)    {    for(int    i    =    0;    i    <    bound2;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
437	[BUG]  [BUGGY]  int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  0;  i  <  bound2;  i++)  {  optima[i]  =  currY;  }	  if(i    >    max)    {    for(int    i    =    0;    i    <    bound2;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
438	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  max;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  max;  }	  if(mIX    <    min)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
439	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currX)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currX)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	for(int  i  =  1;  i  <  max;  i++)  {  if(mIX  >  currX)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
440	[BUG]  [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	int  i  =  start;  i  <  =  max;  i++)  {  if(mIX  >  currY)  {  throw  new  OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,  starts);  }	  for(int    i    =    start;    i    <    max;    i++)    {    if(mIX    >    currY)    {    throw    new    OptimizationException(LocalizedFormats.UNCONVERGENCE_WITH_ANY_START_POINT,    starts);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
441	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
442	[BUG]  [BUGGY]  if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
443	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  >=  max)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[i];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
444	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  <  min)  {  mIX  =  max;  mIY  =  optimaValues[i];  }  else  {  mIX  =  min;  mIY  =  optimaValues[j];  }	  if(i    <    min)    {    mIX    =    max;    mIY    =    optimaValues[i];    }    else    {    mIX    =    min;    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
445	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
446	[BUG]  [BUGGY]  if(mIX  ==  currY)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currY)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currY)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
447	[BUG]  [BUGGY]  if(j  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  <  min)  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(j    >    max)    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
448	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
449	[BUG]  [BUGGY]  if(currX  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
450	[BUG]  [BUGGY]  if(max  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(max  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(max  >  0)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
451	[BUG]  [BUGGY]  if(currX  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  null)  {  if(bound1  ==  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  max;  mIX  =  bound1;  mIY  =  bound2;  }	  if(bound1    ==    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    mIX    =    max;    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
452	[BUG]  [BUGGY]  if(mIX  ==  null)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  null)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  null)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
453	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
454	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  0)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i  +  1];  }  else  {  mIX  =  optimaValues[i  +  1];  }	  mIX    =    optimaValues[i];    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
455	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [BUGGY]      }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	mIX  =  mIX;  mIY  =  mIY;	  mIX    =    currX;    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
456	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  currX;  mIY  =  currY;  }	  mIX    =    currX;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
457	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  mIX;  mIY  =  bound2;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    currX;    mIY    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
458	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
459	[BUG]  [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(currX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
460	[BUG]  [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound1)  {  mIX  =  bound2;  mIY  =  bound1;  }  else  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    ==    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
461	[BUG]  [BUGGY]  if(j  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(j  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(j  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
462	[BUG]  [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(mIX  >=  bound1)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
463	[BUG]  [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(min  >  max)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(min  >  max)  {  if(mIX  >=  bound2)  {  mIX  =  optimaValues[i];  mIY  =  optimaValues[i];  }  else  {  currX  =  optimaValues[i  +  1];  }	  if(max    >=    bound1)    {    mIX    =    optimaValues[i];    mIY    =    optimaValues[i];    }    else    {    currX    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
464	[BUG]  [BUGGY]  if(mIX  ==  bound2  ||  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2  ||  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2  ||  mIY  <  =  optimaValues[i])  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(mIX    ==    bound2    &&    mIY    <    =    optimaValues[i])    {    mIX    =    bound1;    mIY    =    optimaValues[i];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
465	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
466	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  bound1;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
467	[BUG]  [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  bound2)  {  mIX  =  currX;  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
468	[BUG]  [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  currX)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  }	  if(mIX    ==    bound1)    {    mIX    =    currX;    mIY    =    optimaValues[i];    }    else    {    mIX    =    optima[i];    mIY    =    optimaValues[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
469	[BUG]  [BUGGY]  if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  mIX    =    curr[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
470	[BUG]  [BUGGY]  if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }	  mIX    =    curr[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
471	[BUG]  [BUGGY]  if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];      [BUGGY]  if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }    [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	if(mIX  ==  curr[i])  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    curr[i];    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
