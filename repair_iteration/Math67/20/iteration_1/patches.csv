bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optimaValues[i  +  1]  =  max;  [BUGGY]    currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  1]  =  max;	  optimaValues[i    +    1]    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
2	[BUG]  [BUGGY]  optima[i  +  1]  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optima[i  +  1]  =  min;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optima[i  +  1]  =  min;	      optima[i    +    1]    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
3	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optimaValues[i  +  1]  =  min;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  1]  =  min;	      optima[i    +    1]    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
4	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i];  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	mIX  =  optima[i];  mIY  =  optima[i];	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
5	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
6	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
7	[BUG]  [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
8	[BUG]  [BUGGY]  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
9	[BUG]  [BUGGY]  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
10	[BUG]  [BUGGY]  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
11	[BUG]  [BUGGY]  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
12	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
13	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
14	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
15	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
16	[BUG]  [BUGGY]  optima[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optima[i  +  1]  =  bound2;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optima[i  +  1]  =  bound2;	      optimisera[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
17	[BUG]  [BUGGY]  optimisea[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optimisea[i  +  1]  =  bound2;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisea[i  +  1]  =  bound2;	      optimisera[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
18	[BUG]  [BUGGY]  optima[i  +  1]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optima[i  +  1]  =  mIX;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optima[i  +  1]  =  mIX;	      optima[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
19	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
20	[BUG]  [BUGGY]  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
21	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
22	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
23	[BUG]  [BUGGY]  optima[i  +  1]  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optima[i  +  1]  =  mIY;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optima[i  +  1]  =  mIY;	      optima[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
24	[BUG]  [BUGGY]  optimaValues[i  +  2]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optimaValues[i  +  2]  =  currX;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  2]  =  currX;	      optimaValues[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
25	[BUG]  [BUGGY]  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
26	[BUG]  [BUGGY]  optimisea[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optimisea[i  +  1]  =  bound1;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisea[i  +  1]  =  bound1;	      optimisera[i    +    1]    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
27	[BUG]  [BUGGY]  optimisationa[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optimisationa[i  +  1]  =  bound1;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisationa[i  +  1]  =  bound1;	      optimisera[i    +    1]    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
28	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
29	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
30	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
31	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
32	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  mX;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  optimaValues[i  +  1]  =  mX;  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  1]  =  mX;	      optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
33	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
34	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
35	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
36	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
37	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
38	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
39	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
40	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
41	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
42	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
43	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;    [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
