bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
2	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
3	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
4	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
5	[BUG]  [BUGGY]  if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
6	[BUG]  [BUGGY]  if(i  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
7	[BUG]  [BUGGY]  if(i  +  1  <  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
8	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
9	[BUG]  [BUGGY]  optimisationa[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisationa[i  +  1]  =  bound2;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisationa[i  +  1]  =  bound2;	  optimisationa[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
10	[BUG]  [BUGGY]  optimisationa[i  +  1]  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisationa[i  +  1]  =  max;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisationa[i  +  1]  =  max;	  optimisationa[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
11	[BUG]  [BUGGY]  optimisationa[i  +  1]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisationa[i  +  1]  =  mIX;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisationa[i  +  1]  =  mIX;	  optimisationa[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
12	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
13	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
14	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
15	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
16	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
17	[BUG]  [BUGGY]  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  null;  }	  if(i+1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
18	[BUG]  [BUGGY]  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }	  if(i+1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
19	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]!=  class,  interface  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]!=  class,  interface  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]!=  class,  interface	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
20	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  ==  class,  interface  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  ==  class,  interface  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  ==  class,  interface	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
21	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optimaValues[j]!=  class,  interface,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optimaValues[j]!=  class,  interface,  or  enum  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optimaValues[j]!=  class,  interface,  or  enum	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
22	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optimaValues[j]  ==  class,  interface,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optimaValues[j]  ==  class,  interface,  or  enum  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optimaValues[j]  ==  class,  interface,  or  enum	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
23	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
24	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
25	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  max;  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
26	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  null;  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
27	[BUG]  [BUGGY]  bucket[i  +  1]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  bucket[i  +  1]  =  currX;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	bucket[i  +  1]  =  currX;	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
28	[BUG]  [BUGGY]  vices.add(currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  vices.add(currX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	vices.add(currX,  currY);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
29	[BUG]  [BUGGY]  safeAdd(mIX,  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeAdd(mIX,  currY,  max);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeAdd(mIX,  currY,  max);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
30	[BUG]  [BUGGY]  Convergence  ce  =  goalType.getConvergence();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  Convergence  ce  =  goalType.getConvergence();  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	Convergence  ce  =  goalType.getConvergence();	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
31	[BUG]  [BUGGY]  optimaValues[i  +  2]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimaValues[i  +  2]  =  mIX;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  2]  =  mIX;	  optimaValues[i    +    2]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
32	[BUG]  [BUGGY]  optimaValues[i  +  2]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimaValues[i  +  2]  =  bound1;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  2]  =  bound1;	  optimaValues[i    +    2]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
33	[BUG]  [BUGGY]  optimiseaValues[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimiseaValues[i  +  1]  =  bound1;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimiseaValues[i  +  1]  =  bound1;	  optimisea[i    +    1]    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
34	[BUG]  [BUGGY]  optimisea[i  +  1]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisea[i  +  1]  =  mIX;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisea[i  +  1]  =  mIX;	  optimisea[i    +    1]    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
35	[BUG]  [BUGGY]  optimisea[i  +  1]  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisea[i  +  1]  =  max;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisea[i  +  1]  =  max;	  optimisea[i    +    1]    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
36	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
37	[BUG]  [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
38	[BUG]  [BUGGY]  if(i  +  1  <  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
39	[BUG]  [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
40	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
41	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
42	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
43	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  null;  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
44	[BUG]  [BUGGY]  Convergence  ce  =  goalType.getOptimizationContext();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  Convergence  ce  =  goalType.getOptimizationContext();  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	Convergence  ce  =  goalType.getOptimizationContext();	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
45	[BUG]  [BUGGY]  Convergence  ce  =  goalType.getOptimizationConvention();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  Convergence  ce  =  goalType.getOptimizationConvention();  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	Convergence  ce  =  goalType.getOptimizationConvention();	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
46	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  currX;  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
47	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimistica[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimistica[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optimistica[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
48	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
49	[BUG]  [BUGGY]  optimiseaValues[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimiseaValues[i  +  1]  =  bound2;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimiseaValues[i  +  1]  =  bound2;	  optimisea[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
50	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  mY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimaValues[i  +  1]  =  mY;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  1]  =  mY;	  optimaValues[i    +    1]    =    mX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
51	[BUG]  [BUGGY]  MutableValues.checkNotNull(currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  MutableValues.checkNotNull(currX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	MutableValues.checkNotNull(currX,  currY);	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
52	[BUG]  [BUGGY]  safeAdd(mIX,  mY,  currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeAdd(mIX,  mY,  currX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeAdd(mIX,  mY,  currX,  currY);	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
53	[BUG]  [BUGGY]  if(i  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
54	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
55	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
56	[BUG]  [BUGGY]  if(i  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
57	[BUG]  [BUGGY]  bucket[i]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  bucket[i]  =  currX;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	bucket[i]  =  currX;	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
58	[BUG]  [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
59	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(i  <  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(i  <  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
60	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
61	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
62	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  max;  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
63	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  null;  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
64	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  curr[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  curr[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  curr[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  currY;  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
65	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  max)  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  max)  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  max)  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
66	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
67	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX!=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX!=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX!=  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
68	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  ==  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(mIX  ==  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(mIX  ==  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
69	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  +  1  >=  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
70	[BUG]  [BUGGY]  vices.add(optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  vices.add(optima[i  +  1]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	vices.add(optima[i  +  1]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
71	[BUG]  [BUGGY]  safeAdd(mIX,  mIY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeAdd(mIX,  mIY,  max);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeAdd(mIX,  mIY,  max);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
72	[BUG]  [BUGGY]  vices.add(optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  vices.add(optima[i]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	vices.add(optima[i]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
73	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
74	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
75	[BUG]  [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  max;  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
76	[BUG]  [BUGGY]  MutableValues.checkNotNull(currX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  MutableValues.checkNotNull(currX);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	MutableValues.checkNotNull(currX);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
77	[BUG]  [BUGGY]  safeAdd(mIX,  mY,  max);  currX  =  optima[i  +  1];  currY  =  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeAdd(mIX,  mY,  max);  currX  =  optima[i  +  1];  currY  =  optimaValues[j];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeAdd(mIX,  mY,  max);  currX  =  optima[i  +  1];  currY  =  optimaValues[j];	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
78	[BUG]  [BUGGY]  MutableValues.checkNotNull(currX);  mIX  =  optima[i  +  1];  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  MutableValues.checkNotNull(currX);  mIX  =  optima[i  +  1];  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	MutableValues.checkNotNull(currX);  mIX  =  optima[i  +  1];  mIY  =  optima[i];	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
79	[BUG]  [BUGGY]  MutableValues.checkNotNull(currX);  mIX  =  optima[i];  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  MutableValues.checkNotNull(currX);  mIX  =  optima[i];  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	MutableValues.checkNotNull(currX);  mIX  =  optima[i];  mIY  =  optima[i];	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
80	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  mIX  =  max;  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	mIX  =  max;  mIY  =  optima[i];	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
81	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  mIX  =  optima[i];  mIY  =  max;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	mIX  =  optima[i];  mIY  =  max;	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
82	[BUG]  [BUGGY]  mIX  =  optima[i  +  1];  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  mIX  =  optima[i  +  1];  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	mIX  =  optima[i  +  1];  mIY  =  optima[i];	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
83	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
84	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]),  bound1  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]),  bound1  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]),  bound1  =  optima[i  +  1];	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
85	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]),  bound1  =  optima[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]),  bound1  =  optima[j  +  1];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]),  bound1  =  optima[j  +  1];	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
86	[BUG]  [BUGGY]  luate(optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  luate(optima[i  +  1]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	luate(optima[i  +  1]);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
87	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]),  bound2  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]),  bound2  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]),  bound2  =  optima[i  +  1];	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
88	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]  <  0)||  safeMultiply(optima[i  +  1]  >  0.0)||  safeMultiply(optima[i  +  1]  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]  <  0)||  safeMultiply(optima[i  +  1]  >  0.0)||  safeMultiply(optima[i  +  1]  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]  <  0)||  safeMultiply(optima[i  +  1]  >  0.0)||  safeMultiply(optima[i  +  1]  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
89	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  =  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  =  max);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  =  max);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
90	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  NeighborUtilities.checkArgument(mIY!=  null);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
91	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  >  max);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  >  max);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
92	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
93	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
94	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  m	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
95	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optimizeda[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optimizeda[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optimizeda[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
96	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]  <  0)&&  max  >  optimaValues[i  +  1]  <  =  max)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]  <  0)&&  max  >  optimaValues[i  +  1]  <  =  max)  {  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]  <  0)&&  max  >  optimaValues[i  +  1]  <  =  max)  {	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
97	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]  <  0)||  safeMultiply(optima[i  +  1]  >  0.0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]  <  0)||  safeMultiply(optima[i  +  1]  >  0.0))  {  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]  <  0)||  safeMultiply(optima[i  +  1]  >  0.0))  {	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
98	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
99	[BUG]  [BUGGY]  AssertionError  ce  =  goalType.getOptimizationError();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  AssertionError  ce  =  goalType.getOptimizationError();  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	AssertionError  ce  =  goalType.getOptimizationError();	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
100	[BUG]  [BUGGY]  AssertionError  ce  =  goalType.getOptimizerError();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  AssertionError  ce  =  goalType.getOptimizerError();  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	AssertionError  ce  =  goalType.getOptimizerError();	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
101	[BUG]  [BUGGY]  AssertionError  ce  =  goalType.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  AssertionError  ce  =  goalType.getOptimizer();  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	AssertionError  ce  =  goalType.getOptimizer();	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
102	[BUG]  [BUGGY]  AssertionError  ce  =  goalType.createOptimizer(bound1  +  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  AssertionError  ce  =  goalType.createOptimizer(bound1  +  bound2);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	AssertionError  ce  =  goalType.createOptimizer(bound1  +  bound2);	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
103	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i+1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
104	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(i+1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
105	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]  <  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]  <  0)  {  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]  <  0)  {	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
106	[BUG]  [BUGGY]  optimisationa[i  +  1]  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisationa[i  +  1]  =  mIY;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisationa[i  +  1]  =  mIY;	  optimisationa[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
107	[BUG]  [BUGGY]  Integer  j  =  optimisera[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  Integer  j  =  optimisera[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	Integer  j  =  optimisera[i  +  1];	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
108	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  Integer  j  =  optimizer.getInt(i  +  1);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	Integer  j  =  optimizer.getInt(i  +  1);	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
109	[BUG]  [BUGGY]  NeighborUtil.isNaN(currX)&&  j  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtil.isNaN(currX)&&  j  >  0)  {  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtil.isNaN(currX)&&  j  >  0)  {	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
110	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIY!=  null);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
111	[BUG]  [BUGGY]  NeighborUtilities.checkState(bound1  >=  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkState(bound1  >=  bound2);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkState(bound1  >=  bound2);	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
112	[BUG]  [BUGGY]  NeighborUtilities.checkState(bound1  ==  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkState(bound1  ==  bound2);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkState(bound1  ==  bound2);	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
113	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
114	[BUG]  [BUGGY]  if(i  +  1  <  =  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
115	[BUG]  [BUGGY]  safeAdd(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeAdd(mIX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeAdd(mIX,  currY);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
116	[BUG]  [BUGGY]  mIX  =  optima[0];  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  mIX  =  optima[0];  mIY  =  optima[0];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	mIX  =  optima[0];  mIY  =  optima[0];	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
117	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  mIX  =  bound1;  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	mIX  =  bound1;  mIY  =  optima[i];	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
118	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
119	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
120	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]),  bound2  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]),  bound2  =  optima[j];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]),  bound2  =  optima[j];	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
121	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]),  optimizer,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]),  optimizer,  max);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]),  optimizer,  max);	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
122	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
123	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
124	[BUG]  [BUGGY]  optimisea[i  +  1]  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisea[i  +  1]  =  mIY;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisea[i  +  1]  =  mIY;	  optimisea[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
125	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]),  bound2  =  optima[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]),  bound2  =  optima[j  +  1];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]),  bound2  =  optima[j  +  1];	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
126	[BUG]  [BUGGY]  optimaValues[i  +  3]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimaValues[i  +  3]  =  currX;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimaValues[i  +  3]  =  currX;	  optimaValues[i    +    2]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
127	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(bound1  ==  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(bound1  ==  bound2);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(bound1  ==  bound2);	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
128	[BUG]  [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i    <    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
129	[BUG]  [BUGGY]  safeMultiply(optima[i  +  1]),  max,  optimaValues[j]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  safeMultiply(optima[i  +  1]),  max,  optimaValues[j]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	safeMultiply(optima[i  +  1]),  max,  optimaValues[j]);	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
130	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
131	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1[i];  mIY  =  bound2[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  >  0)  {  mIX  =  bound1[i];  mIY  =  bound2[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  >  0)  {  mIX  =  bound1[i];  mIY  =  bound2[i];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
132	[BUG]  [BUGGY]  if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
133	[BUG]  [BUGGY]  if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  max)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
134	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
135	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
136	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
137	[BUG]  [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  >=  class,  interface  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  >=  class,  interface  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  >=  class,  interface	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
138	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface,  or  enum  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface,  or  enum	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
139	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface,  or  enum  expected  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface,  or  enum  expected  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface,  or  enum  expected	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
140	[BUG]  [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  max)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  ==  class,  interface	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
141	[BUG]  [BUGGY]  NeighborUtil.isNaN(currX)&&  i  <  =  max)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtil.isNaN(currX)&&  i  <  =  max)  {  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtil.isNaN(currX)&&  i  <  =  max)  {	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
142	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
143	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
144	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
145	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
146	[BUG]  [BUGGY]  if(j  >=  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >=  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
147	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
148	[BUG]  [BUGGY]  if(j  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
149	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >  max)  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >  max)  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >  max)  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
150	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >  optima[i])  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >  optima[i])  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >  optima[i])  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
151	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >  currY)  {  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >  currY)  {  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >  currY)  {  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
152	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
153	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  +  1  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
154	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  >>  class,  interface,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  >>  class,  interface,  or  enum  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  >>  class,  interface,  or  enum	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
155	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j]  >>  class,  interface,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j]  >>  class,  interface,  or  enum  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j]  >>  class,  interface,  or  enum	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j]    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
156	[BUG]  [BUGGY]  optimisea[i  +  1]  =  optimizer;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optimisea[i  +  1]  =  optimizer;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optimisea[i  +  1]  =  optimizer;	  optimisea[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
157	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
158	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  m  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  m  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  m	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
159	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
160	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
161	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >  currY);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
162	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  currX);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
163	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  currY,  currX  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  currY,  currX  >  max);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >  currY,  currX  >  max);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
164	[BUG]  [BUGGY]  NeighborUtilities.checkState(mIX  >=  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkState(mIX  >=  currX);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkState(mIX  >=  currX);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
165	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
166	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	mIX  =  optima[i];  mIY  =  optima[i  +  1];	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
167	[BUG]  [BUGGY]  if(mIX!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(mIX!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(mIX!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  mIX    =    optima[i];    mIY    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
168	[BUG]  [BUGGY]  if(i  +  1  <  =  mIX)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  mIX)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  mIX)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
169	[BUG]  [BUGGY]  if(i  +  1  <  min)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  min)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  min)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
170	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
171	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
172	[BUG]  [BUGGY]  if(j  >=  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >=  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
173	[BUG]  [BUGGY]  if(j  >  0)  {  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i+1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i+1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
174	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
175	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j]	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
176	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
177	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
178	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
179	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValu  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValu  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  currY  =  optimaValues[j];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValu	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
180	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
181	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
182	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  <  min)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
183	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
184	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
185	[BUG]  [BUGGY]  if(i  +  1  <  =  currX)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  currX)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  currX)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
186	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  >=  class,  interface,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  >=  class,  interface,  or  enum  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--!=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  >=  class,  interface,  or  enum	  if(i--!=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
187	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  +  1  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
188	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    +    1    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
189	[BUG]  [BUGGY]  optima[i  +  1]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  optima[i  +  1]  =  currX;  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	optima[i  +  1]  =  currX;	  optima[i    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
190	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  ==  optima[i  +  1]);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
191	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY!=  optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY!=  optima[i  +  1]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY!=  optima[i  +  1]);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
192	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  <  =  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  <  =  mIX);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  optima[i]);  NeighborUtilities.checkArgument(mIY  <  =  mIX);	  if(j    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
193	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
194	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimistica[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimistica[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optimistica[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
195	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  optima[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
196	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  curr[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
197	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
198	[BUG]  [BUGGY]  if(i  +  1  >=  max)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  >=  max)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  >=  max)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  currY  =  optimaValues[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
199	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
200	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
201	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
202	[BUG]  [BUGGY]  if(i  +  1  <  =  currX)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(i  +  1  <  =  currX)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(i  +  1  <  =  currX)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
203	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  optimisera[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  optimisera[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  optimisera[i])  {  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
204	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j]	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
205	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(j    >    0)    {    if(mIX    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
206	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  currX);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  ==  currX);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
207	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2  &&  mIY  <  =  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2  &&  mIY  <  =  optima[i]);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2  &&  mIY  <  =  optima[i]);	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
208	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);  mIY  =  optima[i];	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
209	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  bound2);  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  bound2);  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >  bound2);  mIY  =  optima[i];	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
210	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  bound2);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  bound2);	  if(j    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
211	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY  ==  currY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY  ==  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY  ==  currY);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
212	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY  <  =  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY  <  =  mIX);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY  <  =  mIX);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
213	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY!=  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY!=  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(mIY!=  currY);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
214	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(currY  ==  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(currY  ==  currY);  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	NeighborUtilities.checkArgument(mIX  >=  currX);  NeighborUtilities.checkArgument(currY  ==  currY);	  if(i    >    0)    {    if(mIX    >=    optima[i])    {    mIY    =    optima[i];    }    else    {    mIX    =    optima[i    +    1];    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
215	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
216	[BUG]  [BUGGY]  if(j  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(bound1  >=  bound2)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
217	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  m  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  m  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  m	  if(i    >    0)    {    if(mIX    >=    bound2)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
218	[BUG]  [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i--  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i--  >=  0)  {  mX  =  optima[i];  mIY  =  optima[i  +  1];  }  else  {  mIX  =  optima[i  +  1];  mIY  =  optima[j];  }	  if(i--    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    else    {    mIX    =    optima[i    +    1];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
219	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
220	[BUG]  [BUGGY]  if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;      [BUGGY]  if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }  [BUGGY]      optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  }  if  (Double.isNaN(optima[0]))  {  throw  new  OptimizationException(  LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,  starts);  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	if(j  >  0)  {  if(j  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  else  {  mIX  =  optima[i];  mIY  =  optima[j];  }	  if(j    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    else    {    mIX    =    optima[i];    mIY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
