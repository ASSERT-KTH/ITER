bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mIX  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  currY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  currY;	  mIX    =    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
2	[BUG]  [BUGGY]  mIY  =  mIX  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  bound1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  bound1;	  mIY    =    max    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
3	[BUG]  [BUGGY]  mIY  =  prevY  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  bound1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  bound1;	  mIY    =    max    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
4	[BUG]  [BUGGY]  mIY  =  max  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  min;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  min;	  mIY    =    max    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
5	[BUG]  [BUGGY]  i  =  prevY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  i  =  prevY  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	i  =  prevY  +  1;	  i    =    j    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
6	[BUG]  [BUGGY]  Integer  j  =  prevY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  prevY  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  prevY  +  1;	  Integer    j    =    currY    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
7	[BUG]  [BUGGY]  Integer  j  =  currX  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  currX  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  currX  +  1;	  Integer    j    =    currY    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
8	[BUG]  [BUGGY]  Integer  j  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  currY  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  currY  -  1;	  Integer    j    =    currY    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
9	[BUG]  [BUGGY]  mIY  =  prevY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY[i  +  1];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY[i  +  1];	  mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
10	[BUG]  [BUGGY]  int  j  =  bound1  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  int  j  =  bound1  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	int  j  =  bound1  -  1;	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
11	[BUG]  [BUGGY]  ConvergenceException  ce  =  conv.createConvergence(max,  currX,  currY,  mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  conv.createConvergence(max,  currX,  currY,  mIX,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  conv.createConvergence(max,  currX,  currY,  mIX,  prevY);	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
12	[BUG]  [BUGGY]  ConvergenceException  ce  =  conv.createConvergence(max,  currX,  mIY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  conv.createConvergence(max,  currX,  mIY,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  conv.createConvergence(max,  currX,  mIY,  prevY);	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
13	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX  -  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  currX  -  currY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  currX  -  currY;	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
14	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  currX  +  currY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  currX  +  currY;	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
15	[BUG]  [BUGGY]  mIY  =  Preconditions.emptyYear(j  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.emptyYear(j  +  1);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.emptyYear(j  +  1);	  mIY    =    Preconditions.emptyYear(i    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
16	[BUG]  [BUGGY]  mIY  =  Preconditions.emptyYear(prevY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.emptyYear(prevY  +  1);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.emptyYear(prevY  +  1);	  mIY    =    Preconditions.emptyYear(i    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
17	[BUG]  [BUGGY]  mIY  =  Preconditions.emptyYear(i  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.emptyYear(i  +  2);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.emptyYear(i  +  2);	  mIY    =    Preconditions.emptyYear(i    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
18	[BUG]  [BUGGY]  while(i  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(i  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(i  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
19	[BUG]  [BUGGY]  while(i  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(i  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(i  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
20	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  bound2;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  bound2;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  bound2;  j++)  {  mIX  =  bound1;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
21	[BUG]  [BUGGY]  if(i  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >=  min)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    >=    max)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
22	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(mIX  >=  min)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    >=    max)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
23	[BUG]  [BUGGY]  mIY  =  max[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max[i];	  mIY    =    prevY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkState(i  >  0);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkState(i  >  0);	  if(j    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
25	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX  +  currY  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  currX  +  currY  +  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  currX  +  currY  +  max;	  if(j    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
26	[BUG]  [BUGGY]  j  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  currX  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  currX  -  1;	  j    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
27	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(min  >  max)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    >    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
28	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max;  mIY  =  min;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max;  mIY  =  min;	  if(mIX    >    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
29	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  min;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  max)  {  mIX  =  min;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  max)  {  mIX  =  min;  }  else  {  mIX  =  max;  }	  if(i    >=    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
30	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    bound1;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
31	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "',  max: "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "',  max: "  +  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "',  max: "  +  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    bound1;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
32	[BUG]  [BUGGY]  mIY  =  Preconditions.checkNotNull(currY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkNotNull(currY);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkNotNull(currY);	  mIY    =    Preconditions.checkNotNull(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
33	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIX!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIX!=  null);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIX!=  null);	  mIY    =    Preconditions.checkNotNull(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
34	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIX  ==  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIX  ==  null);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIX  ==  null);	  mIY    =    Preconditions.checkNotNull(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
35	[BUG]  [BUGGY]  mIY  =  Preconditions.checkNotNull(currX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkNotNull(currX);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkNotNull(currX);	  mIY    =    Preconditions.checkNotNull(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
36	[BUG]  [BUGGY]  degree  =  Math.max(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  degree  =  Math.max(mIX,  currY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	degree  =  Math.max(mIX,  currY);	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
37	[BUG]  [BUGGY]  degree  =  Math.max(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  degree  =  Math.max(mIX,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	degree  =  Math.max(mIX,  prevY);	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
38	[BUG]  [BUGGY]  degree  =  Math.max(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  degree  =  Math.max(mIX,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	degree  =  Math.max(mIX,  mIY);	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
39	[BUG]  [BUGGY]  mIY  =  mIY  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIY  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIY  +  optimaValues[i];	  mIY    =    mIX    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
40	[BUG]  [BUGGY]  mIY  =  mIY  +  currY[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIY  +  currY[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIY  +  currY[i];	  mIY    =    mIX    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
41	[BUG]  [BUGGY]  mIY  =  mIY  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIY  +  prevY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIY  +  prevY;	  mIY    =    mIX    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
42	[BUG]  [BUGGY]  mIX  =  min  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  min  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  min  +  1;	  mIX    =    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
43	[BUG]  [BUGGY]  mIY  =  currY  +  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currY  +  mIX;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currY  +  mIX;	  mIY    =    currY    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
44	[BUG]  [BUGGY]  mIY  =  currY  +  i;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currY  +  i;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currY  +  i;	  mIY    =    currY    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
45	[BUG]  [BUGGY]  mIY  =  mIX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  prevY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  prevY;	  mIY    =    currY    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
46	[BUG]  [BUGGY]  mIY  =  prevY  +  curra[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  curra[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  curra[i];	  mIY    =    curra[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
47	[BUG]  [BUGGY]  mIY  =  curra[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  curra[i  +  1];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  curra[i  +  1];	  mIY    =    curra[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
48	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX  -  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  currX  -  currX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  currX  -  currX;	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
49	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(min,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(min,  max);	  Integer    j    =    optimizer.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
50	[BUG]  [BUGGY]  Integer  j  =  optimiser.getIntValue(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiser.getIntValue(min,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiser.getIntValue(min,  max);	  Integer    j    =    optimizer.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
51	[BUG]  [BUGGY]  Integer  j  =  optima.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optima.getIntValue(j,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optima.getIntValue(j,  max);	  Integer    j    =    optimizer.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
52	[BUG]  [BUGGY]  Integer  j  =  optimiza.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiza.getIntValue(j,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiza.getIntValue(j,  max);	  Integer    j    =    optimizer.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
53	[BUG]  [BUGGY]  vices.add(mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX,  mY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX,  mY);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
54	[BUG]  [BUGGY]  vices.add(mIX,  mIY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX,  mIY,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX,  mIY,  max);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
55	[BUG]  [BUGGY]  vices.add(mIX,  mIY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX,  mIY  +  1);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX,  mIY  +  1);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
56	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  for  ' "  +  currY  + "'  is  not  supported. ");  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  for  ' "  +  currY  + "'  is  not  supported. ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  for  ' "  +  currY  + "'  is  not  supported. ");	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    prevY;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
57	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  for  ' "  +  currY  + "':  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  for  ' "  +  currY  + "':  bound1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  for  ' "  +  currY  + "':  bound1;	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    prevY;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
58	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  with  max  ' "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  with  max  ' "  +  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  and  ' "  +  currY  + "'  with  max  ' "  +  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    prevY;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
59	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
60	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currY  + "'  at  ' "  +  currX  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currY  + "'  at  ' "  +  currX  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currY  + "'  at  ' "  +  currX  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
61	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "'. ");  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "'. ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "'. ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
62	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  mIX  + "'  at  ' "  +  j  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  mIX  + "'  at  ' "  +  j  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  mIX  + "'  at  ' "  +  j  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    j    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
63	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  j  + "'  at  ' "  +  j  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  j  + "'  at  ' "  +  j  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  j  + "'  at  ' "  +  j  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    j    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
64	[BUG]  [BUGGY]  vices.add(mIX,  currY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX,  currY  +  1);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX,  currY  +  1);	  vices.add(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
65	[BUG]  [BUGGY]  vices.add(mIX,  currY  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX,  currY  -  1);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX,  currY  -  1);	  vices.add(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
66	[BUG]  [BUGGY]  mIX  =  max  +  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max  +  mIX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max  +  mIX;	  mIX    =    mIX    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
67	[BUG]  [BUGGY]  mIX  =  mIX  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX  +  bound1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX  +  bound1;	  mIX    =    mIX    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
68	[BUG]  [BUGGY]  mIY  =  min  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  min  +  1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  min  +  1;	  mIY    =    max    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
69	[BUG]  [BUGGY]  j  =  min  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  min  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  min  -  1;	  j    =    max    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
70	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    <    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
71	[BUG]  [BUGGY]  mIX  =  prevY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  prevY  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  prevY  +  1;	  mIX    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
72	[BUG]  [BUGGY]  mIX  =  max  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max  +  1;	  mIX    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
73	[BUG]  [BUGGY]  mIX  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  currY  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  currY  +  1;	  mIX    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
74	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX  +  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  currX  +  currY  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  currX  +  currY  +  1;	  if(i    >    0)    {    for(int    j    =    0;    j    <    currY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
75	[BUG]  [BUGGY]  mIX  =  mIX  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX  +  1;	  mIX    =    mIX2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
76	[BUG]  [BUGGY]  mIY  =  j  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  j  -  1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  j  -  1;	  mIY    =    j    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
77	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  <  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  <  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(mIX    <    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
78	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  <  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  0)  {  if(mIX  <  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  0)  {  if(mIX  <  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(mIX    <    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
79	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX;  mIY  =  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
80	[BUG]  [BUGGY]  mIX  =  prevY;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  prevY;  mIY  =  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  prevY;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
81	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(min,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(min,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(min,  prevY);	  Integer    j    =    optimizer.getIntValue(j,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
82	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(max,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(max,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(max,  prevY);	  Integer    j    =    optimizer.getIntValue(j,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
83	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(min,  min,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(min,  min,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(min,  min,  prevY);	  Integer    j    =    optimizer.getIntValue(j,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
84	[BUG]  [BUGGY]  mIY  =  mIX  +  j  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  j  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  j  +  optimaValues[i];	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
85	[BUG]  [BUGGY]  mIY  =  mIX  +  prevY  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  prevY  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  prevY  +  optimaValues[i];	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
86	[BUG]  [BUGGY]  mIY  =  max  +  j  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  j  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  j  +  optimaValues[i];	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
87	[BUG]  [BUGGY]  mIY  =  currY  +  j  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currY  +  j  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currY  +  j  +  optimaValues[i];	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
88	[BUG]  [BUGGY]  mIY  =  currX  +  prevY[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currX  +  prevY[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currX  +  prevY[i];	  mIY    =    prevY    +    currX[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
89	[BUG]  [BUGGY]  mIY  =  mIX  +  currX[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  currX[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  currX[i];	  mIY    =    prevY    +    currX[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
90	[BUG]  [BUGGY]  mIY  =  currY  +  prevY[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currY  +  prevY[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currY  +  prevY[i];	  mIY    =    prevY    +    currX[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
91	[BUG]  [BUGGY]  mIY  =  max  +  currX[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  currX[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  currX[i];	  mIY    =    prevY    +    currX[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
92	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  0)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  0)  {  mIX  =  max;  mIY  =  max;  }	  if(i    >    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
93	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  min;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  max)  {  mIX  =  min;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  max)  {  mIX  =  min;  mIY  =  max;  }	  if(i    >    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
94	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  min;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  0)  {  mIX  =  min;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  0)  {  mIX  =  min;  }  else  {  mIX  =  max;  }	  if(i    >    0)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
95	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  min;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  0)  {  mIX  =  min;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  0)  {  mIX  =  min;  }	  if(i    >    0)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
96	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  max;  }  else  {  mIX  =  min;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  0)  {  mIX  =  max;  }  else  {  mIX  =  min;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  0)  {  mIX  =  max;  }  else  {  mIX  =  min;  }	  if(i    >    0)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
97	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getInt(mIX,  mIY);	  Integer    j    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
98	[BUG]  [BUGGY]  Integer  j  =  optimiser.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiser.getInt(mIX,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiser.getInt(mIX,  mIY);	  Integer    j    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
99	[BUG]  [BUGGY]  Integer  j  =  optima.getInt(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optima.getInt(mIX,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optima.getInt(mIX,  prevY);	  Integer    j    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
100	[BUG]  [BUGGY]  Integer  j  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  max;	  Integer    j    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
101	[BUG]  [BUGGY]  Integer  j  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  bound2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  bound2;	  Integer    j    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
102	[BUG]  [BUGGY]  Integer  j  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  currY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  currY;	  Integer    j    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
103	[BUG]  [BUGGY]  Integer  j  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  prevY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  prevY;	  Integer    j    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
104	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  max  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max;  mIY  =  max  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max;  mIY  =  max  +  1;	  mIX    =    max;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
105	[BUG]  [BUGGY]  mIY  =  i  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  i  +  1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  i  +  1;	  mIY    =    i;    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
106	[BUG]  [BUGGY]  mIY  =  j;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  j;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  j;	  mIY    =    i;    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
107	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(min,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getInt(min,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getInt(min,  prevY);	  Integer    j    =    optimizer.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
108	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getInt(min,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getInt(min,  max);	  Integer    j    =    optimizer.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
109	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(min,  min,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getInt(min,  min,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getInt(min,  min,  prevY);	  Integer    j    =    optimizer.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
110	[BUG]  [BUGGY]  mIY  =  currX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currX  +  prevY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currX  +  prevY;	  mIY    =    prevY    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
111	[BUG]  [BUGGY]  mIY  =  mIX  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  currY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  currY;	  mIY    =    prevY    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
112	[BUG]  [BUGGY]  mIY  =  max  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  currY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  currY;	  mIY    =    prevY    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
113	[BUG]  [BUGGY]  Integer  i  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  i  =  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  i  =  max;	  Integer    i    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
114	[BUG]  [BUGGY]  Integer  i  =  j;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  i  =  j;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  i  =  j;	  Integer    i    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
115	[BUG]  [BUGGY]  Integer  i  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  i  =  prevY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  i  =  prevY;	  Integer    i    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
116	[BUG]  [BUGGY]  Integer  i  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  i  =  bound2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  i  =  bound2;	  Integer    i    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
117	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(i);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(i);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(i);	  Integer    j    =    optimizer.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
118	[BUG]  [BUGGY]  Integer  j  =  optima.getIntValue(j);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optima.getIntValue(j);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optima.getIntValue(j);	  Integer    j    =    optimizer.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
119	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(min);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(min);	  Integer    j    =    optimizer.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
120	[BUG]  [BUGGY]  Integer  j  =  optimiser.getIntValue(i);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiser.getIntValue(i);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiser.getIntValue(i);	  Integer    j    =    optimizer.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
121	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    j    =    0;    j    <    bound2;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
122	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    j    =    0;    j    <    bound2;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
123	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  bound1;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  bound1;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  bound1;  j++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    j    =    0;    j    <    bound2;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
124	[BUG]  [BUGGY]  mIY  =  min  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  min  +  bound2;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  min  +  bound2;	  mIY    =    max    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
125	[BUG]  [BUGGY]  mIY  =  bound1  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  bound1  +  max;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  bound1  +  max;	  mIY    =    max    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
126	[BUG]  [BUGGY]  mIY  =  prevY  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  bound2;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  bound2;	  mIY    =    max    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
127	[BUG]  [BUGGY]  ConvergenceException  ce  =  getConstants();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  getConstants();  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  getConstants();	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
128	[BUG]  [BUGGY]  mIX  =  max  +  min  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max  +  min  +  bound2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max  +  min  +  bound2;	  mIX    =    max    +    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
129	[BUG]  [BUGGY]  mIX  =  max  +  min  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max  +  min  +  bound1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max  +  min  +  bound1;	  mIX    =    max    +    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
130	[BUG]  [BUGGY]  mIX  =  bound2  +  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  bound2  +  mIY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  bound2  +  mIY;	  mIX    =    bound1    +    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
131	[BUG]  [BUGGY]  mIX  =  prevY  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  prevY  +  bound1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  prevY  +  bound1;	  mIX    =    bound1    +    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
132	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(i    >=    max)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
133	[BUG]  [BUGGY]  if(i  ==  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  ==  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  ==  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(i    >=    max)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
134	[BUG]  [BUGGY]  mIX  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIY;	  mIX    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
135	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  >=  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  >=  prevY);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIY  >=  prevY);	  mIY    =    Preconditions.checkArgument(mIY    >    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
136	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIY!=  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIY!=  prevY);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIY!=  prevY);	  mIY    =    Preconditions.checkArgument(mIY    >    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
137	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIX  >  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIX  >  prevY);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIX  >  prevY);	  mIY    =    Preconditions.checkArgument(mIY    >    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
138	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  >  max);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIY  >  max);	  mIY    =    Preconditions.checkArgument(mIY    >    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
139	[BUG]  [BUGGY]  Integer  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  mIY  =  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  mIY  =  max;	  Integer    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
140	[BUG]  [BUGGY]  Integer  mIY  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  mIY  =  currX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  mIY  =  currX;	  Integer    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
141	[BUG]  [BUGGY]  Integer  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  mIY  =  bound2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  mIY  =  bound2;	  Integer    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
142	[BUG]  [BUGGY]  Integer  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  mIY  =  currY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  mIY  =  currY;	  Integer    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
143	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  currY  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'    and    '   "    +    currY    +   "'    or    '   "    +    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
144	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currY  + "'  at  ' "  +  currX  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currY  + "'  at  ' "  +  currX  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currY  + "'  at  ' "  +  currX  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'    and    '   "    +    currY    +   "'    or    '   "    +    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
145	[BUG]  [BUGGY]  mIY  =  max  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  currX;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  currX;	  mIY    =    prevY    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
146	[BUG]  [BUGGY]  mIY  =  prevY  +  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  currY  +  1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  currY  +  1;	  mIY    =    prevY    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
147	[BUG]  [BUGGY]  mIX  =  bound1  +  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  bound1  +  mIX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  bound1  +  mIX;	  mIX    =    mIX    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
148	[BUG]  [BUGGY]  mIX  =  mIX  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX  +  currY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX  +  currY;	  mIX    =    mIX    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
149	[BUG]  [BUGGY]  Integer  j  =  optimiser.getIntValue(min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiser.getIntValue(min);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiser.getIntValue(min);	  Integer    j    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
150	[BUG]  [BUGGY]  vices.add(mIX  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX  -  1);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX  -  1);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
151	[BUG]  [BUGGY]  vices.add(mIX  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX  -  min);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX  -  min);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
152	[BUG]  [BUGGY]  mIY  =  prevY  +  curr[i];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  curr[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  curr[i];	  mIY    =    curr[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
153	[BUG]  [BUGGY]  Integer  j  =  goalType.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  goalType.getIntValue(j,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  goalType.getIntValue(j,  max);	  Integer    j    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
154	[BUG]  [BUGGY]  if(min  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(min  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(min  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(mIX    >=    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
155	[BUG]  [BUGGY]  j  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  currY  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  currY  +  1;	  j    =    prevY    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
156	[BUG]  [BUGGY]  ConvergenceException  ce  =  conv.createConvergence(max,  currX,  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  conv.createConvergence(max,  currX,  currY,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  conv.createConvergence(max,  currX,  currY,  prevY);	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
157	[BUG]  [BUGGY]  mIY  =  prevY  +  optimiseraValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  optimiseraValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  optimiseraValues[i];	  mIY    =    currY    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
158	[BUG]  [BUGGY]  mIY  =  currX  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currX  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currX  +  optimaValues[i];	  mIY    =    currY    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
159	[BUG]  [BUGGY]  j  =  min  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  min  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  min  +  1;	  j    =    max    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
160	[BUG]  [BUGGY]  if(i  ==  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  ==  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  ==  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(mIX    ==    max)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
161	[BUG]  [BUGGY]  while(i  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(i  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(i  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound2;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    limit;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
162	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound2;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    limit;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
163	[BUG]  [BUGGY]  mIX  =  min  +  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  min  +  mIX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  min  +  mIX;	  mIX    =    mIX    +    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
164	[BUG]  [BUGGY]  mIX  =  mIX  +  min  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX  +  min  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX  +  min  +  1;	  mIX    =    mIX    +    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
165	[BUG]  [BUGGY]  mIX  =  min  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  min  +  bound2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  min  +  bound2;	  mIX    =    max    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
166	[BUG]  [BUGGY]  int  j  =  bound2  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  int  j  =  bound2  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	int  j  =  bound2  -  1;	  if(j    >    0)    {    for(int    i    =    bound2    -    1;    i    >=    0;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
167	[BUG]  [BUGGY]  Integer  j  =  bound2  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  bound2  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  bound2  -  1;	  if(j    >    0)    {    for(int    i    =    bound2    -    1;    i    >=    0;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
168	[BUG]  [BUGGY]  Integer  j  =  bound1  <  <  max;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  bound1  <  <  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  bound1  <  <  max;	  if(j    >    0)    {    for(int    i    =    bound2    -    1;    i    >=    0;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
169	[BUG]  [BUGGY]  i  =  min  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  i  =  min  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	i  =  min  -  1;	  i    =    max    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
170	[BUG]  [BUGGY]  mIX  =  max  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max  +  currX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max  +  currX;	  mIX    =    currX    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
171	[BUG]  [BUGGY]  mIX  =  currX  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  currX  +  min;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  currX  +  min;	  mIX    =    currX    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
172	[BUG]  [BUGGY]  mIX  =  currX  +  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  currX  +  mIY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  currX  +  mIY;	  mIX    =    currX    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
173	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.   "  +  i);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.   "  +  i);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.   "  +  i);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    a    goal    type.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
174	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  IX: ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  IX: ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  IX: ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    a    goal    type.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
175	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }	  if(mIX    >    max)    {    mIX    =    min;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
176	[BUG]  [BUGGY]  mIY  =  optimisera[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  optimisera[i  +  1];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  optimisera[i  +  1];	  mIY    =    currY[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
177	[BUG]  [BUGGY]  mIY  =  bound1  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  bound1  +  1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  bound1  +  1;	  mIY    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
178	[BUG]  [BUGGY]  mIX  =  min  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  min  +  bound1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  min  +  bound1;	  mIX    =    max    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
179	[BUG]  [BUGGY]  mIY  =  optima[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  optima[j  +  1];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  optima[j  +  1];	  mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
180	[BUG]  [BUGGY]  mIY  =  optima[i  +  1]  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  optima[i  +  1]  =  currY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  optima[i  +  1]  =  currY;	  mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
181	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + ",  ' "  +  currY  + "'  or  ' "  +  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + ",  ' "  +  currY  + "'  or  ' "  +  currY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + ",  ' "  +  currY  + "'  or  ' "  +  currY);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'    and    '   "    +    currY    +   "'    or    '   "    +    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
182	[BUG]  [BUGGY]  if(min  >=  mIX)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(min  >=  mIX)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(min  >=  mIX)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(mIX    >=    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
183	[BUG]  [BUGGY]  mIY  =  prevY  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  max;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  max;	  mIY    =    prevY    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
184	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(i,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(i,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(i,  prevY);	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
185	[BUG]  [BUGGY]  int  j  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  int  j  =  prevY  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	int  j  =  prevY  -  1;	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
186	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(i,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(i,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(i,  max);	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
187	[BUG]  [BUGGY]  Integer  j  =  currY  *  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  currY  *  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  currY  *  max;	  if(j    >    0)    {    for(int    j    =    0;    j    <    bound2;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
188	[BUG]  [BUGGY]  mIY  =  prevY  +  optimizaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  optimizaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  optimizaValues[i];	  mIY    =    currY    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
189	[BUG]  [BUGGY]  mIX  =  i;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  i;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  i;	  mIX    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
190	[BUG]  [BUGGY]  mIY  =  mIY  +  bound2[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIY  +  bound2[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIY  +  bound2[i];	  mIY    =    mIX    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
191	[BUG]  [BUGGY]  Integer  j  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  currX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  currX;	  Integer    j    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
192	[BUG]  [BUGGY]  mIY  =  bound2[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  bound2[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  bound2[i];	  mIY    =    prevY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
193	[BUG]  [BUGGY]  mIY  =  prevY  +  currY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  currY[i  +  1];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  currY[i  +  1];	  mIY    =    prevY    +    currX[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
194	[BUG]  [BUGGY]  mIY  =  Preconditions.emptyYear(i  +  1,  j);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.emptyYear(i  +  1,  j);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.emptyYear(i  +  1,  j);	  mIY    =    Preconditions.emptyYear(i    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
195	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  currX  -  bound1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  currX  -  bound1;	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
196	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound1;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    limit;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
197	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  prevY  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  prevY  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  at  ' "  +  prevY  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
198	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + ",' ");  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + ",' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + ",' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
199	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + "',  max= ");  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + "',  max= ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  at  ' "  +  currX  + "',  max= ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
200	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  prevY;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  0)  {  mIX  =  prevY;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  0)  {  mIX  =  prevY;  }  else  {  mIX  =  max;  }	  if(i    >    0)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
201	[BUG]  [BUGGY]  mIX  =  prevY  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  prevY  +  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  prevY  +  max;	  mIX    =    min    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
202	[BUG]  [BUGGY]  mIY  =  prevY  +  max  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  max  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  max  +  optimaValues[i];	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
203	[BUG]  [BUGGY]  mIY  =  prevY  +  j  +  currY  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  j  +  currY  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  j  +  currY  +  optimaValues[i];	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
204	[BUG]  [BUGGY]  mIY  =  prevY  +  j  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  j  +  currY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  j  +  currY;	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
205	[BUG]  [BUGGY]  i  =  j  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  i  =  j  +  2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	i  =  j  +  2;	  i    =    j    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
206	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
207	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0);  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkState(i  >  0);  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkState(i  >  0);  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound1;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
208	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0);  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkState(i  >  0);  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkState(i  >  0);  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
210	[BUG]  [BUGGY]  j  =  j  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  j  +  2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  j  +  2;	  j    =    i    +    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
211	[BUG]  [BUGGY]  j  =  max  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  max  +  2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  max  +  2;	  j    =    i    +    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
212	[BUG]  [BUGGY]  Integer  j  =  optimiser.getIntValue(i,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiser.getIntValue(i,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiser.getIntValue(i,  prevY);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
213	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  min: ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  min: ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  min: ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    a    goal    type.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
214	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  j  + "'  at  ' "  +  mIX  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  j  + "'  at  ' "  +  mIX  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  j  + "'  at  ' "  +  mIX  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    j    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
215	[BUG]  [BUGGY]  mIY  =  mIY  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIY  +  2;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIY  +  2;	  mIY    =    mIX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
216	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(mIX);	  Integer    j    =    optimizer.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
217	[BUG]  [BUGGY]  mIX  =  prevY  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  prevY  +  min;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  prevY  +  min;	  mIX    =    max    +    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
218	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(mIX,  max);	  Integer    j    =    optimizer.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
219	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  goal  type: "  +  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  goal  type: "  +  goalType);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  goal  type: "  +  goalType);	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
220	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type ");  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type ");	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
221	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX,  prevY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(mIX,  prevY);	  Integer    j    =    optimizer.getIntValue(j,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
222	[BUG]  [BUGGY]  vices.add(mIX  -  1,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX  -  1,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX  -  1,  mIY);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
223	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  max)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  max)  {  mIX  =  max;  mIY  =  max;  }	  if(i    >    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
224	[BUG]  [BUGGY]  if(i  >  lastNaN)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(i  >  lastNaN)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(i  >  lastNaN)  {  mIX  =  max;  mIY  =  max;  }	  if(i    >    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
225	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  bound1;  mIY  =  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  bound1;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
226	[BUG]  [BUGGY]  mIY  =  currY  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currY  +  bound2;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currY  +  bound2;	  mIY    =    currY    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
227	[BUG]  [BUGGY]  mIY  =  currY  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currY  +  bound1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currY  +  bound1;	  mIY    =    currY    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
228	[BUG]  [BUGGY]  j  =  currY  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  currY  /  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  currY  /  1;	  j    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
229	[BUG]  [BUGGY]  Integer  i  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  i  =  0;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  i  =  0;	  Integer    i    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkArgument(j  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkArgument(j  >  0);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkArgument(j  >  0);	  if(j    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkState(i  +  1  >=  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkState(i  +  1  >=  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkState(i  +  1  >=  max);	  if(j    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
232	[BUG]  [BUGGY]  mIY  =  bound2  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  bound2  +  max;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  bound2  +  max;	  mIY    =    max    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
233	[BUG]  [BUGGY]  ConvergenceException  ce  =  optimizer.getOptimizationException();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  optimizer.getOptimizationException();  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  optimizer.getOptimizationException();	  if(j    >    0)    {    for(int    i    =    bound2    -    1;    i    >=    0;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
234	[BUG]  [BUGGY]  mIX  =  bound2  +  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  bound2  +  mIX;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  bound2  +  mIX;	  mIX    =    mIX    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
235	[BUG]  [BUGGY]  mIY  =  Preconditions.checkNotNull(mIY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkNotNull(mIY);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkNotNull(mIY);	  mIY    =    Preconditions.checkNotNull(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
236	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIY!=  null);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIY!=  null);	  mIY    =    Preconditions.checkNotNull(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
237	[BUG]  [BUGGY]  vices.add(mIX  -  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX  -  bound1);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX  -  bound1);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
238	[BUG]  [BUGGY]  vices.add(mIX  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX  +  1);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX  +  1);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
239	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getInt(mIX,  max);	  Integer    j    =    optimizer.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
240	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  currY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getInt(mIX,  currY);	  Integer    j    =    optimizer.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
241	[BUG]  [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getInt(mIX,  i);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getInt(mIX,  i);	  Integer    j    =    optimizer.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
242	[BUG]  [BUGGY]  Integer  j  =  optimiser.getIntValue(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiser.getIntValue(mIX);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiser.getIntValue(mIX);	  Integer    j    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
243	[BUG]  [BUGGY]  Integer  j  =  optima.getIntValue(i);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optima.getIntValue(i);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optima.getIntValue(i);	  Integer    j    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
244	[BUG]  [BUGGY]  mIY  =  max  +  bound2[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  bound2[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  bound2[i];	  mIY    =    max    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
245	[BUG]  [BUGGY]  vices.add(mIX,  currY  -  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX,  currY  -  bound1);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX,  currY  -  bound1);	  vices.add(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
246	[BUG]  [BUGGY]  vices.add(mIX,  currY  -  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  vices.add(mIX,  currY  -  bound2);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	vices.add(mIX,  currY  -  bound2);	  vices.add(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
247	[BUG]  [BUGGY]  Integer  mIY  =  bound2[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  mIY  =  bound2[i  +  1];  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  mIY  =  bound2[i  +  1];	  if(i    >    0)    {    for(int    j    =    0;    j    <    currY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(j  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkState(j  >  0);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkState(j  >  0);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    prevY;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
249	[BUG]  [BUGGY]  Integer  j  =  optimiser.getInt(mIX,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimiser.getInt(mIX,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimiser.getInt(mIX,  max);	  Integer    j    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
250	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  <  =  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  <  =  prevY);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIY  <  =  prevY);	  mIY    =    Preconditions.checkArgument(mIY    >    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
251	[BUG]  [BUGGY]  mIX  =  max  +  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max  +  mIY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max  +  mIY;	  mIX    =    bound1    +    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
252	[BUG]  [BUGGY]  mIX  =  prevY  +  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  prevY  +  mIY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  prevY  +  mIY;	  mIX    =    bound1    +    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
253	[BUG]  [BUGGY]  mIX  =  bound1  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  bound1  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  bound1  +  1;	  mIX    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
254	[BUG]  [BUGGY]  mIX  =  currX  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  currX  +  bound2;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  currX  +  bound2;	  mIX    =    currX    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
255	[BUG]  [BUGGY]  mIX  =  currX  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  currX  +  bound1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  currX  +  bound1;	  mIX    =    currX    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
256	[BUG]  [BUGGY]  mIY  =  prevY  +  currY  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  currY  +  bound1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  currY  +  bound1;	  mIY    =    prevY    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
257	[BUG]  [BUGGY]  mIY  =  prevY  +  currY  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  currY  +  bound2;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  currY  +  bound2;	  mIY    =    prevY    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
258	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
259	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
260	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    <    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
261	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currY  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    <    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
262	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  i  -  1;  i  <  bound1;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  i  -  1;  i  <  bound1;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  i  -  1;  i  <  bound1;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    <    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
263	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  0;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  0;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  0;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
264	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  0;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  0;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  0;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
265	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  prevY;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  prevY;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  prevY;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
266	[BUG]  [BUGGY]  Integer  j  =  generator.getIntValue(j);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  generator.getIntValue(j);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  generator.getIntValue(j);	  Integer    j    =    optimizer.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
267	[BUG]  [BUGGY]  Integer  j  =  f.getIntValue(j);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  f.getIntValue(j);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  f.getIntValue(j);	  Integer    j    =    optimizer.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
268	[BUG]  [BUGGY]  Integer  i  =  j  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  i  =  j  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  i  =  j  -  1;	  Integer    i    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
269	[BUG]  [BUGGY]  Integer  i  =  j  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  i  =  j  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  i  =  j  +  1;	  Integer    i    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
270	[BUG]  [BUGGY]  Integer  j  =  generator.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  generator.getIntValue(j,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  generator.getIntValue(j,  max);	  Integer    j    =    optimizer.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
271	[BUG]  [BUGGY]  mIY  =  mIX[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX[i];	  mIY    =    prevY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
272	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  currY;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  currY;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  currY;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
273	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound1;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
274	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  max;  j++)  {  mIX  =  bound1;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
275	[BUG]  [BUGGY]  mIY  =  max  +  i;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  i;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  i;	  mIY    =    max    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
276	[BUG]  [BUGGY]  mIY  =  currY  +  j;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currY  +  j;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currY  +  j;	  mIY    =    currY    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
277	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  bound2;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  bound2;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  bound2;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
278	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  <  bound2;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  <  bound2;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currY  -  1;  i  <  bound2;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
279	[BUG]  [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(mIX  ==  max)  {  mIX  =  min;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(mIX  ==  max)  {  mIX  =  min;  }  else  {  mIX  =  max;  }	  if(mIX    ==    max)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
280	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  prevY;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  prevY;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  prevY;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
281	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  0;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  0;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  0;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
282	[BUG]  [BUGGY]  Integer  j  =  optima.getIntValue(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optima.getIntValue(min,  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optima.getIntValue(min,  max);	  Integer    j    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
283	[BUG]  [BUGGY]  mIY  =  prevY  +  optimiseaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  optimiseaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  optimiseaValues[i];	  mIY    =    currY    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
284	[BUG]  [BUGGY]  if(j  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  max)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(i    >=    max)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
285	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  if(i  >=  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  if(i  >=  min)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(i    >=    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
286	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >=  0)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >=  0)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(i    >=    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
287	[BUG]  [BUGGY]  mIY  =  mIX  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  max;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  max;	  mIY    =    max    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
288	[BUG]  [BUGGY]  mIY  =  mIX  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  bound2;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  bound2;	  mIY    =    max    +    bound2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
289	[BUG]  [BUGGY]  mIX  =  max  +  min  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  max  +  min  +  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  max  +  min  +  1;	  mIX    =    max    +    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
290	[BUG]  [BUGGY]  mIY  =  prevY  +  j  +  currX  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  j  +  currX  +  optimaValues[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  j  +  currX  +  optimaValues[i];	  mIY    =    prevY    +    j    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
291	[BUG]  [BUGGY]  j  =  j  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  j  =  j  /  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	j  =  j  /  1;	  j    =    j    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
292	[BUG]  [BUGGY]  mIY  =  mIY  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIY  +  currY;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIY  +  currY;	  mIY    =    mIX    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
293	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currX  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
294	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currY  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
295	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  limit2;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  limit2;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  limit2;  j++)  {  mIX  =  bound1;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    bound2;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
296	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  currY;  j++)  {  mIX  =  bound2;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    currY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
297	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  j++)  {  mIX  =  bound2;  }	  if(i    >    0)    {    for(int    j    =    0;    j    <    currY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
298	[BUG]  [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  bound1;  j++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  while(j  >  0)  {  for(int  j  =  0;  j  <  bound1;  j++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	while(j  >  0)  {  for(int  j  =  0;  j  <  bound1;  j++)  {  mIX  =  bound2;  }	  while(i    >    0)    {    for(int    j    =    0;    j    <    bound1;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
299	[BUG]  [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  >  currX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkArgument(mIY  >  currX);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkArgument(mIY  >  currX);	  mIY    =    Preconditions.checkArgument(mIY    >    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
300	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  >=  bound1;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  >=  bound1;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  >=  bound1;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    bound1;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
301	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    bound1;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
302	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  <  bound1;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  <  bound1;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  <  bound1;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    bound1;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
303	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    bound1;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
304	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  bound2;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    bound1;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
305	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  >=  0;  i++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  >=  0;  i++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  >=  0;  i++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    i    =    bound2    -    1;    i    >=    0;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
306	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  mIX  +   "'  at  ' "  +  currY  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  mIX  +   "'  at  ' "  +  currY  + "' ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  mIX  +   "'  at  ' "  +  currY  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
307	[BUG]  [BUGGY]  mIY  =  max  +  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  max  +  mIX;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  max  +  mIX;	  mIY    =    max    +    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
308	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currX  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
309	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currY  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currY  -  1;  i  >=  bound2;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    prevY    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
310	[BUG]  [BUGGY]  mIX  =  mIX  +  min  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX  +  min  +  max;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX  +  min  +  max;	  mIX    =    mIX    +    min;    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
311	[BUG]  [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimizer.getIntValue(mIX,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimizer.getIntValue(mIX,  mIY);	  Integer    j    =    optimizer.getIntValue(j,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
312	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  0;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  0;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  0;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
313	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    <    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
314	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  mIX  =  max;  mIY  =  max;  }	  if(i    >    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
315	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  Please  check  that  the  goal  type  does  not  exist. ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  Please  check  that  the  goal  type  does  not  exist. ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  Please  check  that  the  goal  type  does  not  exist. ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    a    goal    type.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
316	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  Please  check  that  the  goal  type  does  not  exist: ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  Please  check  that  the  goal  type  does  not  exist: ");  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type.  Please  check  that  the  goal  type  does  not  exist: ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    a    goal    type.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
317	[BUG]  [BUGGY]  mIY  =  prevY  +  currX[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  currX[i  +  1];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  currX[i  +  1];	  mIY    =    prevY    +    currX[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
318	[BUG]  [BUGGY]  mIY  =  prevY  +  mIX[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  prevY  +  mIX[i];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  prevY  +  mIX[i];	  mIY    =    prevY    +    currX[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
319	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  <  bound2  ||  mIX  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkArgument(mIX  <  bound2  ||  mIX  >  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkArgument(mIX  <  bound2  ||  mIX  >  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    prevY;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
320	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  bound2  &&  mIY  <  =  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkArgument(mIX  >=  bound2  &&  mIY  <  =  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkArgument(mIX  >=  bound2  &&  mIY  <  =  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    prevY;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
321	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  <  bound2  ||  mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Preconditions.checkArgument(mIX  <  bound2  ||  mIY  >  max);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Preconditions.checkArgument(mIX  <  bound2  ||  mIY  >  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    prevY;    i++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
322	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  mIX  =  max;  }  else  {  mIX  =  max;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  mIX  =  max;  }  else  {  mIX  =  max;  }	  if(i    >    min)    {    mIX    =    max;    }    else    {    mIX    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
323	[BUG]  [BUGGY]  Integer  j  =  generator.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  generator.getInt(mIX,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  generator.getInt(mIX,  mIY);	  Integer    j    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
324	[BUG]  [BUGGY]  Integer  j  =  optima.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optima.getInt(mIX,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optima.getInt(mIX,  mIY);	  Integer    j    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
325	[BUG]  [BUGGY]  Integer  j  =  i;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  i;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  i;	  Integer    j    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
326	[BUG]  [BUGGY]  Integer  j  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  0;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  0;	  Integer    j    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
327	[BUG]  [BUGGY]  mIY  =  Preconditions.checkState(mIX!=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  Preconditions.checkState(mIX!=  mIY);  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  Preconditions.checkState(mIX!=  mIY);	  mIY    =    Preconditions.checkNotNull(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
328	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  currX;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  currX;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  currX;  j++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
329	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  i;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  j  =  i;  j  <  prevY;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  j  =  i;  j  <  prevY;  j++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    j    =    0;    j    <    prevY;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
330	[BUG]  [BUGGY]  Integer  j  =  f.getIntValue(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  f.getIntValue(mIX);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  f.getIntValue(mIX);	  Integer    j    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
331	[BUG]  [BUGGY]  mIY  =  currX[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  currX[i  +  1];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  currX[i  +  1];	  mIY    =    currY[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
332	[BUG]  [BUGGY]  mIY  =  j  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  j  /  1;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  j  /  1;	  mIY    =    j    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
333	[BUG]  [BUGGY]  mIY  =  optima[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  optima[i  +  2];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  optima[i  +  2];	  mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
334	[BUG]  [BUGGY]  mIY  =  optima[i  +  3];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  optima[i  +  3];  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  optima[i  +  3];	  mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
335	[BUG]  [BUGGY]  Integer  mIY  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  mIY  =  prevY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  mIY  =  prevY;	  Integer    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
336	[BUG]  [BUGGY]  Integer  j  =  optimization.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  Integer  j  =  optimization.getInt(mIX,  mIY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	Integer  j  =  optimization.getInt(mIX,  mIY);	  Integer    j    =    optimizer.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
337	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  <  currY;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  <  currY;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  prevY  -  1;  i  <  currY;  i++)  {  mIX  =  bound2;  }	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
338	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  currY;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  currY;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  currY;  i++)  {  mIX  =  bound2;  }	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
339	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  currX  -  1;  i  <  prevY;  i++)  {  mIX  =  bound2;  }	  if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    currY;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
340	[BUG]  [BUGGY]  mIY  =  mIX  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIY  =  mIX  +  currX;  [BUGGY]      }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIY  =  mIX  +  currX;	  mIY    =    prevY    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
341	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  prevY;  i++)  {  mIX  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  prevY;  i++)  {  mIX  =  bound2;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  i  =  bound1  -  1;  i  >=  prevY;  i++)  {  mIX  =  bound2;  }	  if(j    >    0)    {    for(int    i    =    bound1    -    1;    i    >=    bound2;    i++)    {    mIX    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
342	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound1;  }  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  limit;  j++)  {  mIX  =  bound1;  }	  if(j    >    0)    {    for(int    j    =    0;    j    <    bound2;    j++)    {    mIX    =    bound1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
343	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  at  ' "  +  currY  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  at  ' "  +  currY  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  at  ' "  +  currY  + "'  and  ' "  +  currY  + "'  or  ' "  +  currY);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    at    '   "    +    currX    +   "'    and    '   "    +    currY    +   "'    or    '   "    +    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
344	[BUG]  [BUGGY]  i  =  j  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  i  =  j  /  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	i  =  j  /  1;	  i    =    j    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
345	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX;  mIY  =  mIY;	  mIX    =    max;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
346	[BUG]  [BUGGY]  i  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  i  =  lastNaN  -  1;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	i  =  lastNaN  -  1;	  i    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
347	[BUG]  [BUGGY]  mIX  =  mIX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];      [BUGGY]  mIX  =  mIX  +  prevY;  [BUGGY]      mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	mIX  =  mIX  +  prevY;	  mIX    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
