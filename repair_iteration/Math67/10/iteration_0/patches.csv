bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  j  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  lastNaN  -  1;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  lastNaN  -  1;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
2	[BUG]  [BUGGY]    int  j  =  lastNaN  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  lastNaN  +  1;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  lastNaN  +  1;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
3	[BUG]  [BUGGY]    int  j  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  currY  -  1;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  currY  -  1;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
4	[BUG]  [BUGGY]    int  j  =  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  lastNaN;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  lastNaN;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
5	[BUG]  [BUGGY]    Integer  j  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    Integer  j  =  currY  +  1;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    Integer  j  =  currY  +  1;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
6	[BUG]  [BUGGY]  int  i  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]  int  i  =  prevY  -  1;  [BUGGY]  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	int  i  =  prevY  -  1;	int  i  =  j  -  1;  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
7	[BUG]  [BUGGY]  int  i  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]  int  i  =  currY  -  1;  [BUGGY]  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	int  i  =  currY  -  1;	int  i  =  j  -  1;  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
8	[BUG]  [BUGGY]  int  i  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]  int  i  =  lastNaN  -  1;  [BUGGY]  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	int  i  =  lastNaN  -  1;	int  i  =  j  -  1;  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
9	[BUG]  [BUGGY]  int  i  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]  int  i  =  currX  -  1;  [BUGGY]  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	int  i  =  currX  -  1;	int  i  =  j  -  1;  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
10	[BUG]  [BUGGY]    int  j  =  bound1  -  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  bound1  -  bound2;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  bound1  -  bound2;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
11	[BUG]  [BUGGY]    int  j  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  bound1;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  bound1;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
12	[BUG]  [BUGGY]    Integer  j  =  getMaximumInt();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    Integer  j  =  getMaximumInt();  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    Integer  j  =  getMaximumInt();		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
13	[BUG]  [BUGGY]    int  j  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  0;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  0;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
14	[BUG]  [BUGGY]    int  j  =  1;  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]    int  j  =  1;  [BUGGY]  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	    int  j  =  1;		non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
15	[BUG]  [BUGGY]  int  i  =  prevX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError  [CONTEXT]  }  double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {    [BUGGY]  int  i  =  prevX  -  1;  [BUGGY]  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	int  i  =  prevX  -  1;	int  i  =  j  -  1;  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
