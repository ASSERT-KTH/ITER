bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  currY;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY;	      double    mIY    =    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
2	[BUG]  [BUGGY]  double  mIY  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  prevY;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY;	      double    mIY    =    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
3	[BUG]  [BUGGY]  double  mIY  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  currX;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currX;	      double    mIY    =    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
4	[BUG]  [BUGGY]  double  mIY  =  currY[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  currY[j];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY[j];	      double    mIY    =    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
5	[BUG]  [BUGGY]  vices.add(currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  vices.add(currX,  currY);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(currX,  currY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
6	[BUG]  [BUGGY]  vices.add(currX);  currY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  vices.add(currX);  currY  =  optima[j];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(currX);  currY  =  optima[j];	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
7	[BUG]  [BUGGY]  final  boolean  prevY  =  currX  >  0;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  final  boolean  prevY  =  currX  >  0;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  boolean  prevY  =  currX  >  0;	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
8	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
9	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >=    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
10	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >=    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
11	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >=    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
12	[BUG]  [BUGGY]  while  (i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while  (i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (prevY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
13	[BUG]  [BUGGY]  while  (i!=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while  (i!=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i!=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (prevY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
14	[BUG]  [BUGGY]  while  (i  >=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while  (i  >=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
15	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
16	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
17	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  max;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  max;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
18	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
23	[BUG]  [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
24	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
25	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
26	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
27	[BUG]  [BUGGY]  Integer  i  =  currX.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  i  =  currX.intValue();  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currX.intValue();	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
28	[BUG]  [BUGGY]  Integer  i  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  i  =  currX;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currX;	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
29	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  currX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  currX);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  currX);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
30	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  max);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  max);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
31	[BUG]  [BUGGY]  double  mIX  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIX  =  currX;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX;	      double    mIX    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
32	[BUG]  [BUGGY]  double  mIX  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIX  =  prevY;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  prevY;	      double    mIX    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
33	[BUG]  [BUGGY]  double  mIX  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIX  =  currY;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currY;	      double    mIX    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
34	[BUG]  [BUGGY]  double  mIX  =  currX[j];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIX  =  currX[j];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX[j];	      double    mIX    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
39	[BUG]  [BUGGY]  Integer  mIY  =  max  <  <  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIY  =  max  <  <  bound1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  <  <  bound1;	      Integer    mIY    =    bound1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
40	[BUG]  [BUGGY]  Integer  mIY  =  currX  <  <  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIY  =  currX  <  <  max;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currX  <  <  max;	      Integer    mIY    =    bound1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
41	[BUG]  [BUGGY]  Integer  mIY  =  currY  <  <  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIY  =  currY  <  <  max;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currY  <  <  max;	      Integer    mIY    =    bound1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
42	[BUG]  [BUGGY]  Integer  mIY  =  bound2  <  <  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIY  =  bound2  <  <  max;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  bound2  <  <  max;	      Integer    mIY    =    bound1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
43	[BUG]  [BUGGY]  int  i  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  prevY  -  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  prevY  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
44	[BUG]  [BUGGY]  int  i  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  currY  -  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  currY  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
45	[BUG]  [BUGGY]  int  i  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  lastNaN  -  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  lastNaN  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
46	[BUG]  [BUGGY]  int  i  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  currX  -  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  currX  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
48	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
49	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
50	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
51	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
52	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
53	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
54	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
55	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
56	[BUG]  [BUGGY]  final  int  j  =  j  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  final  int  j  =  j  -  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  j  =  j  -  1;	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    >=    0;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
57	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
58	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
59	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
60	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
61	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
62	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  <  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  <  prevY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  <  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
63	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
64	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
65	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
66	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
67	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
68	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
72	[BUG]  [BUGGY]  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
73	[BUG]  [BUGGY]  double  mIY  =  currY[i];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  currY[i];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY[i];	      double    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
74	[BUG]  [BUGGY]  while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
75	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  prevY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
76	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  lastNaN);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  lastNaN  =  Math.min(lastNaN,  lastNaN);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  lastNaN);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
77	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  lastNaN)-  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  lastNaN  =  Math.min(lastNaN,  lastNaN)-  lastNaN;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  lastNaN)-  lastNaN;	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
78	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  lastNaN  =  Math.min(lastNaN,  max);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  max);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
79	[BUG]  [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
80	[BUG]  [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
81	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
83	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
84	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
85	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
86	[BUG]  [BUGGY]  double  mIX  =  curr[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIX  =  curr[j];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  curr[j];	      double    mIX    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
87	[BUG]  [BUGGY]  double  mIY  =  curr[j];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  curr[j];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr[j];	      double    mIY    =    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
88	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
89	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
90	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  max);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j,  max);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
91	[BUG]  [BUGGY]  Integer  i  =  optimiser.getInt(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  i  =  optimiser.getInt(mIX,  prevY);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getInt(mIX,  prevY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
92	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  i  =  optimiser.getIntValue(j);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
93	[BUG]  [BUGGY]  Integer  i  =  optimiser.getInt(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  i  =  optimiser.getInt(mIX);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getInt(mIX);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(j  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Preconditions.checkState(j  >  0);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  >  0);	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkNotNull(currX);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Preconditions.checkNotNull(currX);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkNotNull(currX);	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkArgument(j  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Preconditions.checkArgument(j  >  0);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkArgument(j  >  0);	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
97	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException();  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getOptimizationException();	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(j  ==  0);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Preconditions.checkState(j  ==  0);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  ==  0);	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    >=    0;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
100	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (mIX  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (mIX  +  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (mIX  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
101	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
102	[BUG]  [BUGGY]  double  mIY  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  bound1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  bound1;	      double    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
103	[BUG]  [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
104	[BUG]  [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
105	[BUG]  [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
106	[BUG]  [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
107	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
108	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
109	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
111	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
112	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
113	[BUG]  [BUGGY]  int  i  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  max  -  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  max  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
114	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
115	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
116	[BUG]  [BUGGY]  int  j  =  j  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  j  =  j  -  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  j  =  j  -  1;	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
117	[BUG]  [BUGGY]  Integer  mIX  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIX  =  currX;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  currX;	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
118	[BUG]  [BUGGY]  Integer  j  =  currX  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  j  =  currX  +  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  currX  +  1;	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
119	[BUG]  [BUGGY]  Integer  j  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  j  =  currX;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  currX;	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    currX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
120	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
121	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
122	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
123	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
124	[BUG]  [BUGGY]  Integer  mIY  =  curr2  <  <  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIY  =  curr2  <  <  max;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  curr2  <  <  max;	      Integer    mIY    =    bound1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
125	[BUG]  [BUGGY]  Integer  mIY  =  curr1  <  <  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIY  =  curr1  <  <  max;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  curr1  <  <  max;	      Integer    mIY    =    bound1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
126	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {	  while(i    >=    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
127	[BUG]  [BUGGY]  double  mIY  =  optimaValues[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  optimaValues[j  -  1];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimaValues[j  -  1];	      double    mIY    =    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
128	[BUG]  [BUGGY]  double  mIY  =  currX  +  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  currX  +  optimaValues[j];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currX  +  optimaValues[j];	      double    mIY    =    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
130	[BUG]  [BUGGY]  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
131	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.abs(lastNaN);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Class  <?>  lastNaN  =  Math.abs(lastNaN);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.abs(lastNaN);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
132	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.round(lastNaN);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Class  <?>  lastNaN  =  Math.round(lastNaN);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.round(lastNaN);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
133	[BUG]  [BUGGY]  ConvergenceException  ce  =  ce.getException();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  ConvergenceException  ce  =  ce.getException();  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  ce.getException();	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
134	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
135	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
136	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)!=  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)!=  (currY  <  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)!=  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
137	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
138	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (prevY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (prevY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (prevY  +  mIX)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (prevY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
139	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
140	[BUG]  [BUGGY]  int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	      for(int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
141	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(j  >=  0);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Preconditions.checkState(j  >=  0);  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  >=  0);	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    >=    0;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(j  >  0, "expected  initialization  of  a  goal  type ");  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Preconditions.checkState(j  >  0, "expected  initialization  of  a  goal  type ");  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  >  0, "expected  initialization  of  a  goal  type ");	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    >=    0;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	      for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
146	[BUG]  [BUGGY]  Integer  mIX  =  int  max;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  Integer  mIX  =  int  max;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  int  max;	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
147	[BUG]  [BUGGY]  ConvergenceException  ce  =  ce.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  ConvergenceException  ce  =  ce.getMessage();  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  ce.getMessage();	      if(j    >    0)    {    for(int    i    =    j    -    1;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
148	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
149	[BUG]  [BUGGY]  double  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  optimaValues[i  +  1];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimaValues[i  +  1];	      double    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
150	[BUG]  [BUGGY]  double  mIY  =  optimaValues[0];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  double  mIY  =  optimaValues[0];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimaValues[0];	      double    mIY    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
151	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
152	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
153	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
154	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
155	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];    [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [BUGGY]    optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
