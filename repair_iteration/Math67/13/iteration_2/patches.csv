bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  prevY)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  prevY)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  prevY)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
2	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
3	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  <  =  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  <  =  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  <  =  goalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
4	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
5	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
6	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
7	[BUG]  [BUGGY]  double  mIY  =  currY  +  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY  +  optimaValues[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY  +  optimaValues[j];	  double    mIY    =    currX    +    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
8	[BUG]  [BUGGY]  double  mIY  =  prevY  +  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  prevY  +  optimaValues[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY  +  optimaValues[j];	  double    mIY    =    currX    +    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
9	[BUG]  [BUGGY]  double  mIY  =  currX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currX  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currX  +  prevY;	  double    mIY    =    currX    +    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
10	[BUG]  [BUGGY]  double  mIY  =  max  +  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  max  +  optimaValues[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  max  +  optimaValues[j];	  double    mIY    =    currX    +    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
11	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (mIX    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
12	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (mIX    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
13	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (mIX  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (mIX  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)!=  (mIX  +  1)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (mIX    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
14	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  1)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (mIX    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
15	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getConvergenceException();	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
16	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getRawException();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getRawException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getRawException();	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
17	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getRealFunctionException();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getRealFunctionException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getRealFunctionException();	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
18	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException(mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getOptimizationException(mIX);	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
19	[BUG]  [BUGGY]  double  mIY  =  currX  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currX  +  currY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currX  +  currY;	  double    mIY    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
20	[BUG]  [BUGGY]  double  mIY  =  currY[0];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY[0];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY[0];	  double    mIY    =    optimaValues[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
21	[BUG]  [BUGGY]  lastNaN  =  Math.min(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(mIX,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(mIX,  mIY);	  lastNaN    =    Math.min(lastNaN,    lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
22	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  mIY);	  lastNaN    =    Math.min(lastNaN,    lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
23	[BUG]  [BUGGY]  lastNaN  =  Math.min(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(mIX,  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(mIX,  currY);	  lastNaN    =    Math.min(lastNaN,    lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
24	[BUG]  [BUGGY]  lastNaN  =  Math.max(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.max(mIX,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.max(mIX,  mIY);	  lastNaN    =    Math.min(lastNaN,    lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
26	[BUG]  [BUGGY]  Integer  mIY  =  max  <  <  curr2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  max  <  <  curr2;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  <  <  curr2;	  Integer    mIY    =    curr2    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
27	[BUG]  [BUGGY]  Integer  mIY  =  currX  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currX  +  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currX  +  max;	  Integer    mIY    =    curr2    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
28	[BUG]  [BUGGY]  double  mIX  =  currX  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX  +  currY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX  +  currY;	  double    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
29	[BUG]  [BUGGY]  double  mIX  =  currX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX  +  prevY;	  double    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
30	[BUG]  [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
31	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
32	[BUG]  [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
33	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
34	[BUG]  [BUGGY]  if(j  <  lastNaN)  {  vices.add(currX);  currY  =  optima[j];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  <  lastNaN)  {  vices.add(currX);  currY  =  optima[j];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  <  lastNaN)  {  vices.add(currX);  currY  =  optima[j];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
35	[BUG]  [BUGGY]  if(j  <  lastNaN)  {  vices.add(currX);  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  <  lastNaN)  {  vices.add(currX);  currY  =  optima[j];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  <  lastNaN)  {  vices.add(currX);  currY  =  optima[j];  }	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
36	[BUG]  [BUGGY]  if(mIX  >  currY)  {  vices.add(currX);  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(mIX  >  currY)  {  vices.add(currX);  currY  =  optima[j];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(mIX  >  currY)  {  vices.add(currX);  currY  =  optima[j];  }	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
37	[BUG]  [BUGGY]  if(mIX  >  currY)  {  vices.add(currX);  currY  =  optima[j];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(mIX  >  currY)  {  vices.add(currX);  currY  =  optima[j];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(mIX  >  currY)  {  vices.add(currX);  currY  =  optima[j];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
38	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  min  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  min  + "' ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  min  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
39	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  min  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  min  ' "  +  max  + "' ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  min  ' "  +  max  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
40	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  with  max  ' "  +  max  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
41	[BUG]  [BUGGY]  lastNaN  =  Math.min(mIX,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(mIX,  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(mIX,  max);	  lastNaN    =    Math.min(lastNaN,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
42	[BUG]  [BUGGY]  lastNaN  =  Math.min(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(mIX,  prevY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(mIX,  prevY);	  lastNaN    =    Math.min(lastNaN,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
43	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.round(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.round(mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.round(mIX);	  Class    <?>    lastNaN    =    Math.round(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
44	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.round(currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.round(currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.round(currY);	  Class    <?>    lastNaN    =    Math.round(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
45	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.round(lastNaN  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.round(lastNaN  +  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.round(lastNaN  +  1);	  Class    <?>    lastNaN    =    Math.round(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
46	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.round(currX);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.round(currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.round(currX);	  Class    <?>    lastNaN    =    Math.round(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIX;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	145	None	replace
48	[BUG]  [BUGGY]  Integer  mIY  =  currY  -  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currY  -  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currY  -  max;	  Integer    mIY    =    currY    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
49	[BUG]  [BUGGY]  Integer  mIY  =  currY  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currY  +  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currY  +  max;	  Integer    mIY    =    currY    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
50	[BUG]  [BUGGY]  Integer  mIY  =  currY  <  <  min;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currY  <  <  min;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currY  <  <  min;	  Integer    mIY    =    currY    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(i  ==  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(i  ==  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(i  ==  0);	  Preconditions.checkState(j    ==    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(j!=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(j!=  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j!=  0);	  Preconditions.checkState(j    ==    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
54	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
55	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
56	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
57	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  +  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  +  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  +  mIY))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
58	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >>    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
59	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  currY)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  currY)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  currY)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >>    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
60	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >>    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
61	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >>    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
62	[BUG]  [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    prevY;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
63	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    prevY;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    1;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    1;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i];  }	  for(int    i    =    1;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
67	[BUG]  [BUGGY]  double  mIX  =  currY  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currY  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currY  +  prevY;	  double    mIX    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
68	[BUG]  [BUGGY]  double  mIX  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currY  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currY  +  1;	  double    mIX    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
69	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
70	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
71	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
74	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
75	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
76	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(j  ==  0,   "expected  initialization  of  a  goal  type ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(j  ==  0,   "expected  initialization  of  a  goal  type ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  ==  0,   "expected  initialization  of  a  goal  type ");	  Preconditions.checkState(j    >    0,   "expected    initialization    of    a    goal    type   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(j  >=  0,   "expected  initialization  of  a  goal  type ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(j  >=  0,   "expected  initialization  of  a  goal  type ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  >=  0,   "expected  initialization  of  a  goal  type ");	  Preconditions.checkState(j    >    0,   "expected    initialization    of    a    goal    type   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(j!=  0,   "expected  initialization  of  a  goal  type ");  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(j!=  0,   "expected  initialization  of  a  goal  type ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j!=  0,   "expected  initialization  of  a  goal  type ");	  Preconditions.checkState(j    >    0,   "expected    initialization    of    a    goal    type   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
80	[BUG]  [BUGGY]  double  mIY  =  curr;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr;	  double    mIY    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
81	[BUG]  [BUGGY]  vices.add(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(mIX,  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(mIX,  currY);	  vices.add(currX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
82	[BUG]  [BUGGY]  vices.add(prevY,  currX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(prevY,  currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(prevY,  currX);	  vices.add(currX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
83	[BUG]  [BUGGY]  vices.add(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(mIX,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(mIX,  mIY);	  vices.add(currX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
84	[BUG]  [BUGGY]  vices.add(prevX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(prevX,  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(prevX,  currY);	  vices.add(currX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
85	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	replace
86	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	replace
87	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  -  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  -  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  -  mIY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	replace
88	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	replace
89	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
90	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
91	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
92	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
93	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  currY)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  currY)  >=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  currY)  >=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
94	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  prevY)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
95	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
97	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
98	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
99	[BUG]  [BUGGY]  while(i  >=  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkArgument(j  ==  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkArgument(j  ==  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkArgument(j  ==  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
102	[BUG]  [BUGGY]  Preconditions.checkArgument(j!=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkArgument(j!=  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkArgument(j!=  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
103	[BUG]  [BUGGY]  Preconditions.checkArgument(j  >=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkArgument(j  >=  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkArgument(j  >=  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
104	[BUG]  [BUGGY]  while(i  <  =  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
105	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (mIY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (mIY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (mIY  <  mIY))  {	  while(i    <    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
106	[BUG]  [BUGGY]  while(i  <  0  &&(currY  >=  GoalType.MAXIMIZE)!=  (mIX  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(currY  >=  GoalType.MAXIMIZE)!=  (mIX  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(currY  >=  GoalType.MAXIMIZE)!=  (mIX  <  mIY))  {	  while(i    <    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    max    =    Math.min(mIX,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    max    =    Math.min(mIX,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    max    =    Math.min(mIX,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  prevY);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  prevY);  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  prevY);  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    max    =    Math.min(mIX,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
111	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  min);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  min);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
112	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  min);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  min);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
113	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  maxEvaluations);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  maxEvaluations);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  prevY  + "': "  +  maxEvaluations);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
114	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  currX  + "': "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  currX  + "': "  +  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  currX  + "': "  +  max);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
115	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  goalType.MAXIMIZE)  {  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  goalType.MAXIMIZE)  {  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  goalType.MAXIMIZE)  {  (currY  <  mIY))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
116	[BUG]  [BUGGY]  while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
117	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  mIY))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
118	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  +  mIX))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
119	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (mIY    >    GoalType.MAXIMIZE))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
120	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (mIY    >    GoalType.MAXIMIZE))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
121	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (mIY    >    GoalType.MAXIMIZE))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
122	[BUG]  [BUGGY]  Integer  j  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  currY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  currY;	  Integer    j    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
123	[BUG]  [BUGGY]  Integer  j  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  prevY;	  Integer    j    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
124	[BUG]  [BUGGY]  Integer  j  =  currX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  currX  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  currX  +  prevY;	  Integer    j    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
125	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
126	[BUG]  [BUGGY]  int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
127	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
128	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
129	[BUG]  [BUGGY]  Integer  i  =  currX  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currX  +  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currX  +  1;	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
130	[BUG]  [BUGGY]  Integer  i  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currY;	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
131	[BUG]  [BUGGY]  Integer  i  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currY  +  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currY  +  1;	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(i  >=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(i  >=  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(i  >=  0);	  Preconditions.checkState(j    >=    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
133	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >=    0    &&    (currX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
134	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {	  while(i    >=    0    &&    (currX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
135	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    >=    0    &&    (currX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
136	[BUG]  [BUGGY]  while(i  >=  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  <  currY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  <  currY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  <  currY))  {	  while(i    >=    0    &&    (currX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
137	[BUG]  [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
138	[BUG]  [BUGGY]  Integer  mIY  =  max  <  <  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  max  <  <  bound2;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  <  <  bound2;	  Integer    mIY    =    bound2    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    limit;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
140	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (mIX  +  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (mIX    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
141	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  1)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
142	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
143	[BUG]  [BUGGY]  int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  max;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  min;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  min;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  min;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  optima[i]  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  optima[i]  =  max;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  optima[i]  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  optima[i]  =  max;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
148	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
149	[BUG]  [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
150	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
151	[BUG]  [BUGGY]  while(i  <  0  ||(mIX!=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX!=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX!=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
152	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (currY    >    0))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
153	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  0))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (currY    >    0))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
154	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  currY)!=  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  currY)!=  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  currY)!=  (currY  >  0))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (currY    >    0))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
155	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >  currX)!=  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >  currX)!=  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >  currX)!=  (currY  >  0))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (currY    >    0))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
156	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
157	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  1)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
158	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  max)-  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  max)-  lastNaN;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  max)-  lastNaN;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
159	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIY)-  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIY)-  lastNaN;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  mIY)-  lastNaN;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
160	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY)-  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY)-  lastNaN;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  prevY)-  lastNaN;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
161	[BUG]  [BUGGY]  lastNaN  =  Math.min(mIX,  mIY)-  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(mIX,  mIY)-  lastNaN;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(mIX,  mIY)-  lastNaN;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
162	[BUG]  [BUGGY]  double  mIY  =  prevY[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  prevY[j  -  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY[j  -  1];	  double    mIY    =    optimaValues[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
163	[BUG]  [BUGGY]  double  mIY  =  prevY  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  prevY  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY  +  1];	  double    mIY    =    optimaValues[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
164	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  prevY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
165	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  currY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  currY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  currY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
166	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  -  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  -  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  -  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
167	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
168	[BUG]  [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    <    =    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
169	[BUG]  [BUGGY]  while(i  <  =  1  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  1  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  1  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    =    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
170	[BUG]  [BUGGY]  while  (i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while  (i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while    (i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
171	[BUG]  [BUGGY]  while  (i  >  0  &&  ((  currY  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while  (i  >  0  &&  ((  currY  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >  0  &&  ((  currY  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while    (i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
172	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
173	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currY  >>  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currY  >>  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currY  >>  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
174	[BUG]  [BUGGY]  double  mIX  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  bound1;	  double    mIX    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
175	[BUG]  [BUGGY]  double  mIX  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  max;	  double    mIX    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
176	[BUG]  [BUGGY]  while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  prevY)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
177	[BUG]  [BUGGY]  while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >=  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
178	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
179	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
180	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
181	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
182	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  1)!=  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  1)!=  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  1)!=  (currY  +  1)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  currY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  currY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  currY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  currY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
187	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
188	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
189	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j  >>  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j  >>  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j  >>  0;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
190	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j!=  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j!=  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j!=  0;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
191	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
192	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
193	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  prevY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
194	[BUG]  [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
195	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
198	[BUG]  [BUGGY]  int  i  =  min  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  min  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  min  -  1;	  int    i    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
199	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
200	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
201	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
202	[BUG]  [BUGGY]  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
203	[BUG]  [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
204	[BUG]  [BUGGY]  double  mIY  =  currX[j];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currX[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currX[j];	  double    mIY    =    currY[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
205	[BUG]  [BUGGY]  double  mIY  =  prevY[j];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  prevY[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY[j];	  double    mIY    =    currY[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
206	[BUG]  [BUGGY]  double  mIY  =  currY[j]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY[j]  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY[j]  +  prevY;	  double    mIY    =    currY[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
207	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getIntValue(min,  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(min,  max);	  Integer    i    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
208	[BUG]  [BUGGY]  Integer  i  =  optima.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optima.getIntValue(j,  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optima.getIntValue(j,  max);	  Integer    i    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
209	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  prevY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j,  prevY);	  Integer    i    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
210	[BUG]  [BUGGY]  Integer  i  =  goalType.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  goalType.getIntValue(j,  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  goalType.getIntValue(j,  max);	  Integer    i    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
211	[BUG]  [BUGGY]  while(i  >  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >=    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
212	[BUG]  [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    >=    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
213	[BUG]  [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  -  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  -  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  -  mIY))  {	  while(i    >=    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
214	[BUG]  [BUGGY]  while(i  >=  0  &&(currY  >=  GoalType.MAXIMIZE)!=  (mIX  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(currY  >=  GoalType.MAXIMIZE)!=  (mIX  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(currY  >=  GoalType.MAXIMIZE)!=  (mIX  <  mIY))  {	  while(i    >=    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
215	[BUG]  [BUGGY]  double  mIX  =  currX[0];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX[0];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX[0];	  double    mIX    =    currX[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
216	[BUG]  [BUGGY]  double  mIX  =  currX[currY];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX[currY];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX[currY];	  double    mIX    =    currX[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
217	[BUG]  [BUGGY]  double  mIX  =  currX[1];  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX[1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX[1];	  double    mIX    =    currX[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
218	[BUG]  [BUGGY]  Integer  i  =  currY.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currY.intValue();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currY.intValue();	  Integer    i    =    currX.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
219	[BUG]  [BUGGY]  Integer  i  =  currX.intValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currX.intValue()  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currX.intValue()  +  1;	  Integer    i    =    currX.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
220	[BUG]  [BUGGY]  Integer  i  =  currX.intValue()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currX.intValue()  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currX.intValue()  -  1;	  Integer    i    =    currX.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
221	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
222	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
223	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currX  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currX  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currX  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
224	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
225	[BUG]  [BUGGY]  double  mIY  =  curr1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr1;	  double    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
226	[BUG]  [BUGGY]  double  mIY  =  curr2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr2;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr2;	  double    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
227	[BUG]  [BUGGY]  Integer  mIX  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  currY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  currY;	  Integer    mIX    =    int    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
228	[BUG]  [BUGGY]  Integer  mIX  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  min;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  min;	  Integer    mIX    =    int    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
229	[BUG]  [BUGGY]  Integer  mIX  =  int  min;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  int  min;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  int  min;	  Integer    mIX    =    int    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
230	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  =  prevY))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
231	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  currY)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  currY)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  currY)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
232	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  currX)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  currX)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  currX)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
233	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(mIX!=  currY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(mIX!=  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(mIX!=  currY);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkState(mIX  ==  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(mIX  ==  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(mIX  ==  currY);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkNotNull(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkNotNull(mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkNotNull(mIX);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkState(mIX  >=  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(mIX  >=  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(mIX  >=  currY);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
238	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optimaValues[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optimaValues[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i!=  0;  i++)  {  optimaValues[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i!=  0;  i++)  {  optimaValues[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i!=  0;  i++)  {  optimaValues[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optimaValues[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
241	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  i++)  {  optimaValues[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  i++)  {  optimaValues[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  i++)  {  optimaValues[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optimaValues[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
242	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  currX  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  currX  +  1;	  Integer    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
243	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  currX  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  currX  +  prevY;	  Integer    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
244	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  currX  +  currY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  currX  +  currY;	  Integer    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
245	[BUG]  [BUGGY]  double  mIY  =  currY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY[i  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY[i  +  1];	  double    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
246	[BUG]  [BUGGY]  double  mIY  =  optimaValues[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  optimaValues[i  +  2];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimaValues[i  +  2];	  double    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
247	[BUG]  [BUGGY]  double  mIY  =  currX[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currX[i  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currX[i  +  1];	  double    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
248	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
249	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
250	[BUG]  [BUGGY]  Integer  i  =  optimiser.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getInt(mIX,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getInt(mIX,  mIY);	  Integer    i    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
251	[BUG]  [BUGGY]  Integer  i  =  optimizer.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimizer.getInt(mIX,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimizer.getInt(mIX,  mIY);	  Integer    i    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
252	[BUG]  [BUGGY]  Integer  i  =  optima.getInt(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optima.getInt(mIX,  prevY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optima.getInt(mIX,  prevY);	  Integer    i    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
253	[BUG]  [BUGGY]  Integer  i  =  optima.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optima.getInt(mIX,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optima.getInt(mIX,  mIY);	  Integer    i    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
254	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
255	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluation;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  maxEvaluation;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  maxEvaluation;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    count;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
256	[BUG]  [BUGGY]  Integer  mIX  =  currX;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  currX;  mIY  =  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  currX;  mIY  =  currY;	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
257	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  count  =  Math.min(mIX,  currY);  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  count  =  Math.min(mIX,  currY);	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
258	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  count  =  Math.min(mIX,  prevY);  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  count  =  Math.min(mIX,  prevY);	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
259	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  prevY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
260	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  max))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
261	[BUG]  [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
262	[BUG]  [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
263	[BUG]  [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  1)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    1)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
265	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
266	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i!=  lastNaN;  ++i)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
267	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >>  lastNaN;  ++i)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
268	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
269	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
270	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i!=  0;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i!=  0;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i!=  0;  ++i)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
271	[BUG]  [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
272	[BUG]  [BUGGY]  Integer  i  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  prevY;	  Integer    i    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
273	[BUG]  [BUGGY]  Integer  i  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currX  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currX  -  1;	  Integer    i    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
274	[BUG]  [BUGGY]  Integer  i  =  optima.getIntValue(j);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optima.getIntValue(j);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optima.getIntValue(j);	  Integer    i    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
275	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  lastNaN);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  lastNaN);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j,  lastNaN);	  Integer    i    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
276	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
277	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
278	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  currY)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  currY)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  currY)!=  (currY  +  prevY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
279	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (mIY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (mIY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (mIY  <  mIY))  {	  while(i    <    0    ||(mIX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
280	[BUG]  [BUGGY]  while(i  <  =  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
281	[BUG]  [BUGGY]  double  mIY  =  currX[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currX[i];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currX[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
282	[BUG]  [BUGGY]  double  mIY  =  prevY[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  prevY[i];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
283	[BUG]  [BUGGY]  double  mIY  =  currY[i]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY[i]  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY[i]  +  1;	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
284	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >=  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)!=    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
285	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  -  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  -  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  -  mIY)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
286	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
287	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  currY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  currY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  currY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
288	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  max)!=  (currY  <  =  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  max)!=  (currY  <  =  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  max)!=  (currY  <  =  mIY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
289	[BUG]  [BUGGY]  Integer  mIY  =  curr1  <  <  min;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  curr1  <  <  min;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  curr1  <  <  min;	  Integer    mIY    =    curr1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
290	[BUG]  [BUGGY]  Integer  mIY  =  curr1  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  curr1  +  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  curr1  +  max;	  Integer    mIY    =    curr1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    currY)    {    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
292	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    currY)    {    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    currY)    {    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  maxEvaluations;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    currY)    {    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
295	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  currX  + "': "  +  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  currX  + "': "  +  prevY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY  ' "  +  currX  + "': "  +  prevY);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
296	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "': "  +  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "': "  +  prevY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "': "  +  prevY);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
297	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  currX);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
298	[BUG]  [BUGGY]  Integer  i  =  optima.getInt(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optima.getInt(mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optima.getInt(mIX);	  Integer    i    =    optimiser.getInt(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
299	[BUG]  [BUGGY]  Integer  i  =  optimiser.getInt(mIX  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getInt(mIX  +  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getInt(mIX  +  1);	  Integer    i    =    optimiser.getInt(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
300	[BUG]  [BUGGY]  while  (i  >=  0  &&  ((  currX  +  currY)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while  (i  >=  0  &&  ((  currX  +  currY)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >=  0  &&  ((  currX  +  currY)  >>  (currY  +  mIX)))  {	  while    (i    >=    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
301	[BUG]  [BUGGY]  while  (i  >=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while  (i  >=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while    (i    >=    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
302	[BUG]  [BUGGY]  double  mIY  =  currY  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY  +  prevY;	  double    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
303	[BUG]  [BUGGY]  double  mIY  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY  +  1;	  double    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  lastNaN;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIX;    ++i)    {    if(mIY    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
305	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIX;    ++i)    {    if(mIY    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIX;    ++i)    {    if(mIY    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
307	[BUG]  [BUGGY]  final  boolean  prevY  =  currY  >  0;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  boolean  prevY  =  currY  >  0;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  boolean  prevY  =  currY  >  0;	  final    boolean    prevY    =    currX    >    0;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
308	[BUG]  [BUGGY]  final  boolean  prevY  =  currX  >=  0;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  boolean  prevY  =  currX  >=  0;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  boolean  prevY  =  currX  >=  0;	  final    boolean    prevY    =    currX    >    0;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
309	[BUG]  [BUGGY]  final  boolean  prevY  =  currX  ==  0;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  boolean  prevY  =  currX  ==  0;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  boolean  prevY  =  currX  ==  0;	  final    boolean    prevY    =    currX    >    0;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
310	[BUG]  [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
311	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
312	[BUG]  [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  lastNaN;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
313	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
314	[BUG]  [BUGGY]  ConvergenceException  ce  =  f.getException();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  f.getException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  f.getException();	  ConvergenceException    ce    =    ce.getException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
315	[BUG]  [BUGGY]  ConvergenceException  ce  =  this.ceilingException.getException();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  this.ceilingException.getException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  this.ceilingException.getException();	  ConvergenceException    ce    =    ce.getException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
316	[BUG]  [BUGGY]  ConvergenceException  ce  =  currY.getException();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  currY.getException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  currY.getException();	  ConvergenceException    ce    =    ce.getException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
317	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX.getException();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  currX.getException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  currX.getException();	  ConvergenceException    ce    =    ce.getException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
318	[BUG]  [BUGGY]  double  mIX  =  curr[j]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  curr[j]  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  curr[j]  +  1;	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
319	[BUG]  [BUGGY]  double  mIX  =  curr[j]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  curr[j]  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  curr[j]  +  prevY;	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
320	[BUG]  [BUGGY]  double  mIX  =  curr[j]  -  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  curr[j]  -  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  curr[j]  -  prevY;	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
321	[BUG]  [BUGGY]  ConvergenceException  ce  =  currY.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  currY.getMessage();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  currY.getMessage();	  ConvergenceException    ce    =    ce.getMessage();    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
322	[BUG]  [BUGGY]  ConvergenceException  ce  =  f.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  f.getMessage();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  f.getMessage();	  ConvergenceException    ce    =    ce.getMessage();    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
323	[BUG]  [BUGGY]  ConvergenceException  ce  =  currX.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  currX.getMessage();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  currX.getMessage();	  ConvergenceException    ce    =    ce.getMessage();    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
324	[BUG]  [BUGGY]  ConvergenceException  ce  =  this.ceilingException.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  this.ceilingException.getMessage();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  this.ceilingException.getMessage();	  ConvergenceException    ce    =    ce.getMessage();    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
325	[BUG]  [BUGGY]  int  i  =  bound1  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  bound1  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  bound1  -  1;	  int    i    =    currX    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
326	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  GoalType.MAXIMIZE)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  GoalType.MAXIMIZE)  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  GoalType.MAXIMIZE)  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
327	[BUG]  [BUGGY]  while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
328	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  goalType.MAXIMIZE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  goalType.MAXIMIZE)  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  goalType.MAXIMIZE)  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
329	[BUG]  [BUGGY]  Integer  j  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  currY  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  currY  +  1;	  Integer    j    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
330	[BUG]  [BUGGY]  Integer  j  =  prevY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  prevY  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  prevY  +  1;	  Integer    j    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    j;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  0;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  0;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  0;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    j;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0;  j  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  j  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  j  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    j;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
334	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  currY)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  currY)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  currY)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
335	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
336	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
337	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
338	[BUG]  [BUGGY]  Integer  mIY  =  currX  -  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currX  -  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currX  -  max;	  Integer    mIY    =    currX    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
339	[BUG]  [BUGGY]  Integer  mIY  =  currX  <  <  min;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currX  <  <  min;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currX  <  <  min;	  Integer    mIY    =    currX    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
340	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  mIX);	  lastNaN    =    Math.min(lastNaN,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
341	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY  +  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  prevY  +  1);	  lastNaN    =    Math.min(lastNaN,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
342	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  currY);	  lastNaN    =    Math.min(lastNaN,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
344	[BUG]  [BUGGY]  final  int  j  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  j  =  currY  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  j  =  currY  -  1;	  final    int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
345	[BUG]  [BUGGY]  final  int  j  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  j  =  prevY  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  j  =  prevY  -  1;	  final    int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
346	[BUG]  [BUGGY]  final  int  j  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  j  =  lastNaN  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  j  =  lastNaN  -  1;	  final    int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
347	[BUG]  [BUGGY]  final  int  j  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  j  =  currX  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  j  =  currX  -  1;	  final    int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
348	[BUG]  [BUGGY]  int  j  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  j  =  currY  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  j  =  currY  -  1;	  int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
349	[BUG]  [BUGGY]  int  j  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  j  =  prevY  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  j  =  prevY  -  1;	  int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
350	[BUG]  [BUGGY]  int  j  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  j  =  lastNaN  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  j  =  lastNaN  -  1;	  int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
351	[BUG]  [BUGGY]  int  j  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  j  =  currX  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  j  =  currX  -  1;	  int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
352	[BUG]  [BUGGY]  double  mIY  =  curr[j]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr[j]  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr[j]  +  prevY;	  double    mIY    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
353	[BUG]  [BUGGY]  double  mIY  =  curr[j]  -  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr[j]  -  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr[j]  -  prevY;	  double    mIY    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
354	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
355	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
358	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  i++)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
359	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i!=  0;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i!=  0;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i!=  0;  i++)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
360	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
361	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.abs(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.abs(mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.abs(mIX);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
362	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.abs(mIX  +  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.abs(mIX  +  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.abs(mIX  +  currY);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
363	[BUG]  [BUGGY]  final  Class  <?>  lastNaN  =  Math.abs(lastNaN);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  Class  <?>  lastNaN  =  Math.abs(lastNaN);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  Class  <?>  lastNaN  =  Math.abs(lastNaN);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
364	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.min(lastNaN,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.min(lastNaN,  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.min(lastNaN,  max);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
365	[BUG]  [BUGGY]  while(i  <  0  ||  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    <    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
366	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    <    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
367	[BUG]  [BUGGY]  while(i  <  =  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    <    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
368	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >>  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >>  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >>  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
369	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  =  prevY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
370	[BUG]  [BUGGY]  Integer  mIY  =  max  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  max  -  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  -  bound1;	  Integer    mIY    =    max    <    <    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
371	[BUG]  [BUGGY]  Integer  mIY  =  max  /  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  max  /  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  /  bound1;	  Integer    mIY    =    max    <    <    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
372	[BUG]  [BUGGY]  Integer  mIY  =  min  <  <  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  min  <  <  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  min  <  <  bound1;	  Integer    mIY    =    max    <    <    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
373	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >    0    &&    (mIX    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
374	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {	  while(i    >    0    &&    (mIX    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
375	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  <  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {	  while(i    >    0    &&    (mIX    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
376	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  currX)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  currX)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  currX)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
377	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  =  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
378	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
379	[BUG]  [BUGGY]  for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
380	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
381	[BUG]  [BUGGY]  while(i  <  =  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
382	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
383	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  currY)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  currY)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  currY)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
384	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  -  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  -  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  -  mIY))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
385	[BUG]  [BUGGY]  double  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  bound2;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  bound2;	  double    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
386	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
387	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    count;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
388	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getMessage();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getMessage();	  ConvergenceException    ce    =    ce.getMessage();    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
389	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
390	[BUG]  [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
391	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
392	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
393	[BUG]  [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
394	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
395	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
396	[BUG]  [BUGGY]  if(i  >  0)  {  GoalType  goalType  =  goalType.getOptimizer();  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  GoalType  goalType  =  goalType.getOptimizer();  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  GoalType  goalType  =  goalType.getOptimizer();  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
397	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
398	[BUG]  [BUGGY]  while(i  <  0  &&(currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
399	[BUG]  [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
400	[BUG]  [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
401	[BUG]  [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
402	[BUG]  [BUGGY]  Integer  j  =  currX  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  currX  +  2;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  currX  +  2;	  Integer    j    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
403	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
404	[BUG]  [BUGGY]  int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  min;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
405	[BUG]  [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
406	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  0;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
407	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
408	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
409	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
410	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currX  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currX  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (currX  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
411	[BUG]  [BUGGY]  int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
412	[BUG]  [BUGGY]  int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
413	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	replace
414	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	replace
415	[BUG]  [BUGGY]  while  (i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while  (i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while  (i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >=  (currY  +  mIX)))  {	  while    (i    >=    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
416	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0,   "expected  initialization  of  a  goal  type ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(i  >  0,   "expected  initialization  of  a  goal  type ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(i  >  0,   "expected  initialization  of  a  goal  type ");	  Preconditions.checkState(j    >    0,   "expected    initialization    of    a    goal    type   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
417	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException(bound1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getOptimizationException(bound1);	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
418	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getRealOptimizationException();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getRealOptimizationException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getRealOptimizationException();	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
419	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException(bound1  -  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException(bound1  -  currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getOptimizationException(bound1  -  currX);	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
420	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
421	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  mIY;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
422	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  >  max))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
423	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
424	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  >  max))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
425	[BUG]  [BUGGY]  vices.add(prevY);  currY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(prevY);  currY  =  optima[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(prevY);  currY  =  optima[j];	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
426	[BUG]  [BUGGY]  vices.add(mIX);  currY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(mIX);  currY  =  optima[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(mIX);  currY  =  optima[j];	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
427	[BUG]  [BUGGY]  nulls.add(prevY);  currY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  nulls.add(prevY);  currY  =  optima[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	nulls.add(prevY);  currY  =  optima[j];	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
428	[BUG]  [BUGGY]  vices.add(prevX);  currY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(prevX);  currY  =  optima[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(prevX);  currY  =  optima[j];	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
429	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
430	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
431	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
432	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkArgument(mIX  >  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkArgument(mIX  >  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
433	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getException();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getException();	  ConvergenceException    ce    =    ce.getException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
434	[BUG]  [BUGGY]  while(i  >=  0  &&(currX!=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(currX!=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(currX!=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >=    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
435	[BUG]  [BUGGY]  Integer  i  =  optimiser.getInt(mIX  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getInt(mIX  -  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getInt(mIX  -  1);	  Integer    i    =    optimiser.getInt(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
436	[BUG]  [BUGGY]  Integer  i  =  optimizer.getInt(mIX  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimizer.getInt(mIX  +  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimizer.getInt(mIX  +  1);	  Integer    i    =    optimiser.getInt(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
437	[BUG]  [BUGGY]  double  mIY  =  bound1[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  bound1[i];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  bound1[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
438	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  prevY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  prevY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  prevY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
439	[BUG]  [BUGGY]  double  mIX  =  prevY[j];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  prevY[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  prevY[j];	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
440	[BUG]  [BUGGY]  double  mIX  =  curr[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  curr[j  -  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  curr[j  -  1];	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
441	[BUG]  [BUGGY]  double  mIX  =  curr[0];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  curr[0];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  curr[0];	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
442	[BUG]  [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  prevY;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    prevY;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
443	[BUG]  [BUGGY]  int  i  =  bound2  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  bound2  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  bound2  -  1;	  int    i    =    currX    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
444	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(i  >  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(i  >  0);	  Preconditions.checkState(j    ==    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
445	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
446	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
447	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  prevY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  prevY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  prevY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
448	[BUG]  [BUGGY]  vices.add(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(mIX,  prevY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(mIX,  prevY);	  vices.add(currX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
449	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
450	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
451	[BUG]  [BUGGY]  if(currX!=  null)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(currX!=  null)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(currX!=  null)  {  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
452	[BUG]  [BUGGY]  if(currX!=  null)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(currX!=  null)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(currX!=  null)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
453	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >>    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
454	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >>    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
455	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
456	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  min)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  min)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  min)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
457	[BUG]  [BUGGY]  double  mIX  =  currX[prevY];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX[prevY];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX[prevY];	  double    mIX    =    currX[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
458	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIX;    ++i)    {    if(mIY    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
459	[BUG]  [BUGGY]  Integer  i  =  optimizer.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimizer.getIntValue(j,  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimizer.getIntValue(j,  max);	  Integer    i    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
460	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getIntValue(j  +  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j  +  1);	  Integer    i    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
461	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {	  while(i    <    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
462	[BUG]  [BUGGY]  double  mIY  =  optimiseraValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  optimiseraValues[i  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimiseraValues[i  +  1];	  double    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
463	[BUG]  [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  mIX;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    mIX;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
464	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >=  goalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
465	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
466	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
467	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  if(mIX  >  min)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
468	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  1)  >=  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  1)  >=  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  1)  >=  (currY  +  1)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
469	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >  goalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >  goalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
470	[BUG]  [BUGGY]  Integer  mIX  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  max;	  Integer    mIX    =    int    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
471	[BUG]  [BUGGY]  double  mIX  =  currX  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX  +  bound2;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX  +  bound2;	  double    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
472	[BUG]  [BUGGY]  double  mIX  =  currX  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX  +  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX  +  bound1;	  double    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
473	[BUG]  [BUGGY]  double  mIY  =  prevY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  prevY  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY  +  1;	  double    mIY    =    optimaValues[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
474	[BUG]  [BUGGY]  Integer  i  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  bound1;	  Integer    i    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
475	[BUG]  [BUGGY]  Integer  i  =  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  1;	  Integer    i    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
476	[BUG]  [BUGGY]  Integer  mIX  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  bound1;	  Integer    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
477	[BUG]  [BUGGY]  Integer  mIX  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  prevY;	  Integer    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
478	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  max))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
479	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
480	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  >  0))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (currY    >    0))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
481	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
482	[BUG]  [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (mIY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (mIY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(goalType  ==  GoalType.MAXIMIZE)!=  (mIY  >  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
483	[BUG]  [BUGGY]  double  mIX  =  prevX;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  prevX;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  prevX;	  double    mIX    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
484	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  prevY)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)!=    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
485	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  <  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currX  >>  GoalType.MAXIMIZE)!=  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)!=    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
486	[BUG]  [BUGGY]  while(i  <  0  &&(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
487	[BUG]  [BUGGY]  while(i  >=  0  &&(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(mIX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
488	[BUG]  [BUGGY]  lastNaN  =  Math.max(mIX,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.max(mIX,  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.max(mIX,  max);	  lastNaN    =    Math.min(lastNaN,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
489	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  >  max))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
490	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
491	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currX  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currX  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currX  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
492	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (mIY  >  GoalType.MAXIMIZE))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (mIY    >    GoalType.MAXIMIZE))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
493	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >=    0    &&    (currX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
494	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {	  while(i    >=    0    &&    (currX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
495	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  max))  {	  while(i    >=    0    &&    (currX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
496	[BUG]  [BUGGY]  Integer  mIY  =  max  <  <  curr1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  max  <  <  curr1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  <  <  curr1;	  Integer    mIY    =    curr1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
497	[BUG]  [BUGGY]  Integer  mIY  =  curr1  -  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  curr1  -  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  curr1  -  max;	  Integer    mIY    =    curr1    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
498	[BUG]  [BUGGY]  Integer  i  =  currX.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  currX.doubleValue();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  currX.doubleValue();	  Integer    i    =    currX.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
499	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >  goalType.MAXIMIZE)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >  goalType.MAXIMIZE)!=  (currY  +  prevY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
500	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
501	[BUG]  [BUGGY]  while(i  <  0  &&(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
502	[BUG]  [BUGGY]  while(i  >=  0  &&(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(mIX  >=  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
503	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  prevY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  prevY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  prevY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optimaValues[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
504	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  +  mIY)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
505	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MINIMIZE)!=  (currY  <  mIY))  {	  while(i    <    =    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
506	[BUG]  [BUGGY]  while(i  >=  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    =    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
507	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  +  mIX))  {	  while(i    >    0    &&    (mIX    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
508	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  +  max)!=  (mIY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  +  max)!=  (mIY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  +  max)!=  (mIY  +  mIX))  {	  while(i    >    0    &&    (mIX    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
509	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  prevY))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
510	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  prevY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  prevY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  prevY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
511	[BUG]  [BUGGY]  Integer  mIY  =  max  <  <  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  max  <  <  currY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  <  <  currY;	  Integer    mIY    =    currY    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
512	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
513	[BUG]  [BUGGY]  while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
514	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	137	None	replace
515	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  prevY)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
516	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
517	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)!=  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)!=  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  prevY)!=  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
518	[BUG]  [BUGGY]  while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  ==  (currY  <  mIY))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
519	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  max))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
520	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
521	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "': "  +  max);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
522	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.abs(lastNaN  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.abs(lastNaN  +  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.abs(lastNaN  +  1);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
523	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.min(lastNaN,  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.min(lastNaN,  currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.min(lastNaN,  currX);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
524	[BUG]  [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
525	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)!=  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)!=  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)!=  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
526	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)!=  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)!=  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)!=  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
527	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
528	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
529	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  prevY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  prevY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  prevY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
530	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  For(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	For(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
531	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
532	[BUG]  [BUGGY]  Integer  i  =  optimizer.getIntValue(j,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimizer.getIntValue(j,  mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimizer.getIntValue(j,  mIX);	  Integer    i    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
533	[BUG]  [BUGGY]  Integer  i  =  optimizer.getIntValue(j,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimizer.getIntValue(j,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimizer.getIntValue(j,  mIY);	  Integer    i    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
534	[BUG]  [BUGGY]  final  int  j  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  int  j  =  max  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  int  j  =  max  -  1;	  final    int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
535	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
536	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  =  max))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
537	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  max))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  max))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (mIY  >  max))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
538	[BUG]  [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currY  >=  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
539	[BUG]  [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
540	[BUG]  [BUGGY]  lastNaN  =  Math.min(mIX,  max)-  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(mIX,  max)-  lastNaN;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(mIX,  max)-  lastNaN;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
541	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
542	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
543	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(i  >  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
544	[BUG]  [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
545	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currY  +  mIX)!=  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currY  +  mIX)!=  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currY  +  mIX)!=  (currY  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
546	[BUG]  [BUGGY]  int  i  =  count  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  count  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  count  -  1;	  int    i    =    lastNaN    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
547	[BUG]  [BUGGY]  Integer  mIY  =  max  <  <  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  max  <  <  currX;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  max  <  <  currX;	  Integer    mIY    =    currX    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
548	[BUG]  [BUGGY]  Integer  mIY  =  currX  /  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currX  /  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currX  /  max;	  Integer    mIY    =    currX    <    <    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
549	[BUG]  [BUGGY]  for(int  i  =  1;  j  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  j  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  j  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    1;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
550	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  prevY))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
551	[BUG]  [BUGGY]  Integer  j  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  bound1;	  Integer    j    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
552	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (mIX  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (mIX  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MINIMIZE)  >>  (mIX  +  mIY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (mIX    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
553	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  goalType.MAXIMIZE)  >>  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
554	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
555	[BUG]  [BUGGY]  while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  ((  currX  +  GoalType.MAXIMIZE)  >>  (currY  +  mIY)))  {	  while(i    >    0    &&    ((    currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
556	[BUG]  [BUGGY]  double  mIY  =  bound1  +  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  bound1  +  optimaValues[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  bound1  +  optimaValues[j];	  double    mIY    =    currX    +    optimaValues[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
557	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "',  min  ' "  +  lastNaN  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "',  min  ' "  +  lastNaN  + "' ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "',  min  ' "  +  lastNaN  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
558	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "',  min  ' "  +  min  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "',  min  ' "  +  min  + "' ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "',  min  ' "  +  min  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
559	[BUG]  [BUGGY]  Integer  mIY  =  currX  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currX  -  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currX  -  bound1;	  Integer    mIY    =    max    <    <    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
560	[BUG]  [BUGGY]  double  mIY  =  curr[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr[j  -  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr[j  -  1];	  double    mIY    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
561	[BUG]  [BUGGY]  double  mIY  =  curr[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr[j  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr[j  +  1];	  double    mIY    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
562	[BUG]  [BUGGY]  double  mIY  =  curr[0];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curr[0];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curr[0];	  double    mIY    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
563	[BUG]  [BUGGY]  Preconditions.checkState(j  >=  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(j  >=  max);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  >=  max);	  Preconditions.checkState(j    >=    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
564	[BUG]  [BUGGY]  double  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  optima[i  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optima[i  +  1];	  double    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
565	[BUG]  [BUGGY]  double  mIY  =  optimaValues[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  optimaValues[j  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimaValues[j  +  1];	  double    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
566	[BUG]  [BUGGY]  double  mIY  =  optimiseaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  optimiseaValues[i  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimiseaValues[i  +  1];	  double    mIY    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
567	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  <  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)!=  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
568	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)!=    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
569	[BUG]  [BUGGY]  int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  count;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    count;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
570	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
571	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  j;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
572	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MINIMIZE)  >>  (currY  <  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  ==  GoalType.MINIMIZE)  >>  (currY  <  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  ==  GoalType.MINIMIZE)  >>  (currY  <  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MINIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
573	[BUG]  [BUGGY]  Integer  i  =  generator.getIntValue(j);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  generator.getIntValue(j);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  generator.getIntValue(j);	  Integer    i    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
574	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getIntValue(j  -  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j  -  1);	  Integer    i    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
575	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  0);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j,  0);	  Integer    i    =    optimiser.getIntValue(j);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
576	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
577	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
578	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  max;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
579	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optimisera[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optimisera[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optimisera[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
580	[BUG]  [BUGGY]  while(i!=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i!=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i!=  0  &&  ((  currX  ==  GoalType.MAXIMIZE)  >>  (currY  +  mIX)))  {	  while    (i!=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
581	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
582	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
583	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optima[i]  =  max;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
584	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimisera[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimisera[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimisera[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
585	[BUG]  [BUGGY]  vices.add(currX,  currY,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(currX,  currY,  mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(currX,  currY,  mIX);	  vices.add(currX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
586	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
587	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
588	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  mY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
589	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
590	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
591	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)  >>  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)  >>  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)  >>  (currY  >  0))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)    >>    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
592	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getRealizationException();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  goalType.getRealizationException();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  goalType.getRealizationException();	  ConvergenceException    ce    =    goalType.getOptimizationException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
593	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  prevY  -  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  prevY  -  1);	  lastNaN    =    Math.min(lastNaN,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
594	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
595	[BUG]  [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
596	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  j  =  j  -  1;  j  <  j;  ++i)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  j  =  j  -  1;  j  <  j;  ++i)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  j  =  j  -  1;  j  <  j;  ++i)  {  currY  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
597	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
598	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
599	[BUG]  [BUGGY]  double  mIX  =  curr[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  curr[j  +  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  curr[j  +  1];	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
600	[BUG]  [BUGGY]  double  mIX  =  prevX[j];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  prevX[j];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  prevX[j];	  double    mIX    =    curr[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
601	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevX  ' "  +  prevY  + "': "  +  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevX  ' "  +  prevY  + "': "  +  currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevX  ' "  +  prevY  + "': "  +  currX);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY    '   "    +    prevY    +   "':   "    +    currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
602	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
603	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)  >>  (currY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)  >>  (currY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)  >>  (currY  >  mIX))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
604	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  currX)!=  (currY  +  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  currX)!=  (currY  +  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  currX)!=  (currY  +  prevY))  {	  while(i    >    0    &&    (currY    >=    goalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
605	[BUG]  [BUGGY]  double  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  max;	  double    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
606	[BUG]  [BUGGY]  Integer  i  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  0;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  0;	  Integer    i    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
607	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)  >=  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  prevY)  >=  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  prevY)  >=  (currY  +  prevY)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
608	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  +  1)  >>  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  +  1)  >>  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  +  1)  >>  (currY  +  1)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
609	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
610	[BUG]  [BUGGY]  if(j!=  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j!=  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j!=  0)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
611	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MINIMIZE)  {  for(int  j  =  j  -  1;  j  >=  0;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    >=    0;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
612	[BUG]  [BUGGY]  while(i  <  0  ||  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||  (mIX  >=  GoalType.MAXIMIZE)!=  (mIY  <  mIX))  {	  while(i    <    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
613	[BUG]  [BUGGY]  while(i  <  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  (currY  >  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    <    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
614	[BUG]  [BUGGY]  ConvergenceException  ce  =  this.ceilingContext.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  this.ceilingContext.getMessage();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  this.ceilingContext.getMessage();	  ConvergenceException    ce    =    ce.getMessage();    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
615	[BUG]  [BUGGY]  ConvergenceException  ce  =  this.ceilingRealFunction.getMessage();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  this.ceilingRealFunction.getMessage();  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  this.ceilingRealFunction.getMessage();	  ConvergenceException    ce    =    ce.getMessage();    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
616	[BUG]  [BUGGY]  double  mIY  =  currY[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  currY[j  -  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  currY[j  -  1];	  double    mIY    =    currY[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
617	[BUG]  [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  true))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
618	[BUG]  [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(false,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
619	[BUG]  [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	luate(true,  false))  {  for(int  i  =  j  -  1;  i  <  j;  ++i)  {  currX  =  optima[i];  }	  luate(false,    false))    {    for(int    i    =    j    -    1;    i    <    lastNaN;    ++i)    {    currX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
620	[BUG]  [BUGGY]  final  boolean  prevY  =  currX!=  0;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  final  boolean  prevY  =  currX!=  0;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	final  boolean  prevY  =  currX!=  0;	  final    boolean    prevY    =    currX    >    0;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
621	[BUG]  [BUGGY]  int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  mIY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
622	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    min;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
623	[BUG]  [BUGGY]  Preconditions.checkNotNull(currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkNotNull(currX,  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkNotNull(currX,  currY);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
624	[BUG]  [BUGGY]  Preconditions.checkState(mIX  >  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(mIX  >  currY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(mIX  >  currY);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
625	[BUG]  [BUGGY]  Preconditions.checkState(mIX  >=  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(mIX  >=  currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(mIX  >=  currX);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
626	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkArgument(mIX  >=  currX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkArgument(mIX  >=  currX);	  Preconditions.checkNotNull(currX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
627	[BUG]  [BUGGY]  while(i  >  0  &&(goalType  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&(goalType  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&(goalType  ==  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {	  while(i    >=    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
628	[BUG]  [BUGGY]  while(i  >=  0  &&(currX  ==  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&(currX  ==  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&(currX  ==  GoalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >=    0    &&(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
629	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  <  GoalType.MAXIMIZE)  >>  (currY  >  0)))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  <  GoalType.MAXIMIZE)  >>  (currY  >  0)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  <  GoalType.MAXIMIZE)  >>  (currY  >  0)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
630	[BUG]  [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[0];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[0];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
631	[BUG]  [BUGGY]  Preconditions.checkState(j  >  1,   "expected  initialization  of  a  goal  type ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Preconditions.checkState(j  >  1,   "expected  initialization  of  a  goal  type ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Preconditions.checkState(j  >  1,   "expected  initialization  of  a  goal  type ");	  Preconditions.checkState(j    >    0,   "expected    initialization    of    a    goal    type   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
632	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
633	[BUG]  [BUGGY]  if(j  >=  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  >=  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  >=  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
634	[BUG]  [BUGGY]  if(goalType!=  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(goalType!=  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType!=  GoalType.MAXIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
635	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(goalType  ==  GoalType.MINIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(goalType  ==  GoalType.MINIMIZE)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
636	[BUG]  [BUGGY]  while(i  <  =  0  ||(mIX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  =  0  ||(mIX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  =  0  ||(mIX  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {	  while(i    <    =    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
637	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.round(prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.round(prevY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.round(prevY);	  Class    <?>    lastNaN    =    Math.round(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
638	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.round(mIX)-  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.round(mIX)-  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.round(mIX)-  1;	  Class    <?>    lastNaN    =    Math.round(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
639	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >=  (currY  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >=  (currY  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >=  (currY  +  prevY)))  {	  while    (i    >=    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
640	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
641	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
642	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
643	[BUG]  [BUGGY]  if(j  >=  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  >=  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  >=  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
644	[BUG]  [BUGGY]  if(mIX  >=  currX)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(mIX  >=  currX)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(mIX  >=  currX)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mIY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
645	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  j  =  j  -  1;  j  <  lastNaN;  ++j)  {  mIX  =  currX;  mY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    j    =    j    -    1;    j    <    lastNaN;    ++j)    {    mIX    =    currX;    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
646	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  mIX)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  mIX)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  mIX)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (prevY    +    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
647	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  +  mIY)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
648	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  >  0))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
649	[BUG]  [BUGGY]  while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  <  mIY))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
650	[BUG]  [BUGGY]  while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >=  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  <  mIY))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
651	[BUG]  [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  +  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  +  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  currY  <  =  GoalType.MAXIMIZE)  {  (currY  +  mIY))  {	  while(i    >    0    &&    currY    <    =    GoalType.MAXIMIZE)    ==    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
652	[BUG]  [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  optima[i]  =  max;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
653	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIX  =  optima[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIX  =  optima[j  -  1];	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
654	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  0))  {	  while(i    >    0    &&    (mIX    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
655	[BUG]  [BUGGY]  while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)  >>  (mIY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)  >>  (mIY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (mIX  >  GoalType.MAXIMIZE)  >>  (mIY  >  0))  {	  while(i    >    0    &&    (mIX    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
656	[BUG]  [BUGGY]  Integer  j  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  j  =  currX  -  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  j  =  currX  -  1;	  Integer    j    =    currX    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
657	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  prevY))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (currY    <    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
658	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
659	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)  >>  (currY  >  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)  >>  (currY  >  0))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)  >>  (currY  >  0))  {	  while(i    >    0    &&    (currY    <    =    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
660	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  currX)  {  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  currX)  {  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  currX)  {  mIY  =  currY;  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    currY)    {    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
661	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIX  >  currY)  {  mIY  =  currY;  }	  for(int    i    =    0;    i    <    max;    ++i)    {    if(mIX    >    currY)    {    mIY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
662	[BUG]  [BUGGY]  double  mIY  =  curra[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  curra[i];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  curra[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
663	[BUG]  [BUGGY]  Integer  mIY  =  currX  <  <  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  mIY  =  currX  <  <  bound1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  mIY  =  currX  <  <  bound1;	  Integer    mIY    =    max    <    <    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
664	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  mIX;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i  +  1];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
665	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currX  +  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    prevY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
666	[BUG]  [BUGGY]  Integer  i  =  generator.getInt(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  generator.getInt(mIX,  mIY);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  generator.getInt(mIX,  mIY);	  Integer    i    =    optimiser.getInt(mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
667	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {	  while(i    >    0    &&    (currY    >    GoalType.MAXIMIZE)!=    (mIY    >    GoalType.MAXIMIZE))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
668	[BUG]  [BUGGY]  double  mIY  =  optimaValues[1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  optimaValues[1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimaValues[1];	  double    mIY    =    optimaValues[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
669	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  0)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  0)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  0)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    mIX;    ++i)    {    if(mIY    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
670	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MINIMIZE)  >>  (currY  +  1)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    1)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
671	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  -  currX  +  1)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  -  currX  +  1)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >>  (currY  -  currX  +  1)))  {	  while(i    >    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    +    1)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
672	[BUG]  [BUGGY]  vices.add(currX);  currY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  vices.add(currX);  currY  =  currY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	vices.add(currX);  currY  =  currY;	  vices.add(currX);    currY    =    optima[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
673	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
674	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  optima[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    optima[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
675	[BUG]  [BUGGY]  int  i  =  1;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
676	[BUG]  [BUGGY]  int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[0];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[0];  }	  int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
677	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.min(lastNaN,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.min(lastNaN,  mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.min(lastNaN,  mIX);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
678	[BUG]  [BUGGY]  Class  <?>  lastNaN  =  Math.abs(mIX  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Class  <?>  lastNaN  =  Math.abs(mIX  +  1);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Class  <?>  lastNaN  =  Math.abs(mIX  +  1);	  Class    <?>    lastNaN    =    Math.abs(lastNaN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
679	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
680	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currY  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
681	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  currY  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  currY  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
682	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currX  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currX  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  currX  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
683	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  +  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
684	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >=  GoalType.MAXIMIZE)  >>  (currY  +  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    +    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
685	[BUG]  [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  prevY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  prevY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  goalType  ==  GoalType.MAXIMIZE)  >>  (currX  +  prevY)))  {	  while(i    >    0    &&    ((    goalType    ==    GoalType.MAXIMIZE)    >>    (currY    +    prevY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
686	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  optimiser.getIntValue(j,  mIX);	  Integer    i    =    optimiser.getIntValue(j,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
687	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (mIY  >  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
688	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
689	[BUG]  [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(goalType  ==  GoalType.MAXIMIZE)!=  (currY  >  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
690	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (mIY  >  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (mIY  >  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (mIY  >  mIX))  {	  while(i    <    0    ||(goalType    ==    GoalType.MAXIMIZE)!=    (currY    >    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
691	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)!=  (currY  >  GoalType.MAXIMIZE))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
692	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (currY  +  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (currY  +  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (currY  +  mIX))  {	  while(i    <    0    ||(mIX    >    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
693	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)  >>  (currY  <  prevY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)  >>  (currY  <  prevY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  goalType.MAXIMIZE)  >>  (currY  <  prevY))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
694	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  >  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  >  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  goalType.MAXIMIZE)!=  (currY  >  mIY))  {	  while(i    >    0    &&    (currY    <    =    goalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
695	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currX;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currX;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optimaValues[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
696	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i++)  {  optimaValues[i]  =  currY;  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    0;    i++)    {    optimaValues[i]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
697	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  max;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    1;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
698	[BUG]  [BUGGY]  double  mIX  =  currX  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX  +  1;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX  +  1;	  double    mIX    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
699	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  <  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)  >=  (currY  <  mIY)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
700	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY)))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currType  ==  GoalType.MAXIMIZE)!=  (currY  <  mIY)))  {	  while(i    >=    0    &&    ((    currType    ==    GoalType.MAXIMIZE)    >>    (currY    <    mIY)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
701	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  lastNaN;  ++i)  {  max  =  Math.min(mIX,  max);  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    max    =    Math.min(mIX,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
702	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  max  =  Math.min(mIX,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  max  =  Math.min(mIX,  max);  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  max  =  Math.min(mIX,  max);  }	  if(goalType    ==    GoalType.MAXIMIZE)    {    for(int    i    =    j    -    1;    i    >=    lastNaN;    ++i)    {    max    =    Math.min(mIX,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
703	[BUG]  [BUGGY]  double  mIX  =  currX[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIX  =  currX[j  -  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIX  =  currX[j  -  1];	  double    mIX    =    currX[j];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
704	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX)-  lastNaN;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX)-  lastNaN;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  mIX)-  lastNaN;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
705	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIY)-  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIY)-  mIX;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  mIY)-  mIX;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
706	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX)-  max;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX)-  max;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  mIX)-  max;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
707	[BUG]  [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX)-  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  lastNaN  =  Math.min(lastNaN,  mIX)-  mIY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	lastNaN  =  Math.min(lastNaN,  mIX)-  mIY;	  lastNaN    =    Math.min(lastNaN,    lastNaN)-    lastNaN;    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
708	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  0;  i  <  mIX;  ++i)  {  if(mIY  >  max)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
709	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  min)  {  currY  =  optimaValues[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  min)  {  currY  =  optimaValues[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	for(int  i  =  1;  i  <  lastNaN;  ++i)  {  if(mIX  >  min)  {  currY  =  optimaValues[i];  }	  for(int    i    =    0;    i    <    lastNaN;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
710	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  <  =  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  <  =  goalType.MAXIMIZE)!=  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  <  =  goalType.MAXIMIZE)!=  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
711	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)  >>  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)  >>  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  goalType.MAXIMIZE)  >>  (currY  <  mIX))  {	  while(i    >    0    &&    (currX    >=    goalType.MAXIMIZE)!=    (currY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	148	None	replace
712	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  =  GoalType.MAXIMIZE)!=  (mIY  <  =  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
713	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  <  GoalType.MAXIMIZE)!=  (currY  <  =  mIX))  {	  while(i    >    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    =    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
714	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  currX))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  currX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  >=  GoalType.MAXIMIZE)!=  (currY  <  =  currX))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
715	[BUG]  [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currX  <  =  GoalType.MAXIMIZE)!=  (currY  <  =  mIY))  {	  while(i    >    0    &&    (currX    >=    GoalType.MAXIMIZE)!=    (currY    <    =    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
716	[BUG]  [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  (currY  >=  GoalType.MAXIMIZE)  >>  (currY  <  mIX))  {	  while(i    >=    0    &&    (currY    >=    GoalType.MAXIMIZE)!=    (mIY    <    mIX))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
717	[BUG]  [BUGGY]  int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  0;  i  <  limit;  ++i)  {  if(mIX  >  max)  {  currY  =  optima[i];  }	  for(int    i    =    0;    i    <    limit;    ++i)    {    if(mIX    >    max)    {    currY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
718	[BUG]  [BUGGY]  while(i  >  0  &&  ((  currX  <  GoalType.MAXIMIZE)!=  (currY  >  0)))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  >  0  &&  ((  currX  <  GoalType.MAXIMIZE)!=  (currY  >  0)))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  >  0  &&  ((  currX  <  GoalType.MAXIMIZE)!=  (currY  >  0)))  {	  while(i    >    0    &&    ((    currX    ==    GoalType.MAXIMIZE)!=    (currY    <    mIX)))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
719	[BUG]  [BUGGY]  double  mIY  =  prevY  +  optimaValues[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  prevY  +  optimaValues[j  -  1];  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  prevY  +  optimaValues[j  -  1];	  double    mIY    =    optimaValues[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
720	[BUG]  [BUGGY]  double  mIY  =  optimaValues[j  -  1]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  double  mIY  =  optimaValues[j  -  1]  +  prevY;  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	double  mIY  =  optimaValues[j  -  1]  +  prevY;	  double    mIY    =    optimaValues[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
721	[BUG]  [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[0];  }  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	int  i  =  1;  i  <  prevY;  ++i)  {  if(mIX  >  max)  {  currY  =  optimaValues[0];  }	  int    i    =    0;    i    <    prevY;    ++i)    {    if(mIX    >    max)    {    currY    =    optimaValues[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
722	[BUG]  [BUGGY]  Integer  i  =  generator.getInt(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  Integer  i  =  generator.getInt(mIX);  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	Integer  i  =  generator.getInt(mIX);	  Integer    i    =    optimiser.getInt(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
723	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + ",  max  ' "  +  max  + ",  max  ' ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + ",  max  ' "  +  max  + ",  max  ' ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + ",  max  ' "  +  max  + ",  max  ' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
724	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + ",  max  ' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + ",  max  ' ");  [BUGGY]      while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + ",  max  ' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevY    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
725	[BUG]  [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(mIX  >  GoalType.MAXIMIZE)  >>  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
726	[BUG]  [BUGGY]  while(i  <  0  ||(currX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];      [BUGGY]  while(i  <  0  ||(currX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	while(i  <  0  ||(currX  >  GoalType.MAXIMIZE)!=  (currY  <  mIY))  {	  while(i    <    0    ||(mIX    >=    GoalType.MAXIMIZE)!=    (currY    <    mIY))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
