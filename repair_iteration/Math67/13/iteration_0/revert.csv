projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while((i>=0)&&((goalType==GoalType.MAXIMIZE)^(currY<mIY))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>=0&&((goalType==GoalType.MAXIMIZE)!=(currY+mIX))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>=0&&((goalType==GoalType.MAXIMIZE)>>(currY+mIX))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>=0&&((goalType==GoalType.MAXIMIZE)!=(prevY+mIX))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>=0&&((goalType==GoalType.MAXIMIZE)>>(prevY+mIX))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283inti=j-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283doublemIY=optimaValues[j];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283doublemIY=optimaValues[i];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283IntegermIY=bound1<<max;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283doublemIX=optima[j];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>0&&(currY>=GoalType.MAXIMIZE)!=(currY<mIY)){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>0&&(currY>=goalType.MAXIMIZE)!=(currY<mIY)){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>=0&&(currX>=GoalType.MAXIMIZE)!=(currY<mIY)){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>0&&(currY>=GoalType.MAXIMIZE)!=(mIY<mIX)){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283for(inti=0;i<lastNaN;++i){if(mIX>max){currY=optima[i];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283for(inti=0;i<prevY;++i){if(mIX>max){currY=optimaValues[i];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283for(inti=0;i<prevY;++i){if(mIX>max){currY=optima[i];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283for(inti=0;i<prevY;++i){if(mIX>max){currY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>0&&((goalType==GoalType.MAXIMIZE)!=(currY<mIY))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>0&&((goalType==GoalType.MAXIMIZE)>>(currY<mIY))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i<0||(goalType==GoalType.MAXIMIZE)!=(currY<mIY)){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283while(i>0&&((currType==GoalType.MAXIMIZE)>>(currY<mIY))){
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283if(j>0){for(inti=j-1;j<lastNaN;++j){currX=currX;currY=optima[j];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283if(j>0){for(inti=j-1;i>=0;++i){currX=currX;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283if(j>0){for(inti=j-1;j>=0;++j){currX=currX;currY=optima[j];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java283if(j>0){for(inti=j-1;i<mIX;++i){currY=optima[i];}
