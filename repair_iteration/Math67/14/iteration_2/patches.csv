bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  mIX  =  bound2  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound2  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound2  +  prevY;	  Integer    mIX    =    prevY    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
2	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  +  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  +  currX;	  int    mIX    =    optima[i    -    1]    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
3	[BUG]  [BUGGY]  int  mIX  =  optima[i  -  1]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  -  1]  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  -  1]  +  prevY;	  int    mIX    =    optima[i    -    1]    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
4	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  min;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  +  min;	  Integer    mIX    =    optima[j    -    1]    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
5	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  *  max;	  Integer    mIX    =    optima[j    -    1]    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
6	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  max  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  max  +  min;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  +  max  +  min;	  Integer    mIX    =    optima[j    -    1]    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
7	[BUG]  [BUGGY]  int  j  =  currY  -  1  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  j  =  currY  -  1  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  j  =  currY  -  1  +  prevY;	  int    j    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
8	[BUG]  [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(i  <  min)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(i  <  min)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    <    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
9	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  max;  mIY  =  min;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  max;  mIY  =  min;	  if(mIX    <    min)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
10	[BUG]  [BUGGY]  int  j  =  i  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  j  =  i  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  j  =  i  -  1;	  int    j    =    lastNaN    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
11	[BUG]  [BUGGY]  double  mIX  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optimaValues[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optimaValues[i  +  1];	  int    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
12	[BUG]  [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  min;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  min;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optimaValues[i  +  1]  -  min;	  int    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
13	[BUG]  [BUGGY]  Integer  mIX  =  bound2  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound2  +  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound2  +  currX;	  Integer    mIX    =    currX    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
14	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX  +  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX  +  bound2;	  Integer    mIX    =    currX    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
15	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX  +  prevY;	  Integer    mIX    =    currX    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
16	[BUG]  [BUGGY]  optima[i  +  3]  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  optima[i  +  3]  =  currY;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	optima[i  +  3]  =  currY;	  optima[i    +    3]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
17	[BUG]  [BUGGY]  Integer  mIX  =  currX[j  -  1]  +  optima;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX[j  -  1]  +  optima;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX[j  -  1]  +  optima;	  Integer    mIX    =    optima[j    -    1]    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
18	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  *  currX;	  Integer    mIX    =    optima[j    -    1]    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
19	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  -  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  -  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  -  bound2;	  int    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
20	[BUG]  [BUGGY]  int  mIX  =  bound1[i  +  1]  -  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound1[i  +  1]  -  optimaValues[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound1[i  +  1]  -  optimaValues[i];	  int    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
21	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  /  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  /  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  /  bound1;	  int    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
22	[BUG]  [BUGGY]  int  mIX  =  bound2[i  +  1]  -  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound2[i  +  1]  -  optimaValues[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound2[i  +  1]  -  optimaValues[i  +  1];	  int    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
23	[BUG]  [BUGGY]  Integer  mIX  =  currY  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY  +  prevY;	  Integer    mIX    =    currY    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
24	[BUG]  [BUGGY]  int  mIX  =  min[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  min[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  min[i  -  1];	  int    mIX    =    max[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
25	[BUG]  [BUGGY]  int  mIX  =  max[i  -  1]  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  max[i  -  1]  +  min;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  max[i  -  1]  +  min;	  int    mIX    =    max[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
26	[BUG]  [BUGGY]  int  mIX  =  max[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  max[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  max[i  +  1];	  int    mIX    =    max[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
27	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX  +  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX  +  max;	  Integer    mIX    =    max    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
28	[BUG]  [BUGGY]  Integer  mIX  =  min  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  min  +  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  min  +  currY;	  Integer    mIX    =    max    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
29	[BUG]  [BUGGY]  Integer  mIX  =  currY  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY  +  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY  +  max;	  Integer    mIX    =    max    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
30	[BUG]  [BUGGY]  Integer  mIX  =  prevY  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY  +  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY  +  max;	  Integer    mIX    =    max    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
31	[BUG]  [BUGGY]  mIX  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  optima[i];	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
32	[BUG]  [BUGGY]  Integer  mIX  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY;	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
33	[BUG]  [BUGGY]  Integer  mIX  =  bound1[j];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound1[j];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound1[j];	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
34	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  with  max  value: "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  with  max  value: "  +  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  currX  + "'  with  max  value: "  +  max);	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
35	[BUG]  [BUGGY]  Integer  mIX  =  min.readInt();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  min.readInt();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  min.readInt();	  Integer    mIX    =    max.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
36	[BUG]  [BUGGY]  Integer  i  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  i  =  currX  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  i  =  currX  -  1;	  Integer    i    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
37	[BUG]  [BUGGY]  double  mIX  =  prevY[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  prevY[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  prevY[i  -  1];	  double    mIX    =    optima[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
38	[BUG]  [BUGGY]  double  mIX  =  optimisera[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optimisera[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optimisera[i  -  1];	  double    mIX    =    optima[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
39	[BUG]  [BUGGY]  mIX  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  optima[i  +  1];	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
40	[BUG]  [BUGGY]  Integer  mIX  =  bound1[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound1[j  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound1[j  +  1];	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
41	[BUG]  [BUGGY]  Integer  mIX  =  currY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY[i  +  1];	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
42	[BUG]  [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(mIX  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(mIX  >=  min)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    >=    max)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
43	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(i  >=  0)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(i  >=  0)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    >=    max)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
44	[BUG]  [BUGGY]  if(i  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(i  >=  min)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(i  >=  min)  {  mIX  =  max;  mIY  =  max;  }	  if(mIX    >=    max)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
45	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  <  <  0xff;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  <  <  0xff;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  <  <  0xff;	  Integer    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
46	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  *  0xff;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  *  0xff;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  *  0xff;	  Integer    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
47	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  |  0xff;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  |  0xff;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  |  0xff;	  Integer    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
48	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  currY  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  currY  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  +  currY  +  prevY;	  Integer    mIX    =    optima[j    -    1]    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
49	[BUG]  [BUGGY]  Integer  mIX  =  curr[j  -  1]  +  optimaValues[j];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  curr[j  -  1]  +  optimaValues[j];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  curr[j  -  1]  +  optimaValues[j];	  Integer    mIX    =    optima[j    -    1]    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
50	[BUG]  [BUGGY]  Integer  mIX  =  currX[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX[i  -  1];	  Integer    mIX    =    currX[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
51	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  -  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  -  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  -  currY;	  int    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
52	[BUG]  [BUGGY]  int  mIX  =  currX[i  +  1]  -  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  currX[i  +  1]  -  optimaValues[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  currX[i  +  1]  -  optimaValues[i];	  int    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
53	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  -  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  -  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  -  prevY;	  int    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
54	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  /  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  /  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  /  currX;	  int    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
55	[BUG]  [BUGGY]  int  mIX  =  prevY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  prevY[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  prevY[i  +  1];	  int    mIX    =    currY[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
56	[BUG]  [BUGGY]  int  mIX  =  currX[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  currX[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  currX[i  +  1];	  int    mIX    =    currY[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
57	[BUG]  [BUGGY]  double  mIX  =  currY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  currY[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  currY[i  +  1];	  int    mIX    =    currY[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
58	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX,  mIY);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
59	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX,  mY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX,  mY);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
60	[BUG]  [BUGGY]  int  count  =  Math.max(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.max(mIX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.max(mIX,  currY);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
61	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX,  prevY);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
62	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  min;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(i  >  0)  {  mIX  =  min;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(i  >  0)  {  mIX  =  min;  mIY  =  max;  }	  if(mIX    >    max)    {    mIX    =    min;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
63	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  min;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(mIX  <  min)  {  mIX  =  min;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(mIX  <  min)  {  mIX  =  min;  mIY  =  max;  }	  if(mIX    >    max)    {    mIX    =    min;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
64	[BUG]  [BUGGY]  Integer  mIX  =  currY  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY  +  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY  +  bound2;	  Integer    mIX    =    bound2    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
65	[BUG]  [BUGGY]  Integer  mIX  =  optimiza[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimiza[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimiza[i  +  1];	  Integer    mIX    =    optimisera[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
66	[BUG]  [BUGGY]  Integer  mIX  =  optimaValues[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimaValues[i  +  2];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimaValues[i  +  2];	  Integer    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
67	[BUG]  [BUGGY]  Integer  mIX  =  prevY[j  -  1]  +  optima;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY[j  -  1]  +  optima;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY[j  -  1]  +  optima;	  Integer    mIX    =    optima[j    -    1]    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
68	[BUG]  [BUGGY]  Integer  mIX  =  currX.readInt()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX.readInt()  +  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX.readInt()  +  1;	  Integer    mIX    =    currX.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
69	[BUG]  [BUGGY]  Integer  mIX  =  currX.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX.intValue();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX.intValue();	  Integer    mIX    =    currX.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
70	[BUG]  [BUGGY]  double  mIX  =  optima[i  +  1]  &  0xff;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  +  1]  &  0xff;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  +  1]  &  0xff;	  int    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
71	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  -  0xff;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  -  0xff;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  -  0xff;	  int    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
72	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  &  4;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  &  4;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  &  4;	  int    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
73	[BUG]  [BUGGY]  final  int  count  =  Math.min(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  count  =  Math.min(mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  count  =  Math.min(mIX,  mIY);	  final    int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
74	[BUG]  [BUGGY]  final  int  count  =  Math.min(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  count  =  Math.min(mIX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  count  =  Math.min(mIX,  prevY);	  final    int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
75	[BUG]  [BUGGY]  final  int  count  =  Math.min(mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  count  =  Math.min(mIX,  mY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  count  =  Math.min(mIX,  mY);	  final    int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
76	[BUG]  [BUGGY]  final  int  count  =  Math.max(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  count  =  Math.max(mIX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  count  =  Math.max(mIX,  currY);	  final    int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
77	[BUG]  [BUGGY]  Integer  i  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  i  =  max  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  i  =  max  -  1;	  Integer    i    =    lastNaN    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
78	[BUG]  [BUGGY]  int  mIX  =  prevY[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  prevY[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  prevY[j  -  1];	  int    mIX    =    optima[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
79	[BUG]  [BUGGY]  int  mIX  =  max[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  max[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  max[j  -  1];	  int    mIX    =    optima[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
80	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  -  prevY,  max);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
81	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  -  currY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  -  currY,  prevY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
82	[BUG]  [BUGGY]  int  count  =  Math.min(max  -  mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(max  -  mIX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(max  -  mIX,  currY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
83	[BUG]  [BUGGY]  int  i  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  i  =  currX  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  i  =  currX  -  1;	  int    i    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
84	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  mIX;  mIY  =  mIY;	  mIX    =    max;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
85	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  max;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(i  >  0)  {  mIX  =  max;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(i  >  0)  {  mIX  =  max;  mIY  =  max;  }	  mIX    =    max;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
86	[BUG]  [BUGGY]  int  i  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  i  =  max  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  i  =  max  -  1;	  int    i    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
87	[BUG]  [BUGGY]  double  mIX  =  optima[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  +  2];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  +  2];	  double    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
88	[BUG]  [BUGGY]  double  mIX  =  optimisera[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optimisera[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optimisera[i  +  1];	  double    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
89	[BUG]  [BUGGY]  double  mIX  =  optima[i  +  3];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  +  3];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  +  3];	  double    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
90	[BUG]  [BUGGY]  final  int  i  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  i  =  prevY  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  i  =  prevY  -  1;	  final    int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
91	[BUG]  [BUGGY]  final  int  i  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  i  =  currY  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  i  =  currY  -  1;	  final    int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
92	[BUG]  [BUGGY]  final  int  i  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  i  =  lastNaN  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  i  =  lastNaN  -  1;	  final    int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
93	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  +  prevY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  +  prevY,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  +  prevY,  max);	  int    count    =    Math.min(mIX    +    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
94	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  +  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  +  currY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  +  currY,  prevY);	  int    count    =    Math.min(mIX    +    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
95	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  +  prevY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  +  prevY,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  +  prevY,  mIY);	  int    count    =    Math.min(mIX    +    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
96	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  +  mIY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  +  mIY,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  +  mIY,  max);	  int    count    =    Math.min(mIX    +    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
97	[BUG]  [BUGGY]  int  mIX  =  optima[i  -  1]  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  -  1]  +  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  -  1]  +  bound2;	  int    mIX    =    optima[i    -    1]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
98	[BUG]  [BUGGY]  int  mIX  =  bound1[i  -  1]  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound1[i  -  1]  +  optimaValues[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound1[i  -  1]  +  optimaValues[i];	  int    mIX    =    optima[i    -    1]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
99	[BUG]  [BUGGY]  int  mIX  =  bound2[i  -  1]  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound2[i  -  1]  +  optimaValues[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound2[i  -  1]  +  optimaValues[i];	  int    mIX    =    optima[i    -    1]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
100	[BUG]  [BUGGY]  int  mIX  =  bound1[i  -  1]  +  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound1[i  -  1]  +  optima[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound1[i  -  1]  +  optima[i];	  int    mIX    =    optima[i    -    1]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
101	[BUG]  [BUGGY]  Integer  mIX  =  bound1  +  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound1  +  mIY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound1  +  mIY;	  Integer    mIX    =    bound1    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
102	[BUG]  [BUGGY]  Integer  mIX  =  max  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  max  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  max  +  prevY;	  Integer    mIX    =    bound1    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
103	[BUG]  [BUGGY]  Integer  mIX  =  currY[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY[i  -  1];	  Integer    mIX    =    currY[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
104	[BUG]  [BUGGY]  Integer  mIX  =  bound1[i  +  1]  -  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound1[i  +  1]  -  optimaValues[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound1[i  +  1]  -  optimaValues[i];	  Integer    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
105	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  -  bound2;	  Integer    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
106	[BUG]  [BUGGY]  Integer  mIX  =  bound2[i  +  1]  -  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound2[i  +  1]  -  optimaValues[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound2[i  +  1]  -  optimaValues[i];	  Integer    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
107	[BUG]  [BUGGY]  Integer  mIX  =  bound1[i  +  1]  -  optima;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound1[i  +  1]  -  optima;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound1[i  +  1]  -  optima;	  Integer    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
108	[BUG]  [BUGGY]  Integer  mIX  =  currY.readInt()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY.readInt()  +  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY.readInt()  +  1;	  Integer    mIX    =    in.readInt()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
109	[BUG]  [BUGGY]  Integer  mIX  =  max.readInt()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  max.readInt()  +  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  max.readInt()  +  1;	  Integer    mIX    =    in.readInt()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
110	[BUG]  [BUGGY]  Integer  mIX  =  min[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  min[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  min[j  -  1];	  Integer    mIX    =    max[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
111	[BUG]  [BUGGY]  Integer  mIX  =  max[j  -  1]  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  max[j  -  1]  +  min;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  max[j  -  1]  +  min;	  Integer    mIX    =    max[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
112	[BUG]  [BUGGY]  optima[i  +  3]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  optima[i  +  3]  =  currX;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	optima[i  +  3]  =  currX;	  optima[i    +    2]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
113	[BUG]  [BUGGY]  int  mIX  =  currY[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  currY[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  currY[i  -  1];	  int    mIX    =    prevY[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
114	[BUG]  [BUGGY]  Integer  mIX  =  currY.getInt();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY.getInt();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY.getInt();	  Integer    mIX    =    currY.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
115	[BUG]  [BUGGY]  Integer  mIX  =  prevY.readInt();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY.readInt();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY.readInt();	  Integer    mIX    =    currY.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
116	[BUG]  [BUGGY]  optima[i  +  1]  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  optima[i  +  1]  =  min;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	optima[i  +  1]  =  min;	  optima[i    +    1]    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
117	[BUG]  [BUGGY]  Integer  mIX  =  curr.getInt();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  curr.getInt();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  curr.getInt();	  Integer    mIX    =    curr.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
118	[BUG]  [BUGGY]  Integer  mIX  =  curr.readInt()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  curr.readInt()  +  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  curr.readInt()  +  1;	  Integer    mIX    =    curr.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
119	[BUG]  [BUGGY]  Integer  mIX  =  curr.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  curr.intValue();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  curr.intValue();	  Integer    mIX    =    curr.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
120	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  mIX;  mIY  =  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  mIX;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
121	[BUG]  [BUGGY]  mIX  =  mIY;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  mIY;  mIY  =  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  mIY;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
122	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  -  currY;	  Integer    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
123	[BUG]  [BUGGY]  Integer  mIX  =  currX[i  +  1]  -  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX[i  +  1]  -  optimaValues[i];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX[i  +  1]  -  optimaValues[i];	  Integer    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
124	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  /  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  /  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  /  currX;	  Integer    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
125	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  -  prevY;	  Integer    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
126	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  +  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  +  currY;	  int    mIX    =    optima[i    -    1]    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
127	[BUG]  [BUGGY]  int  mIX  =  optima[i  -  1]  +  currY  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  -  1]  +  currY  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  -  1]  +  currY  +  prevY;	  int    mIX    =    optima[i    -    1]    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
128	[BUG]  [BUGGY]  optima[i  +  3]  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  optima[i  +  3]  =  mIY;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	optima[i  +  3]  =  mIY;	  optima[i    +    2]    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
129	[BUG]  [BUGGY]  optima[i  +  2]  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  optima[i  +  2]  =  currY;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	optima[i  +  2]  =  currY;	  optima[i    +    2]    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
130	[BUG]  [BUGGY]  int  j  =  bound1  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  j  =  bound1  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  j  =  bound1  -  1;	  int    j    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
131	[BUG]  [BUGGY]  int  j  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  j  =  max  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  j  =  max  -  1;	  int    j    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
132	[BUG]  [BUGGY]  int  mIX  =  bound1[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound1[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound1[i  +  1];	  int    mIX    =    currY[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
133	[BUG]  [BUGGY]  int  mIX  =  curra[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  curra[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  curra[i  +  1];	  int    mIX    =    currY[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
134	[BUG]  [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optimaValues[i  +  1]  -  bound1;	  int    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
135	[BUG]  [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optimaValues[i  +  1]  -  bound2;	  int    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
136	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  +  currY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  +  currY,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  +  currY,  mIY);	  int    count    =    Math.min(mIX    +    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
137	[BUG]  [BUGGY]  double  mIX  =  optima[i  +  1]  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  +  1]  -  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  +  1]  -  bound1;	  double    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
138	[BUG]  [BUGGY]  double  mIX  =  optima[i  +  1]  *  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  +  1]  *  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  +  1]  *  bound1;	  double    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
139	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  +  bound1;	  Integer    mIX    =    optima[j    -    1]    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
140	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  +  bound2;	  Integer    mIX    =    optima[j    -    1]    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
141	[BUG]  [BUGGY]  optima[i  +  2]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  optima[i  +  2]  =  bound1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	optima[i  +  2]  =  bound1;	  optima[i    +    2]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
142	[BUG]  [BUGGY]  Integer  mIX  =  prevY  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY  +  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY  +  bound2;	  Integer    mIX    =    prevY    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
143	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  *  currY;	  Integer    mIX    =    optima[j    -    1]    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
144	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  currY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX,  currY  +  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX,  currY  +  1);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
145	[BUG]  [BUGGY]  int  mIX  =  optima[i  -  1]  *  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  -  1]  *  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  -  1]  *  currX;	  int    mIX    =    optima[i    -    1]    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
146	[BUG]  [BUGGY]  double  mIX  =  optima[i  -  1]  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  -  1]  +  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  -  1]  +  bound1;	  double    mIX    =    optima[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
147	[BUG]  [BUGGY]  double  mIX  =  optima[i  -  1]  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  -  1]  +  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  -  1]  +  currX;	  double    mIX    =    optima[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
148	[BUG]  [BUGGY]  int  mIX  =  optima[i  -  1]  *  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  -  1]  *  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  -  1]  *  bound1;	  int    mIX    =    optima[i    -    1]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
149	[BUG]  [BUGGY]  final  int  i  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  i  =  max  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  i  =  max  -  1;	  final    int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
150	[BUG]  [BUGGY]  int  mIX  =  bound1[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound1[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound1[i  -  1];	  int    mIX    =    prevY[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
151	[BUG]  [BUGGY]  mIX  =  min  +  1;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  min  +  1;  mIY  =  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  min  +  1;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
152	[BUG]  [BUGGY]  mIX  =  prevY;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  prevY;  mIY  =  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  prevY;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
153	[BUG]  [BUGGY]  Integer  mIX  =  currX[j  -  1]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX[j  -  1]  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX[j  -  1]  +  prevY;	  Integer    mIX    =    currX[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
154	[BUG]  [BUGGY]  int  mIX  =  optima[j  -  1]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[j  -  1]  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[j  -  1]  +  prevY;	  int    mIX    =    optima[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
155	[BUG]  [BUGGY]  int  mIX  =  optima[j  -  1]  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[j  -  1]  +  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[j  -  1]  +  currY;	  int    mIX    =    optima[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
156	[BUG]  [BUGGY]  final  int  count  =  Math.min(mIX,  currY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  count  =  Math.min(mIX,  currY  +  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  count  =  Math.min(mIX,  currY  +  1);	  final    int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
157	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  /  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  /  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  /  bound1;	  Integer    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
158	[BUG]  [BUGGY]  Integer  mIX  =  max  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  max  +  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  max  +  bound1;	  Integer    mIX    =    max    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
159	[BUG]  [BUGGY]  int  count  =  Math.min(mIY  -  prevY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIY  -  prevY,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIY  -  prevY,  max);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
160	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  /  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  /  currY,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  /  currY,  max);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
161	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
162	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  mIX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  mIX  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  mIX  =  optima[i];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
163	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
164	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optimisea[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optimisea[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optimisea[i];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
165	[BUG]  [BUGGY]  Integer  mIX  =  curra[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  curra[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  curra[j  -  1];	  Integer    mIX    =    currY[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
166	[BUG]  [BUGGY]  Integer  mIX  =  currY[j  -  1]  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY[j  -  1]  +  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY[j  -  1]  +  prevY;	  Integer    mIX    =    currY[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
167	[BUG]  [BUGGY]  int  i  =  min  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  i  =  min  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  i  =  min  -  1;	  int    i    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
168	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  max;  mIY  =  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  max;  mIY  =  currY;	  mIX    =    max;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
169	[BUG]  [BUGGY]  mIX  =  max;  mIY  =  max  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  max;  mIY  =  max  +  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  max;  mIY  =  max  +  bound2;	  mIX    =    max;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
170	[BUG]  [BUGGY]  Integer  mIX  =  currX.getInt();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX.getInt();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX.getInt();	  Integer    mIX    =    currX.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
171	[BUG]  [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  -  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimaValues[i  +  1]  -  bound1;	  Integer    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
172	[BUG]  [BUGGY]  Integer  mIX  =  optimiseraValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimiseraValues[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimiseraValues[i  +  1];	  Integer    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
173	[BUG]  [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  -  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  -  bound2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimaValues[i  +  1]  -  bound2;	  Integer    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
174	[BUG]  [BUGGY]  Integer  mIX  =  prevY[j  -  1]  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY[j  -  1]  +  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY[j  -  1]  +  currX;	  Integer    mIX    =    prevY[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
175	[BUG]  [BUGGY]  Integer  mIX  =  prevY[j  -  1]  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY[j  -  1]  +  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY[j  -  1]  +  max;	  Integer    mIX    =    prevY[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
176	[BUG]  [BUGGY]  int  mIX  =  bound1[i  +  1]  -  optima;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  bound1[i  +  1]  -  optima;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  bound1[i  +  1]  -  optima;	  int    mIX    =    optima[i    +    1]    -    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
177	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  <  <  0xff;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  <  <  0xff;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  <  <  0xff;	  int    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
178	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  &  0xff  -  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  &  0xff  -  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  &  0xff  -  bound1;	  int    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
179	[BUG]  [BUGGY]  Integer  mIX  =  bound1  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  bound1  +  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  bound1  +  max;	  Integer    mIX    =    bound1    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
180	[BUG]  [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  &  0xff;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  &  0xff;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimaValues[i  +  1]  &  0xff;	  Integer    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
181	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  &  2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  &  2;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  &  2;	  Integer    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
182	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(mIX  >=  max)  {  mIX  =  min;  mIY  =  max;  }	  if(mIX    >=    max)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
183	[BUG]  [BUGGY]  Preconditions.checkState(mIX  >=  max);  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Preconditions.checkState(mIX  >=  max);  mIY  =  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Preconditions.checkState(mIX  >=  max);  mIY  =  max;	  if(mIX    >=    max)    {    mIX    =    max;    mIY    =    max;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
184	[BUG]  [BUGGY]  Integer  mIX  =  optimizera[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimizera[i  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimizera[i  +  1];	  Integer    mIX    =    optimisera[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
185	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
186	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
187	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  j  -  1;  i  >=  0;  ++i)  {  mIX  =  optima[i  +  1];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
188	[BUG]  [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optimisea[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optimisea[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  max)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optimisea[i  +  1];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
189	[BUG]  [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  -  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimaValues[i  +  1]  -  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimaValues[i  +  1]  -  currX;	  Integer    mIX    =    optima[i    +    1]    -    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
190	[BUG]  [BUGGY]  Integer  mIX  =  optima.readInt();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima.readInt();  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima.readInt();	  Integer    mIX    =    curr.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
191	[BUG]  [BUGGY]  Integer  mIX  =  currY.parseInt(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currY.parseInt(mIX);  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currY.parseInt(mIX);	  Integer    mIX    =    currY.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
192	[BUG]  [BUGGY]  int  i  =  bound1  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  i  =  bound1  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  i  =  bound1  -  1;	  int    i    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
193	[BUG]  [BUGGY]  int  mIX  =  optima[j  -  1]  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[j  -  1]  +  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[j  -  1]  +  bound1;	  int    mIX    =    optima[i    -    1]    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
194	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  /  currY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  /  currY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  /  currY;	  Integer    mIX    =    optima[j    -    1]    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
195	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  *  2];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  *  2];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  *  2];	  Integer    mIX    =    optima[i    +    2];    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
196	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  3];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  3];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  3];	  Integer    mIX    =    optima[i    +    2];    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
197	[BUG]  [BUGGY]  Integer  mIX  =  prevX[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevX[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevX[j  -  1];	  Integer    mIX    =    prevY[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
198	[BUG]  [BUGGY]  int  mIX  =  curr[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  curr[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  curr[i  -  1];	  int    mIX    =    max[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
199	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  -  prevY,  mIY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
200	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  currY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.min(mIX  -  currY,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.min(mIX  -  currY,  mIY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
201	[BUG]  [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optimaValues[i  +  1]  -  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optimaValues[i  +  1]  -  currX;	  int    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
202	[BUG]  [BUGGY]  double  mIX  =  optima[i  +  1]  -  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[i  +  1]  -  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[i  +  1]  -  currX;	  double    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
203	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  /  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  /  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  /  currX;	  Integer    mIX    =    optima[j    -    1]    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
204	[BUG]  [BUGGY]  Integer  mIX  =  currA[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currA[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currA[j  -  1];	  Integer    mIX    =    currY[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
205	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
206	[BUG]  [BUGGY]  if(mIX  >=  currX)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(mIX  >=  currX)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(mIX  >=  currX)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
207	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  0)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  0)  {  for(int  i  =  lastNaN  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i  +  1];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
208	[BUG]  [BUGGY]  int  count  =  Math.max(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  count  =  Math.max(mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  count  =  Math.max(mIX,  mIY);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
209	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  &  0xff  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  &  0xff  -  1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  &  0xff  -  1;	  int    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
210	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1]  &  0xff  &  min;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  +  1]  &  0xff  &  min;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  +  1]  &  0xff  &  min;	  int    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
211	[BUG]  [BUGGY]  final  int  count  =  Math.max(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  final  int  count  =  Math.max(mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	final  int  count  =  Math.max(mIX,  mIY);	  final    int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
212	[BUG]  [BUGGY]  optima[i  +  0]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  optima[i  +  0]  =  mIX;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	optima[i  +  0]  =  mIX;	  optima[i    +    3]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
213	[BUG]  [BUGGY]  Integer  mIX  =  currX.readInt()  *  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX.readInt()  *  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX.readInt()  *  max;	  Integer    mIX    =    currX.readInt();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
214	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  i;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX  +  i;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX  +  i;	  Integer    mIX    =    currX    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
215	[BUG]  [BUGGY]  Integer  mIX  =  currX  +  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX  +  mIY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX  +  mIY;	  Integer    mIX    =    currX    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
216	[BUG]  [BUGGY]  double  mIX  =  optima[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  double  mIX  =  optima[j  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	double  mIX  =  optima[j  -  1];	  double    mIX    =    optima[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
217	[BUG]  [BUGGY]  int  mIX  =  prevX[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  prevX[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  prevX[i  -  1];	  int    mIX    =    prevY[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
218	[BUG]  [BUGGY]  int  mIX  =  currX[i  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  currX[i  -  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  currX[i  -  1];	  int    mIX    =    prevY[i    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
219	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  &  4;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[i  +  1]  &  4;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[i  +  1]  &  4;	  Integer    mIX    =    optima[i    +    1]    &    0xff;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
220	[BUG]  [BUGGY]  Integer  mIX  =  optimaValues[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optimaValues[j  +  1];  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optimaValues[j  +  1];	  Integer    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
221	[BUG]  [BUGGY]  Integer  mIX  =  max  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  max  +  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  max  +  currX;	  Integer    mIX    =    max    +    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
222	[BUG]  [BUGGY]  int  mIX  =  optima[i  -  1]  /  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[i  -  1]  /  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[i  -  1]  /  currX;	  int    mIX    =    optima[i    -    1]    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
223	[BUG]  [BUGGY]  Integer  mIX  =  currX[j  -  1]  +  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  currX[j  -  1]  +  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  currX[j  -  1]  +  max;	  Integer    mIX    =    currX[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
224	[BUG]  [BUGGY]  if(mIX  >=  currX)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(mIX  >=  currX)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(mIX  >=  currX)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
225	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  <  0;  ++i)  {  mIX  =  optima[i];  }	  if(mIX    >    currX)    {    for(int    i    =    j    -    1;    i    <    0;    ++i)    {    mIX    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
226	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  *  prevY;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  *  prevY;	  Integer    mIX    =    optima[j    -    1]    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
227	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  +  mIX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  +  mIX;	  Integer    mIX    =    optima[j    -    1]    +    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
228	[BUG]  [BUGGY]  Integer  mIX  =  mIX  +  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  mIX  +  bound1;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  mIX  +  bound1;	  Integer    mIX    =    prevY    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
229	[BUG]  [BUGGY]  Integer  mIX  =  prevY  +  i;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY  +  i;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY  +  i;	  Integer    mIX    =    prevY    +    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
230	[BUG]  [BUGGY]  Integer  mIX  =  prevY  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  prevY  +  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  prevY  +  currX;	  Integer    mIX    =    bound1    +    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
231	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1]  /  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  Integer  mIX  =  optima[j  -  1]  /  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	Integer  mIX  =  optima[j  -  1]  /  max;	  Integer    mIX    =    optima[j    -    1]    +    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
232	[BUG]  [BUGGY]  int  mIX  =  optima[j  -  1]  +  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  int  mIX  =  optima[j  -  1]  +  currX;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	int  mIX  =  optima[j  -  1]  +  currX;	  int    mIX    =    optima[j    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
233	[BUG]  [BUGGY]  mIX  =  mIX  +  min;  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {      [BUGGY]  mIX  =  mIX  +  min;  mIY  =  max;  [BUGGY]      optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	mIX  =  mIX  +  min;  mIY  =  max;	  mIX    =    min;    mIY    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
