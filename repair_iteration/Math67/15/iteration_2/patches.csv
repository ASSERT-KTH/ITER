bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  j  =  bound1  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  j  =  bound1  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  bound1  -  1;	  int    j    =    currX    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
2	[BUG]  [BUGGY]  Integer  mIX  =  curr[i  +  1];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  curr[i  +  1];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  curr[i  +  1];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
3	[BUG]  [BUGGY]  int  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
4	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  max;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  1];  mIY  =  max;	  Integer    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
5	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  for  a  goal  type. ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  for  a  goal  type. ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  for  a  goal  type. ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    for    a    goal    type.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
6	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  for  a  goal  type.. ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  for  a  goal  type.. ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  for  a  goal  type.. ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    for    a    goal    type.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
7	[BUG]  [BUGGY]  vices.add(optima[i  +  1]  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[i  +  1]  -  min);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i  +  1]  -  min);	  vices.add(optima[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
8	[BUG]  [BUGGY]  vices.add(optima[i  +  1]  *  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[i  +  1]  *  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i  +  1]  *  max);	  vices.add(optima[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
9	[BUG]  [BUGGY]  vices.add(optima[i  +  1]  /  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[i  +  1]  /  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i  +  1]  /  max);	  vices.add(optima[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
10	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
11	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
12	[BUG]  [BUGGY]  if(i  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    <    =    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
13	[BUG]  [BUGGY]  if(i  <  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  <  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  <  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    <    =    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
14	[BUG]  [BUGGY]  if(mIX  <  =  max)  {  mIX  =  min;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  <  =  max)  {  mIX  =  min;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  =  max)  {  mIX  =  min;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    <    =    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
15	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
16	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
17	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
18	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  max;  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
19	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type. ");  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type. ");  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  a  goal  type. ");	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
20	[BUG]  [BUGGY]  vices.add(mIX  -  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  -  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  -  currY);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
21	[BUG]  [BUGGY]  vices.add(prevY  -  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(prevY  -  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(prevY  -  mIX);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
22	[BUG]  [BUGGY]  vices.add(max  -  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(max  -  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(max  -  prevY);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
23	[BUG]  [BUGGY]  vices.add(mIX  -  prevY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  -  prevY  +  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  -  prevY  +  1);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
24	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  is  not  supported ");  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  is  not  supported ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  is  not  supported ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    and    '   "    +    max    +   "'    is    not    supported   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
25	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  is  not  supported ");  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  is  not  supported ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  is  not  supported ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    and    '   "    +    max    +   "'    is    not    supported   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
26	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  is  not  supported. ");  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  is  not  supported. ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  is  not  supported. ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    and    '   "    +    max    +   "'    is    not    supported   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
27	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  is  not  supported. ");  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  is  not  supported. ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  is  not  supported. ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    and    '   "    +    max    +   "'    is    not    supported   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
28	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY  ==  null);	  NeighborUtilities.checkArgument(mIX    >=    null);    NeighborUtilities.checkArgument(mIY    ==    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
29	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  ==  null);  NeighborUtilities.checkArgument(mIY  ==  null);	  NeighborUtilities.checkArgument(mIX    >=    null);    NeighborUtilities.checkArgument(mIY    ==    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
30	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  null);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  null);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  ==  null);  NeighborUtilities.checkArgument(mIY!=  null);	  NeighborUtilities.checkArgument(mIX    >=    null);    NeighborUtilities.checkArgument(mIY    ==    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
31	[BUG]  [BUGGY]  optima[i  +  1]  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[i  +  1]  =  max;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  max;	  optima[i    +    1]    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
32	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
33	[BUG]  [BUGGY]  Integer  i  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  currY  -  1;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  currY  -  1;	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
34	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev ",  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev ",  prevY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev ",  prevY);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
35	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
36	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
37	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  ==  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    ==    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
38	[BUG]  [BUGGY]  mIX  =  curr[0];  mIY  =  optima[1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  curr[0];  mIY  =  optima[1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  curr[0];  mIY  =  optima[1];	  mIX    =    optima[0];    mIY    =    optima[1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
39	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }	  mIX    =    optima[0];    mIY    =    optima[1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
40	[BUG]  [BUGGY]  mIX  =  prevY;  mIY  =  optima[1];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  prevY;  mIY  =  optima[1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  prevY;  mIY  =  optima[1];	  mIX    =    optima[0];    mIY    =    optima[1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
41	[BUG]  [BUGGY]  vice.addValue(prevY,  currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevY,  currX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevY,  currX,  currY);	  vice.addValue(currX,    currY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
42	[BUG]  [BUGGY]  vice.addValue(mIX,  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  currY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  currY,  prevY);	  vice.addValue(currX,    currY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
43	[BUG]  [BUGGY]  vice.addValue(mIX,  mIY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  mIY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  mIY,  prevY);	  vice.addValue(currX,    currY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
44	[BUG]  [BUGGY]  vice.addValue(mIX,  prevY,  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  prevY,  currX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  prevY,  currX);	  vice.addValue(currX,    currY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
45	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    <    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
46	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    <    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
47	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
48	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
49	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIY  =  bound1;  mIX  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIY  =  bound1;  mIX  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  bound1)  {  mIY  =  bound1;  mIX  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(j  ==  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(j  ==  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(j  ==  0);	  Preconditions.checkState(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(i  >  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(i  >  0);	  Preconditions.checkState(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(j!=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(j!=  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(j!=  0);	  Preconditions.checkState(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(j  >=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(j  >=  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(j  >=  0);	  Preconditions.checkState(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
54	[BUG]  [BUGGY]  int  i  =  bound1  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  i  =  bound1  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  bound1  -  1;	  int    i    =    currX    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkArgument(j  ==  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(j  ==  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(j  ==  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkArgument(i  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(i  >  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(i  >  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkArgument(j  >=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(j  >=  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(j  >=  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkArgument(j!=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(j!=  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(j!=  0);	  Preconditions.checkArgument(j    >    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
59	[BUG]  [BUGGY]  if(i  >  0)  {  mX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
60	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
61	[BUG]  [BUGGY]  int  i  =  prevX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  i  =  prevX  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  prevX  -  1;	  int    i    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
62	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
63	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
64	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
65	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
66	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  at  ' "  +  prevY  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  at  ' "  +  prevY  + "' ");  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  at  ' "  +  prevY  + "' ");	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    Math.min(mIX,    mIY);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
67	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  a  value. ");  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  a  value. ");  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  a  value. ");	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    Math.min(mIX,    mIY);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
68	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  at  ' "  +  currY  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  at  ' "  +  currY  + "' ");  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  at  ' "  +  currY  + "' ");	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    Math.min(mIX,    mIY);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
69	[BUG]  [BUGGY]  int  i  =  min  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  i  =  min  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  min  -  1;	  int    i    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
70	[BUG]  [BUGGY]  vices.add(mIX,  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX,  optima[i]);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  optima[i]);	  vices.add(optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
71	[BUG]  [BUGGY]  vices.add(optima[i]  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[i]  -  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i]  -  1);	  vices.add(optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
72	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
73	[BUG]  [BUGGY]  mIX  =  bound1;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  bound1;  mIY  =  bound2;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  bound1;  mIY  =  bound2;	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
74	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  min;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  max)  {  mIX  =  min;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  min;  mIY  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
75	[BUG]  [BUGGY]  if(mIX  >  min)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  min)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  min)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
76	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  and  ' "+prevY  + "'  is  not  supported. ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  and  ' "+prevY  + "'  is  not  supported. ");  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "'  and  ' "+prevY  + "'  is  not  supported. ");	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
77	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence(min,  min,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getConvergence(min,  min,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getConvergence(min,  min,  prevY);	  Convergence    ce    =    getConvergence(prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
78	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence(min,  prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getConvergence(min,  prevX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getConvergence(min,  prevX,  prevY);	  Convergence    ce    =    getConvergence(prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
79	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence(min,  max,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getConvergence(min,  max,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getConvergence(min,  max,  prevY);	  Convergence    ce    =    getConvergence(prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
80	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getConvergence(min,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getConvergence(min,  max);	  Convergence    ce    =    getConvergence(prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
81	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
82	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
83	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
84	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optimaValues[i  +  1]  =  bound2;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optimaValues[i  +  1]  =  bound2;	  optimaValues[i    +    1]    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
85	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
86	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
87	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
88	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
89	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
90	[BUG]  [BUGGY]  if(i  >  0)  {  mX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
91	[BUG]  [BUGGY]  Integer  mIX  =  curr[i];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  curr[i];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  curr[i];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[i];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
92	[BUG]  [BUGGY]  int  mIX  =  optima[i];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  mIX  =  optima[i];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  mIX  =  optima[i];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[i];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
93	[BUG]  [BUGGY]  Integer  mIX  =  currY[i];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  currY[i];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  currY[i];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[i];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
94	[BUG]  [BUGGY]  Integer  mIX  =  prevY;  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  prevY;  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  prevY;  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[i];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
95	[BUG]  [BUGGY]  optima[j  +  1]  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[j  +  1]  =  currY;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[j  +  1]  =  currY;	  optima[j    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
96	[BUG]  [BUGGY]  optima[j  +  1]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[j  +  1]  =  currX;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[j  +  1]  =  currX;	  optima[j    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
97	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "' ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
98	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  with  max  ' "  +  max  + "' ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(i  >=  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(i  >=  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(i  >=  0);	  Preconditions.checkState(i!=    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(i  ==  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(i  ==  0);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(i  ==  0);	  Preconditions.checkState(i!=    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
101	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "'. ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "'. ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "'. ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
102	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX  -  prevY,  max);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
103	[BUG]  [BUGGY]  int  count  =  Math.min(max  -  mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(max  -  mIX,  currY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(max  -  mIX,  currY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
104	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX  -  currY,  prevY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX  -  currY,  prevY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
105	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  +  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX  +  currY,  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX  +  currY,  max);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
106	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
107	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >=  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
108	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
109	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1  ||  mIY  <  bound2  ||  mIX  >  bound2  ||  mIY  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1  ||  mIY  <  bound2  ||  mIX  >  bound2  ||  mIY  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  bound1  ||  mIY  <  bound2  ||  mIX  >  bound2  ||  mIY  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
110	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
111	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  min);  NeighborUtilities.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  min);  NeighborUtilities.checkArgument(mIY  >  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  min);  NeighborUtilities.checkArgument(mIY  >  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    >    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
112	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max,  mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max,  mIY  >  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  max,  mIY  >  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    >    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
113	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  >  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    >    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
114	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  currX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  currX);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY:   "    +    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
115	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  mIX);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY:   "    +    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
116	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  min);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  min);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY:   "    +    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
117	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  max);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY:   "    +    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
118	[BUG]  [BUGGY]  if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(i  <  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
119	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIY  =  bound1;  mIX  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIY  =  bound1;  mIX  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIY  =  bound1;  mIX  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  >=  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  >=  currY);	  Preconditions.checkArgument(mIX    >=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX!=  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX!=  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX!=  currY);	  Preconditions.checkArgument(mIX    >=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
122	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  >  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  >  prevY);	  Preconditions.checkArgument(mIX    >=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  ==  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  ==  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  ==  currY);	  Preconditions.checkArgument(mIX    >=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
124	[BUG]  [BUGGY]  vice.addOptima(optima,  j,  prevY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  j,  prevY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  j,  prevY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
125	[BUG]  [BUGGY]  vice.addOptima(optima,  i,  prevY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  i,  prevY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  i,  prevY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
126	[BUG]  [BUGGY]  vice.addOptima(optima,  currX,  currY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  currX,  currY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  currX,  currY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
127	[BUG]  [BUGGY]  vice.addOptima(optima,  min,  max,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  min,  max,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  min,  max,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
128	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.getConvergenceException();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.getConvergenceException();	  ConvergenceException    ce    =    goalType.getRealFunction();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
129	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getCurrentFunction();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.getCurrentFunction();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.getCurrentFunction();	  ConvergenceException    ce    =    goalType.getRealFunction();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
130	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getCurrentToken();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.getCurrentToken();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.getCurrentToken();	  ConvergenceException    ce    =    goalType.getRealFunction();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
131	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX,  prevY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX,  prevY);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
132	[BUG]  [BUGGY]  int  count  =  Math.max(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.max(mIX,  mIY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.max(mIX,  mIY);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
133	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  currY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX,  currY  +  1);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX,  currY  +  1);	  int    count    =    Math.min(mIX,    currY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
134	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX!=  null);  NeighborUtilities.checkArgument(mIY!=  null);	  NeighborUtilities.checkArgument(mIX    >=    null);    NeighborUtilities.checkArgument(mIY!=    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
135	[BUG]  [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  <  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
136	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  curr[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  curr[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  curr[i];  mIY  =  optima[i];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
137	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  max;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  max;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  max;  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
138	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  mIY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX,  mIY  +  1);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX,  mIY  +  1);	  int    count    =    Math.min(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
139	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX,  mY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX,  mY);	  int    count    =    Math.min(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
140	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
141	[BUG]  [BUGGY]  vices.add(mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIY);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
142	[BUG]  [BUGGY]  vices.add(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  currY);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
143	[BUG]  [BUGGY]  vices.add(minimum);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(minimum);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(minimum);	  vices.add(optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
144	[BUG]  [BUGGY]  vices.add(max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(max);	  vices.add(optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
145	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucatin.getCurrentScope();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucatin.getCurrentScope();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucatin.getCurrentScope();	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
146	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucati.getScopeException(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucati.getScopeException(mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucati.getScopeException(mIX,  mIY);	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
147	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucati.getScopeException(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucati.getScopeException(mIX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucati.getScopeException(mIX,  prevY);	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
148	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }	  if(i    >    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
149	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[1];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[1];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[1];  mIY  =  optima[1];  }	  if(i    >    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
150	[BUG]  [BUGGY]  int  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[j    +    1];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
151	[BUG]  [BUGGY]  Integer  mIX  =  curr[j  +  1];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  curr[j  +  1];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  curr[j  +  1];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[j    +    1];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
152	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
153	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
154	[BUG]  [BUGGY]  vices.add(optima[j  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[j  +  1]);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[j  +  1]);	  vices.add(optima[j]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
155	[BUG]  [BUGGY]  vices.add(optima[j  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[j  -  1]);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[j  -  1]);	  vices.add(optima[j]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
156	[BUG]  [BUGGY]  vices.add(optima[j]  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[j]  -  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[j]  -  1);	  vices.add(optima[j]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX!=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX!=  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX!=  mIY);	  Preconditions.checkArgument(mIX!=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
158	[BUG]  [BUGGY]  mIX  =  curr[i];  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  curr[i];  mIY  =  optima[0];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  curr[i];  mIY  =  optima[0];	  mIX    =    optima[i];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
159	[BUG]  [BUGGY]  mIX  =  prevY;  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  prevY;  mIY  =  optima[0];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  prevY;  mIY  =  optima[0];	  mIX    =    optima[i];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
160	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    optima[i];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
161	[BUG]  [BUGGY]  vice.addOptima(prevY,  prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(prevY,  prevX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(prevY,  prevX,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
162	[BUG]  [BUGGY]  vice.addOptima(max,  prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(max,  prevX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(max,  prevX,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
163	[BUG]  [BUGGY]  vice.addOptima(optima,  min,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  min,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  min,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
164	[BUG]  [BUGGY]  vice.addOptima(prevX,  prevY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(prevX,  prevY,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(prevX,  prevY,  max);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
165	[BUG]  [BUGGY]  vice.addValue(mIY,  currX,  currY,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIY,  currX,  currY,  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIY,  currX,  currY,  mIX);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
166	[BUG]  [BUGGY]  vice.addValue(mIX,  currY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  currY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  currY,  mIX,  mIY);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
167	[BUG]  [BUGGY]  vice.addValue(mIX,  currY,  prevY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  currY,  prevY,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  currY,  prevY,  mIY);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
168	[BUG]  [BUGGY]  vice.addValue(mIX,  mY,  currX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  mY,  currX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  mY,  currX,  mIY);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
169	[BUG]  [BUGGY]  mIX  =  curr[0];  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  curr[0];  mIY  =  optima[0];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  curr[0];  mIY  =  optima[0];	  mIX    =    optima[0];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
170	[BUG]  [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  mIX;  mIY  =  mIY;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  mIX;  mIY  =  mIY;	  mIX    =    optima[0];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
171	[BUG]  [BUGGY]  mIX  =  bound2;  mIY  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  bound2;  mIY  =  bound2;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  bound2;  mIY  =  bound2;	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
172	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
173	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
174	[BUG]  [BUGGY]  safeAdd(mIX,  mIY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  safeAdd(mIX,  mIY,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	safeAdd(mIX,  mIY,  max);	  safeAdd(mIX,    mIY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
175	[BUG]  [BUGGY]  safeAdd(mIX,  mIY,  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  safeAdd(mIX,  mIY,  currX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	safeAdd(mIX,  mIY,  currX);	  safeAdd(mIX,    mIY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
176	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  >=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  >=  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  >=  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY!=    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
177	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  prevY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  prevY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  prevY);  NeighborUtilities.checkArgument(mIY!=  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY!=    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
178	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY!=    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
179	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  >>  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  >>  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  >>  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY!=    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
180	[BUG]  [BUGGY]  int  j  =  min  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  j  =  min  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  min  -  1;	  int    j    =    prevY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
181	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
182	[BUG]  [BUGGY]  Convergence  ce  =  getCurrentConvergence();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getCurrentConvergence();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getCurrentConvergence();	  Convergence    ce    =    getConvergence();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
183	[BUG]  [BUGGY]  Convergence  ce  =  getOptimizedConvergence();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getOptimizedConvergence();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getOptimizedConvergence();	  Convergence    ce    =    getConvergence();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
184	[BUG]  [BUGGY]  Convergence  ce  =  getCurrentVersion();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getCurrentVersion();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getCurrentVersion();	  Convergence    ce    =    getConvergence();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
185	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  <  =  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  <  =  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  <  =  max);  NeighborUtilities.checkArgument(mIY  <  =  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    <    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
186	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  <  min);  NeighborUtilities.checkArgument(mIY  <  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  <  min);  NeighborUtilities.checkArgument(mIY  <  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  <  min);  NeighborUtilities.checkArgument(mIY  <  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    <    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
187	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  min);  NeighborUtilities.checkArgument(mIY  <  max);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  min);  NeighborUtilities.checkArgument(mIY  <  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  min);  NeighborUtilities.checkArgument(mIY  <  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    <    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
188	[BUG]  [BUGGY]  vice.addOptima(optima,  j,  prevY,  mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  j,  prevY,  mIX,  mY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  j,  prevY,  mIX,  mY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
189	[BUG]  [BUGGY]  vice.addOptima(optima,  i,  prevY,  mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  i,  prevY,  mIX,  mY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  i,  prevY,  mIX,  mY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
190	[BUG]  [BUGGY]  vice.addOptima(optima,  prevY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  prevY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  prevY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
191	[BUG]  [BUGGY]  vice.addOptima(optima,  j,  prevX,  mY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  j,  prevX,  mY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  j,  prevX,  mY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
192	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }	  if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
193	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }	  if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
194	[BUG]  [BUGGY]  if(i  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
195	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  min;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  max)  {  mIX  =  min;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  min;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
196	[BUG]  [BUGGY]  Integer  mIX  =  currX[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  currX[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  currX[i  +  1];	  Integer    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
197	[BUG]  [BUGGY]  Integer  mIX  =  currY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  currY[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  currY[i  +  1];	  Integer    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
198	[BUG]  [BUGGY]  Integer  mIX  =  curr[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  curr[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  curr[i  +  1];	  Integer    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
199	[BUG]  [BUGGY]  Integer  i  =  bound1[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  bound1[j  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  bound1[j  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
200	[BUG]  [BUGGY]  Integer  i  =  bound1[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  bound1[i  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  bound1[i  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
201	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "'  is  not  supported. ");  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "'  is  not  supported. ");  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  with  max  ' "  +  max  + "'  is  not  supported. ");	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
202	[BUG]  [BUGGY]  vice.addValue(mIY,  currX,  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIY,  currX,  currY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIY,  currX,  currY,  prevY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
203	[BUG]  [BUGGY]  vice.addValue(mIX,  currY,  mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  currY,  mIX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  currY,  mIX,  prevY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
204	[BUG]  [BUGGY]  vice.addValue(mIX,  currY,  prevX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  currY,  prevX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  currY,  prevX,  mIY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
205	[BUG]  [BUGGY]  vice.addValue(mIX,  currY,  max,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIX,  currY,  max,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIX,  currY,  max,  prevY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
206	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.   ");  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.   ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.   ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    and    '   "    +    max    +   "'    was    expecting    a    double    value.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
207	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.   ");  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.   ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  min  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.   ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    and    '   "    +    max    +   "'    was    expecting    a    double    value.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
208	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.. ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.. ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevY  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value.. ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    and    '   "    +    max    +   "'    was    expecting    a    double    value.   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
209	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
210	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
211	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  prevX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
212	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY    ==    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
213	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  prevY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  prevY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  prevY);  NeighborUtilities.checkArgument(mIY  ==  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY    ==    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
214	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY    ==    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
215	[BUG]  [BUGGY]  int  j  =  currY  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  j  =  currY  /  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  currY  /  1;	  int    j    =    currY    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
216	[BUG]  [BUGGY]  vices.add(mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX,  mY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  mY);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
217	[BUG]  [BUGGY]  vices.add(mIX,  mIY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX,  mIY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  mIY,  prevY);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
218	[BUG]  [BUGGY]  vices.add(mIX,  mIY  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX,  mIY  +  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  mIY  +  1);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
219	[BUG]  [BUGGY]  vice.addOptima(goalType,  prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(goalType,  prevX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(goalType,  prevX,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
220	[BUG]  [BUGGY]  vice.addOptima(min,  prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(min,  prevX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(min,  prevX,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
221	[BUG]  [BUGGY]  vice.addOptima(currX,  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(currX,  currY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(currX,  currY,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
222	[BUG]  [BUGGY]  Preconditions.checkArgument(mIY!=  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIY!=  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIY!=  prevY);	  Preconditions.checkArgument(mIX!=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
223	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
224	[BUG]  [BUGGY]  vice.addOptima(goalType,  prevX,  prevY,  mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(goalType,  prevX,  prevY,  mIX,  mY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(goalType,  prevX,  prevY,  mIX,  mY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
225	[BUG]  [BUGGY]  vice.addOptima(mIX,  mIY,  prevY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(mIX,  mIY,  prevY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(mIX,  mIY,  prevY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
226	[BUG]  [BUGGY]  optima[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[i  +  1]  =  bound1;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  bound1;	  optima[i    +    1]    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
227	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
228	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
229	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  2];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  2];	  Integer    mIX    =    optima[j    +    1];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
230	[BUG]  [BUGGY]  if(mIX  <  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  <  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    <    =    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
231	[BUG]  [BUGGY]  if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    <    =    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
232	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucati.createCurrentScopeException(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucati.createCurrentScopeException(mIX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucati.createCurrentScopeException(mIX,  prevY);	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
233	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucati.createCurrentScopeException(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucati.createCurrentScopeException(mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucati.createCurrentScopeException(mIX,  mIY);	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
234	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucati.createCurrentScope();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucati.createCurrentScope();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucati.createCurrentScope();	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
235	[BUG]  [BUGGY]  if(currX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(currX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(currX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
236	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  curr[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  curr[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  curr[i];  mIY  =  optima[i];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
237	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  prevX;  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  prevX;  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  prevX;  mIY  =  optima[i];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
238	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[1];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
239	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  +  1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
240	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  currY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >  currY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  currY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
241	[BUG]  [BUGGY]  vice.addValue(prevY,  currX,  currY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevY,  currX,  currY,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevY,  currX,  currY,  mIY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
242	[BUG]  [BUGGY]  vice.addValue(mIY,  currX,  mIY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIY,  currX,  mIY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIY,  currX,  mIY,  prevY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
243	[BUG]  [BUGGY]  vice.addValue(mIY,  currX,  prevY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIY,  currX,  prevY,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIY,  currX,  prevY,  mIY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
244	[BUG]  [BUGGY]  vices.add(optima[i  +  1]  -  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[i  +  1]  -  bound1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i  +  1]  -  bound1);	  vices.add(optima[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
245	[BUG]  [BUGGY]  vices.add(optima[i  +  1]  -  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[i  +  1]  -  bound2);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i  +  1]  -  bound2);	  vices.add(optima[i    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
246	[BUG]  [BUGGY]  vices.add(mIX,  optimaValues[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX,  optimaValues[i]);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  optimaValues[i]);	  vices.add(optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
247	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  prevY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  prevY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  prevY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
248	[BUG]  [BUGGY]  vice.addOptima(goalType,  prevX,  prevY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(goalType,  prevX,  prevY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(goalType,  prevX,  prevY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
249	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  2];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  2];	  Integer    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
250	[BUG]  [BUGGY]  optima[j  +  1]  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[j  +  1]  =  prevY;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[j  +  1]  =  prevY;	  optima[j    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
251	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizer();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.getOptimizer();	  ConvergenceException    ce    =    goalType.getRealFunction();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
252	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.getOptimizationException();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.getOptimizationException();	  ConvergenceException    ce    =    goalType.getRealFunction();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
253	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[j  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  1];  mIY  =  optima[j  +  1];	  Integer    mIX    =    optimisea[i    +    1];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
254	[BUG]  [BUGGY]  vices.add(mIX  -  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  -  bound1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  -  bound1);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
255	[BUG]  [BUGGY]  vices.add(mIX  -  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  -  bound2);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  -  bound2);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
256	[BUG]  [BUGGY]  Convergence  ce  =  getOptimization();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getOptimization();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getOptimization();	  Convergence    ce    =    getConvergence();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
257	[BUG]  [BUGGY]  Convergence  ce  =  getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getOptimizer();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getOptimizer();	  Convergence    ce    =    getConvergence();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
258	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optimisera[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optimisera[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optimisera[i  +  1]  =  mIY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
259	[BUG]  [BUGGY]  int  count  =  Math.min(currX  -  mIY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(currX  -  mIY,  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(currX  -  mIY,  max);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
260	[BUG]  [BUGGY]  vice.addValue(prevY,  currX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevY,  currX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevY,  currX,  prevY);	  vice.addValue(currX,    currY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
261	[BUG]  [BUGGY]  vice.addValue(prevX,  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevX,  currY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevX,  currY,  prevY);	  vice.addValue(currX,    currY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
262	[BUG]  [BUGGY]  Integer  j  =  optimisera[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  j  =  optimisera[j  -  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  j  =  optimisera[j  -  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
263	[BUG]  [BUGGY]  Integer  j  =  optimisera[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  j  =  optimisera[i  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  j  =  optimisera[i  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
264	[BUG]  [BUGGY]  Integer  j  =  optimisera[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  j  =  optimisera[j  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  j  =  optimisera[j  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
265	[BUG]  [BUGGY]  NeighborUtilities.checkState(mIX!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkState(mIX!=  null);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkState(mIX!=  null);	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
266	[BUG]  [BUGGY]  Integer  j  =  bound1[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  j  =  bound1[i  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  j  =  bound1[i  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
267	[BUG]  [BUGGY]  Integer  j  =  bound1[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  j  =  bound1[j  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  j  =  bound1[j  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
268	[BUG]  [BUGGY]  Integer  i  =  bound1[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  bound1[j  -  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  bound1[j  -  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
269	[BUG]  [BUGGY]  NeighborUtilities.checkState(mIX  >=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkState(mIX  >=  null);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkState(mIX  >=  null);	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
270	[BUG]  [BUGGY]  optima[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[i  +  1]  =  bound2;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  bound2;	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
271	[BUG]  [BUGGY]  optimisera[i  +  1]  =  optimizer;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optimisera[i  +  1]  =  optimizer;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optimisera[i  +  1]  =  optimizer;	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
272	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "',  min  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "',  min  + "' ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "',  min  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
273	[BUG]  [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i];  mIY  =  optimaValues[i  +  1];	  Integer    mIX    =    optima[i];    mIY    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
274	[BUG]  [BUGGY]  vices.add(prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(prevY);	  vices.add(optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
275	[BUG]  [BUGGY]  vices.add(min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(min);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(min);	  vices.add(optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
276	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence(currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getConvergence(currX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getConvergence(currX,  currY);	  Convergence    ce    =    getConvergence(prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
277	[BUG]  [BUGGY]  if(i  <  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  <  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  <  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }	  if(i    >    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
278	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
279	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
280	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
281	[BUG]  [BUGGY]  vices.add(currX,  optima[j]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(currX,  optima[j]);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(currX,  optima[j]);	  vices.add(optima[j]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
282	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  <  min)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  min)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
283	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  currY;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
284	[BUG]  [BUGGY]  vice.addValue(mIY,  currX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIY,  currX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIY,  currX,  mIY);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
285	[BUG]  [BUGGY]  vice.addValue(prevY,  currX,  mIY,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevY,  currX,  mIY,  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevY,  currX,  mIY,  mIX);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
286	[BUG]  [BUGGY]  vice.addValue(mIY,  currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(mIY,  currX,  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(mIY,  currX,  currY);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
287	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
288	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
289	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optimisera[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optimisera[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optimisera[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
290	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optimiza[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optimiza[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optimiza[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
291	[BUG]  [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1  &&  mIY  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
292	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
293	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  optima[i];  mIY  =  optima[i];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  optima[i];  mIY  =  optima[i];	  mIX    =    optima[0];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
294	[BUG]  [BUGGY]  mIX  =  optima[1];  mIY  =  optima[1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  optima[1];  mIY  =  optima[1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  optima[1];  mIY  =  optima[1];	  mIX    =    optima[0];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
295	[BUG]  [BUGGY]  mIX  =  prevX;  mIY  =  optima[prevY];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  prevX;  mIY  =  optima[prevY];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  prevX;  mIY  =  optima[prevY];	  mIX    =    optima[0];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
296	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
297	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
298	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
299	[BUG]  [BUGGY]  Preconditions.checkState(i!=  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(i!=  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(i!=  max);	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
300	[BUG]  [BUGGY]  Preconditions.checkState(i  >=  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkState(i  >=  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(i  >=  max);	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
301	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  optimiser.getIntValue(j);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  optimiser.getIntValue(j);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
302	[BUG]  [BUGGY]  optimisera[i  +  1]  =  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optimisera[i  +  1]  =  bound2;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optimisera[i  +  1]  =  bound2;	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
303	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound1;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound1;  }	  if(mIX    >=    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
304	[BUG]  [BUGGY]  mIX  =  prevX;  mIY  =  optima[1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  prevX;  mIY  =  optima[1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  prevX;  mIY  =  optima[1];	  mIX    =    optima[0];    mIY    =    optima[1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
305	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    optima[0];    mIY    =    optima[1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkArgument(mIY  >=  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIY  >=  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIY  >=  prevY);	  Preconditions.checkArgument(mIX    >=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
307	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  prevY[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  prevY[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  prevY[i];  mIY  =  optima[i];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
308	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  prevX;  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  prevX;  mIY  =  optima[i];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
309	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  max);  NeighborUtilities.checkArgument(mIY  <  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  max);  NeighborUtilities.checkArgument(mIY  <  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  max);  NeighborUtilities.checkArgument(mIY  <  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    <    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
310	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  prevX);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  prevX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  prevX);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY:   "    +    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
311	[BUG]  [BUGGY]  vices.add(mIY,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIY,  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIY,  mIX);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
312	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  optima[i];  mIY  =  optima[j];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  optima[i];  mIY  =  optima[j];	  mIX    =    optima[i];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
313	[BUG]  [BUGGY]  mIX  =  prevX;  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  prevX;  mIY  =  optima[0];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  prevX;  mIY  =  optima[0];	  mIX    =    optima[i];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
314	[BUG]  [BUGGY]  if(i  <  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  <  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  <  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }	  if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
315	[BUG]  [BUGGY]  Integer  i  =  optimisers[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  optimisers[j  -  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  optimisers[j  -  1];	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
316	[BUG]  [BUGGY]  Integer  i  =  optimiser.getInt(mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  optimiser.getInt(mIX,  prevY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  optimiser.getInt(mIX,  prevY);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
317	[BUG]  [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  i  =  optimiser.getIntValue(j,  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  i  =  optimiser.getIntValue(j,  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
318	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  ==  mIY);  NeighborUtilities.checkArgument(mIY  ==  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY    ==    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
319	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  <  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  <  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY  <  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY    ==    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
320	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  prevY);  NeighborUtilities.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  prevY);  NeighborUtilities.checkArgument(mIY  >  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  prevY);  NeighborUtilities.checkArgument(mIY  >  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    >    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
321	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  currY);  NeighborUtilities.checkArgument(mIY  >  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  currY);  NeighborUtilities.checkArgument(mIY  >  currY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  currY);  NeighborUtilities.checkArgument(mIY  >  currY);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    >    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
322	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  currY);  Preconditions.checkArgument(mIY!=  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  >=  currY);  Preconditions.checkArgument(mIY!=  currY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  >=  currY);  Preconditions.checkArgument(mIY!=  currY);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
323	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX!=  currY);  Preconditions.checkArgument(mIY  >=  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX!=  currY);  Preconditions.checkArgument(mIY  >=  currY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX!=  currY);  Preconditions.checkArgument(mIY  >=  currY);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
324	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  prevY);  Preconditions.checkArgument(mIY!=  max);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  >=  prevY);  Preconditions.checkArgument(mIY!=  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  >=  prevY);  Preconditions.checkArgument(mIY!=  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX!=  prevY);  Preconditions.checkArgument(mIY  >=  max);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX!=  prevY);  Preconditions.checkArgument(mIY  >=  max);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX!=  prevY);  Preconditions.checkArgument(mIY  >=  max);	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
326	[BUG]  [BUGGY]  Integer  mIX  =  bound1[i];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  bound1[i];  mIY  =  optima[i  +  1];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  bound1[i];  mIY  =  optima[i  +  1];	  Integer    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
327	[BUG]  [BUGGY]  if(currX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(currX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(currX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(mIX    >=    currX)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
328	[BUG]  [BUGGY]  vice.addValue(prevX,  currY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevX,  currY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevX,  currY,  mIX,  mIY);	  vice.addValue(currX,    currY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
329	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  min  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  min  + "' ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  min  + "' ");	  ConvergenceException    ce    =    goalType.createConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
330	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(mIX  -  prevY,  mIY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX  -  prevY,  mIY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
331	[BUG]  [BUGGY]  int  count  =  Math.min(currX  -  mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  count  =  Math.min(currX  -  mIX,  currY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(currX  -  mIX,  currY);	  int    count    =    Math.min(mIX    -    currY,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
332	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
333	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
334	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
335	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    <    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
336	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    <    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
337	[BUG]  [BUGGY]  safeAdd(currX,  mIY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  safeAdd(currX,  mIY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	safeAdd(currX,  mIY,  prevY);	  safeAdd(mIX,    mIY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
338	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
339	[BUG]  [BUGGY]  if(i  +  1  >=  mIX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  +  1  >=  mIX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  +  1  >=  mIX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
340	[BUG]  [BUGGY]  if(j  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
341	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
342	[BUG]  [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
343	[BUG]  [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optima[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optima[i  +  2];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i];  mIY  =  optima[i  +  2];	  Integer    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
344	[BUG]  [BUGGY]  vice.addOptima(optima,  j,  prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  j,  prevX,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  j,  prevX,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
345	[BUG]  [BUGGY]  vice.addOptima(optima,  prevX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  prevX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  prevX,  mIY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
346	[BUG]  [BUGGY]  vice.addOptima(currX,  currY,  prevX);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(currX,  currY,  prevX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(currX,  currY,  prevX);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
347	[BUG]  [BUGGY]  vice.addOptima(optima,  bound1,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  bound1,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  bound1,  prevY);	  vice.addOptima(optima,    prevX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
348	[BUG]  [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1  &&  mIY  <  =  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
349	[BUG]  [BUGGY]  if(mIX  >=  currX  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  currX  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  currX  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
350	[BUG]  [BUGGY]  if(mIX  >=  bound2  &&  mIY  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound2  &&  mIY  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound2  &&  mIY  <  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
351	[BUG]  [BUGGY]  vices.add(mIX  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  +  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  +  1);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
352	[BUG]  [BUGGY]  vices.add(mIX  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  -  1);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  -  1);	  vices.add(mIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
353	[BUG]  [BUGGY]  optima[j  +  1]  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[j  +  1]  =  mIY;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[j  +  1]  =  mIY;	  optima[i    +    1]    =    mIY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
354	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound1[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound1[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound1[i  +  1];  }	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
355	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound2[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound2[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound2[i  +  1];  }	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
356	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound2[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound2[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound2[i  +  1];  }	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
357	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  prevX[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  prevX[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  prevX[i  +  1];  }	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    bound1[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
358	[BUG]  [BUGGY]  vice.addOptima(optima,  j,  prevX,  mIY,  mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  j,  prevX,  mIY,  mIX,  mY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  j,  prevX,  mIY,  mIX,  mY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
359	[BUG]  [BUGGY]  vice.addOptima(optima,  i,  prevX,  mY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  i,  prevX,  mY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  i,  prevX,  mY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
360	[BUG]  [BUGGY]  if(mIX  >=  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
361	[BUG]  [BUGGY]  if(mIX  <  min)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  <  min)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  min)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
362	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  max)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
363	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  <  min,  mIY  >  max);  NeighborUtilities.checkArgument(mIY  <  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  <  min,  mIY  >  max);  NeighborUtilities.checkArgument(mIY  <  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  <  min,  mIY  >  max);  NeighborUtilities.checkArgument(mIY  <  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    <    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
364	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
365	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  m  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  m  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  m	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
366	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
367	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)|  Neighbor  <  Math.abs(mIX  -  prevY)|  Neighbor  <  Math.abs(mIY  -  prevY)  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)|  Neighbor  <  Math.abs(mIX  -  prevY)|  Neighbor  <  Math.abs(mIY  -  prevY)  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)|  Neighbor  <  Math.abs(mIX  -  prevY)|  Neighbor  <  Math.abs(mIY  -  prevY)	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
368	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
369	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  +  1  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
370	[BUG]  [BUGGY]  vices.add(optima[j],  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[j],  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[j],  prevY);	  vices.add(optima[j]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
371	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  ==  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  ==  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  ==  prevY);	  Preconditions.checkArgument(mIX!=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
372	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX!=  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX!=  currX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX!=  currX);	  Preconditions.checkArgument(mIX!=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
373	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  ==  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  ==  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  ==  mIY);	  Preconditions.checkArgument(mIX!=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
374	[BUG]  [BUGGY]  Integer  mIX  =  optimisera[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optimisera[i  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optimisera[i  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
375	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[j  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[j  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
376	[BUG]  [BUGGY]  Integer  mIX  =  optimisera[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optimisera[j  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optimisera[j  +  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
377	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
378	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
379	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
380	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
381	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
382	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY!=    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
383	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  ==  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  ==  mIY);  NeighborUtilities.checkArgument(mIY!=  mIY);	  NeighborUtilities.checkArgument(mIX    >=    mIX);    NeighborUtilities.checkArgument(mIY!=    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
384	[BUG]  [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1  &&  mIY  <  =  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
385	[BUG]  [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1  &&  mIY  <  =  2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
386	[BUG]  [BUGGY]  if(mIX  >  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1    &&    mIY    <    bound2)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
387	[BUG]  [BUGGY]  if(mIX  >=  currY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  currY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  currY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
388	[BUG]  [BUGGY]  if(mIX  >=  prevY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  prevY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  prevY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
389	[BUG]  [BUGGY]  if(mIX  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  0;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  0;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  0;  }	  if(mIX    >=    currX)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
390	[BUG]  [BUGGY]  vice.addValue(prevY,  currX,  mIY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevY,  currX,  mIY,  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevY,  currX,  mIY,  prevY);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
391	[BUG]  [BUGGY]  vice.addValue(currX,  currY,  prevY,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(currX,  currY,  prevY,  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(currX,  currY,  prevY,  mIX);	  vice.addValue(currX,    currY,    mIX,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
392	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  ==  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }	  mIX    =    optima[i];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
393	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
394	[BUG]  [BUGGY]  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
395	[BUG]  [BUGGY]  optima[i  +  1]  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  optima[i  +  1]  =  min;  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  min;	  optima[i    +    1]    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
396	[BUG]  [BUGGY]  int  j  =  prevX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  int  j  =  prevX  -  1;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  prevX  -  1;	  int    j    =    currX    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
397	[BUG]  [BUGGY]  vices.add(j,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(j,  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(j,  mIX);	  vices.add(mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
398	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    ==    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
399	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }	  if(i    ==    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
400	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  currX;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  max)  {  mIX  =  currX;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  currX;  mIY  =  bound2;  }	  if(mIX    >    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
401	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevX: "  +  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevX: "  +  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevX: "  +  prevY);	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prevY:   "    +    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
402	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
403	[BUG]  [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  +  1  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  +  1  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
404	[BUG]  [BUGGY]  mIX  =  optima[j];  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  mIX  =  optima[j];  mIY  =  optima[0];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  optima[j];  mIY  =  optima[0];	  mIX    =    optima[0];    mIY    =    optima[0];    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
405	[BUG]  [BUGGY]  vices.add(mIX,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX,  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  max);	  vices.add(optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
406	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
407	[BUG]  [BUGGY]  if(i  +  1  >=  mIX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  +  1  >=  mIX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  +  1  >=  mIX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >=    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
408	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
409	[BUG]  [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }	  if(i    >=    0)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
410	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  max);  NeighborUtilities.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  max);  NeighborUtilities.checkArgument(mIY  >  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  max);  NeighborUtilities.checkArgument(mIY  >  max);	  NeighborUtilities.checkArgument(mIX    >    max);    NeighborUtilities.checkArgument(mIY    >    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
411	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	  if(i    >=    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
412	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
413	[BUG]  [BUGGY]  vice.addOptima(optima,  j,  prevX,  mIY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  j,  prevX,  mIY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  j,  prevX,  mIY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
414	[BUG]  [BUGGY]  vice.addOptima(optima,  i,  prevX,  mIY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addOptima(optima,  i,  prevX,  mIY,  mIX,  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  i,  prevX,  mIY,  mIX,  mIY);	  vice.addOptima(optima,    prevX,    prevY,    mIX,    mIY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
415	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucatine.getCurrentScope();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucatine.getCurrentScope();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucatine.getCurrentScope();	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
416	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucati.createConvergenceException( "UnivariateRealFunction  method  not  implemented  with  goal  type  ' "+goalType+ "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  bucati.createConvergenceException( "UnivariateRealFunction  method  not  implemented  with  goal  type  ' "+goalType+ "' ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucati.createConvergenceException( "UnivariateRealFunction  method  not  implemented  with  goal  type  ' "+goalType+ "' ");	  ConvergenceException    ce    =    bucati.getCurrentScope();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
417	[BUG]  [BUGGY]  if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
418	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currX;  }	  if(i    >    0)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
419	[BUG]  [BUGGY]  if(mIX  <  =  max)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  <  =  max)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  =  max)  {  mIX  =  currX;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    <    =    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
420	[BUG]  [BUGGY]  if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  max;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  max;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  max;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    <    =    max)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
421	[BUG]  [BUGGY]  vice.addValue(prevX,  currY,  mIX);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vice.addValue(prevX,  currY,  mIX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(prevX,  currY,  mIX);	  vice.addValue(currX,    currY,    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
422	[BUG]  [BUGGY]  if(mIX!=  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX!=  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX!=  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }	  if(mIX    ==    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
423	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getDeclaringClass();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  goalType.getDeclaringClass();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.getDeclaringClass();	  ConvergenceException    ce    =    goalType.getRealFunction();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
424	[BUG]  [BUGGY]  if(mIX  >=  currY)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  currY)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  currY)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
425	[BUG]  [BUGGY]  if(mIX  >=  prevY)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  prevY)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  prevY)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
426	[BUG]  [BUGGY]  if(mIX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  mIY)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
427	[BUG]  [BUGGY]  if(mIX  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    currX)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
428	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
429	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
430	[BUG]  [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  null;  }	  if(i    >    0)    {    if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
431	[BUG]  [BUGGY]  vices.add(mIX  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  -  min);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  -  min);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
432	[BUG]  [BUGGY]  vices.add(mIX  /  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(mIX  /  prevY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  /  prevY);	  vices.add(mIX    -    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
433	[BUG]  [BUGGY]  Convergence  ce  =  getDevergence();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Convergence  ce  =  getDevergence();  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getDevergence();	  Convergence    ce    =    getConvergence();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
434	[BUG]  [BUGGY]  vices.add(optima[i],  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  vices.add(optima[i],  max);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i],  max);	  vices.add(optima[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
435	[BUG]  [BUGGY]  if(j  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(j  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(i    >=    0)    {    if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
436	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  currX);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  >=  currX);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  >=  currX);	  Preconditions.checkArgument(mIX    >=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
437	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Preconditions.checkArgument(mIX  >=  mIY);  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  >=  mIY);	  Preconditions.checkArgument(mIX    >=    prevY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
438	[BUG]  [BUGGY]  Integer  mIX  =  Math.min(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  Math.min(mIX,  mIY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  Math.min(mIX,  mIY);	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    Math.min(mIX,    mIY);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
439	[BUG]  [BUGGY]  Integer  mIX  =  Math.max(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  Math.max(mIX,  mIY);  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  Math.max(mIX,  mIY);	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    Math.min(mIX,    mIY);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
440	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[j  -  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[j  -  1];	  if(j    ==    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    Math.min(mIX,    mIY);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
441	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  currX;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[i  +  1]  -  currX;  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  1]  -  currX;	  Integer    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
442	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  2];  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Integer  mIX  =  optima[i  +  2];  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  2];	  Integer    mIX    =    optima[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
443	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
444	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  m  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  m  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  m	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
445	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
446	[BUG]  [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  [BUGGY]      if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Neighbor  <  Math.abs(mIX  -  prevY);  Neighbor  <  Math.abs(mIY  -  prevY)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];	  if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
447	[BUG]  [BUGGY]  if(mIX  >=  currX)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  currX)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  currX)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
448	[BUG]  [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  currY)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  =  currY)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1  &&  mIY  <  =  currY)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
449	[BUG]  [BUGGY]  if(mIX  >=  bound2)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  bound2)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound2)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	  if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    currY;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
450	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }	  mIX    =    optima[0];    mIY    =    optima[1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
451	[BUG]  [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mIX    =    optima[0];    mIY    =    optima[1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
452	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  currX[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(i  >  0)  {  mIX  =  currX[i];  mIY  =  optima[i];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  currX[i];  mIY  =  optima[i];  }	  if(i    >    0)    {    mIX    =    optima[i];    mIY    =    optima[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
453	[BUG]  [BUGGY]  if(mIX  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  if(mIX  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }	  if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
454	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  min  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;      [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  min  + "' ");  [BUGGY]      optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  min  + "' ");	  ConvergenceException    ce    =    new    ConvergenceException(   "Could    not    instantiate    prev    '   "    +    prevX    +   "'    with    max    '   "    +    max    +   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
