projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=mIY;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=mIX;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=currX;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=currY;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=prevY;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285inti=j-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){for(inti=j-1;i<mIX;i++){optima[i+1]=mIY;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){for(inti=j-1;i>=0;i-->=0;){optima[i+1]=mIY;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){for(inti=j-1;i>=0;i-->=0;){optima[i+1]=mIX;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){for(inti=j-1;i>=0;i-->=0;){optima[i+1]=currX;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intj=j-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=bound1){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>bound1){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=bound1){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j>0){for(inti=j-1;i<0;i-->=0;){mIX=optima[i+1];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=0){mIX=optima[0];mIY=optima[0];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j>0){for(inti=j-1;i<0;i-->=0;){mIX=optima[i];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j>0){for(inti=j-1;i>=0;i-->=0;){mIX=optima[i+1];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optima[i+1]=mIX;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vices.add(mIX,mIY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285Convergencece=getConvergence(prevX,prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285safeAdd(mIX,mIY,prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285Convergencece=getConvergence();
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285inti=prevY-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285inti=currY-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285inti=max-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285inti=currX-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vices.add(optima[i+1]);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vices.add(optima[i]);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vices.add(optima[j]);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){if(mIX>=bound1){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){if(mIX>=bound1){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i==0){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intcount=Math.min(mIX,currY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intcount=Math.min(mIX,mIY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intcount=Math.min(mIX-currY,max);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optima[i+1]=currY;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){if(mIX>bound1){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i<0){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){if(mIX>bound1){mIX=bound1;mIY=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optima[i+1]=currX;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optima[i+1]=mIY;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=max;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285Preconditions.checkState(i!=0);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){if(mIX>=bound1){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){if(mIX>=bound1){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intj=currY-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intj=prevY-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intj=currX-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285intj=max-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vices.add(mIX);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){mIX=optima[i];mIY=optima[0];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){mIX=optima[0];mIY=optima[0];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285mIX=optima[i];mIY=optima[0];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285mIX=optima[0];mIY=optima[1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vices.add(mIX-prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=newConvergenceException("CouldnotinstantiateprevY:"+prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=newConvergenceException("Couldnotinstantiateprev'"+prevX+"'withmax'"+max+"'");
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vices.add(optima);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=bound1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optima[i+1]=prevY;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j==0){for(inti=j-1;i>=0;i--){mIX=optima[i];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j==0){for(inti=j-1;i>=0;i--){mIX=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j==0){for(inti=j-1;i>=0;i--){mIX=Math.min(mIX,mIY);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j==0){for(inti=j-1;i>=0;i--){mIX=bound1[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=goalType.createConvergenceException("Couldnotinstantiateprev'"+prevX+"'foragoaltype.");
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=goalType.createConvergenceException("Couldnotinstantiateprev'"+prevX+"'and'"+max+"'isnotsupported.");
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=goalType.createConvergenceException("Couldnotinstantiateprev'"+prevX+"'and'"+max+"'isnotsupported");
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=goalType.getRealFunction();
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){mIX=bound1;mIY=bound2;}else{optima[i+1]=currY;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){mIX=bound1;mIY=bound2;}else{optima[i+1]=mIY;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=goalType.createConvergenceException("Couldnotinstantiateprev'"+prevX+"'and'"+max+"'wasexpectingadoublevalue.");
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>=0){mIX=optima[i];mIY=optima[i];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){mIX=optima[i];mIY=optima[i];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285mIX=optima[0];mIY=optima[0];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285Preconditions.checkState(j>0);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285Preconditions.checkArgument(mIX>=prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285Preconditions.checkArgument(j>0);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285Preconditions.checkArgument(mIX!=prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285NeighborUtilities.checkArgument(mIX>=null);NeighborUtilities.checkArgument(mIY!=null);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285NeighborUtilities.checkArgument(mIX>=null);NeighborUtilities.checkArgument(mIY==null);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285NeighborUtilities.checkArgument(mIX>max);NeighborUtilities.checkArgument(mIY>max);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285NeighborUtilities.checkArgument(mIX>max);NeighborUtilities.checkArgument(mIY<max);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=bound1&&mIY<bound2){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285inti=lastNaN-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>max){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){mIX=bound1;mIY=bound2;}else{optima[i+1]=currY;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(i>0){mIX=bound1;mIY=bound2;}else{optima[i+1]=mIY;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=goalType.createConvergenceException("Couldnotinstantiateprev'"+prevX+"'withmax'"+max+"'");
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>0){mIX=optima[0];mIY=optima[0];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=0){mIX=optima[0];mIY=optima[1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX==0){mIX=optima[0];mIY=optima[0];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285IntegermIX=optima[i+1];mIY=optima[i+1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285NeighborUtilities.checkArgument(mIX>=mIX);NeighborUtilities.checkArgument(mIY!=mIY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285NeighborUtilities.checkArgument(mIX>=mIX);NeighborUtilities.checkArgument(mIY==mIY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optima[j+1]=mIX;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285IntegermIX=optima[i];mIY=optima[i+1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285IntegermIX=optima[i+1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285IntegermIX=optima[i];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vice.addValue(currX,currY,mIX,mIY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vice.addOptima(optima,prevX,prevY,mIX,mIY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vice.addOptima(optima,prevX,prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vice.addValue(currX,currY,mIX,prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285optimaValues[i+1]=min;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=bound1&&mIY<bound2){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=currX){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=bound1){mIX=bound1;mIY=currY;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vice.addValue(currX,currY,prevY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285IntegermIX=optimisea[i+1];mIY=optima[i+1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285IntegermIX=optima[j+1];mIY=optima[i+1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285IntegermIX=optima[i+1];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX<=max){mIX=bound1;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>max){mIX=bound1;mIY=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285vice.addOptima(optima,prevX,prevY,mIX,mY);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285ConvergenceExceptionce=bucati.getCurrentScope();
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j>0){for(inti=j-1;i>=0;i--){mIX=optima[i];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j>0){for(inti=j-1;i>=0;i--){mIX=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(j>0){for(inti=j-1;i>=0;i--){mIX=optima[i+1];mIY=optima[i+1];}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=currX){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java285if(mIX>=bound2){mIX=bound2;mIY=bound2;}else{optima[i+1]=bound2;}
