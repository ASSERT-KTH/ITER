bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  vices.add(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vices.add(mIX,  mIY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX,  mIY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
2	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence(prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Convergence  ce  =  getConvergence(prevX,  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getConvergence(prevX,  prevY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
3	[BUG]  [BUGGY]  safeAdd(mIX,  mIY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  safeAdd(mIX,  mIY,  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	safeAdd(mIX,  mIY,  prevY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
4	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Convergence  ce  =  getConvergence();  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Convergence  ce  =  getConvergence();	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
5	[BUG]  [BUGGY]  int  i  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  i  =  prevY  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  prevY  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
6	[BUG]  [BUGGY]  int  i  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  i  =  currY  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  currY  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
7	[BUG]  [BUGGY]  int  i  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  i  =  max  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  max  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
8	[BUG]  [BUGGY]  int  i  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  i  =  currX  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  currX  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
9	[BUG]  [BUGGY]  vices.add(optima[i  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vices.add(optima[i  +  1]);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i  +  1]);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    i++)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
10	[BUG]  [BUGGY]  vices.add(optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vices.add(optima[i]);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[i]);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    i++)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
11	[BUG]  [BUGGY]  vices.add(optima[j]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vices.add(optima[j]);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima[j]);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    i++)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
12	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
13	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
14	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
15	[BUG]  [BUGGY]  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  ==  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
16	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  count  =  Math.min(mIX,  currY);  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX,  currY);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
17	[BUG]  [BUGGY]  int  count  =  Math.min(mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  count  =  Math.min(mIX,  mIY);  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX,  mIY);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
18	[BUG]  [BUGGY]  int  count  =  Math.min(mIX  -  currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  count  =  Math.min(mIX  -  currY,  max);  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  count  =  Math.min(mIX  -  currY,  max);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
19	[BUG]  [BUGGY]  optima[i  +  1]  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optima[i  +  1]  =  currY;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  currY;	  optimaValues[i    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
20	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
21	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
22	[BUG]  [BUGGY]  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  <  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
23	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >  bound1)  {  mIX  =  bound1;  mIY  =  bound2;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
24	[BUG]  [BUGGY]  optima[i  +  1]  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optima[i  +  1]  =  currX;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  currX;	  optima[i    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
25	[BUG]  [BUGGY]  optima[i  +  1]  =  mIY;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optima[i  +  1]  =  mIY;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  mIY;	  optima[i    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
26	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optimaValues[i  +  1]  =  max;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optimaValues[i  +  1]  =  max;	  optimaValues[i    +    1]    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(i!=  0);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Preconditions.checkState(i!=  0);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(i!=  0);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
28	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
29	[BUG]  [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
30	[BUG]  [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  if(mIX  >=  bound1)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
31	[BUG]  [BUGGY]  int  j  =  currY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  j  =  currY  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  currY  -  1;	      int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
32	[BUG]  [BUGGY]  int  j  =  prevY  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  j  =  prevY  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  prevY  -  1;	      int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
33	[BUG]  [BUGGY]  int  j  =  currX  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  j  =  currX  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  currX  -  1;	      int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
34	[BUG]  [BUGGY]  int  j  =  max  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  j  =  max  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  j  =  max  -  1;	      int    j    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
35	[BUG]  [BUGGY]  vices.add(mIX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vices.add(mIX);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
36	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[0];  }	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
37	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
38	[BUG]  [BUGGY]  mIX  =  optima[i];  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  mIX  =  optima[i];  mIY  =  optima[0];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  optima[i];  mIY  =  optima[0];	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
39	[BUG]  [BUGGY]  mIX  =  optima[0];  mIY  =  optima[1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  mIX  =  optima[0];  mIY  =  optima[1];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  optima[0];  mIY  =  optima[1];	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
40	[BUG]  [BUGGY]  vices.add(mIX  -  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vices.add(mIX  -  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(mIX  -  prevY);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
41	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prevY: "  +  prevY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
42	[BUG]  [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  new  ConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "' ");	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
43	[BUG]  [BUGGY]  vices.add(optima);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vices.add(optima);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vices.add(optima);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
44	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optimaValues[i  +  1]  =  bound1;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optimaValues[i  +  1]  =  bound1;	  optimaValues[i    +    1]    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
45	[BUG]  [BUGGY]  optima[i  +  1]  =  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optima[i  +  1]  =  prevY;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[i  +  1]  =  prevY;	  optima[i    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
46	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
47	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  }  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
48	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  Math.min(mIX,  mIY);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  Math.min(mIX,  mIY);  }  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  Math.min(mIX,  mIY);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
49	[BUG]  [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound1[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound1[i  +  1];  }  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  ==  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  bound1[i  +  1];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
50	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  for  a  goal  type. ");  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  for  a  goal  type. ");  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  for  a  goal  type. ");	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
51	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  is  not  supported. ");  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  is  not  supported. ");  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  is  not  supported. ");	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
52	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  is  not  supported ");  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  is  not  supported ");  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  is  not  supported ");	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
53	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.getRealFunction();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  goalType.getRealFunction();  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.getRealFunction();	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
54	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
55	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
56	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value. ");  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value. ");  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  and  ' "  +  max  + "'  was  expecting  a  double  value. ");	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    <    mIX;    i++)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
57	[BUG]  [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >=  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
58	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  optima[i];  mIY  =  optima[i];  }	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
59	[BUG]  [BUGGY]  mIX  =  optima[0];  mIY  =  optima[0];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  mIX  =  optima[0];  mIY  =  optima[0];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	mIX  =  optima[0];  mIY  =  optima[0];	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(j  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Preconditions.checkState(j  >  0);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkState(j  >  0);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX  >=  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Preconditions.checkArgument(mIX  >=  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX  >=  prevY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkArgument(j  >  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Preconditions.checkArgument(j  >  0);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(j  >  0);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkArgument(mIX!=  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Preconditions.checkArgument(mIX!=  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Preconditions.checkArgument(mIX!=  prevY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
64	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY!=  null);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY!=  null);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
65	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY  ==  null);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  null);  NeighborUtilities.checkArgument(mIY  ==  null);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
66	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  >  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  >  max);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  >  max);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
67	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  max);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >  max);  NeighborUtilities.checkArgument(mIY  <  max);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
68	[BUG]  [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
69	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
70	[BUG]  [BUGGY]  int  i  =  lastNaN  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  int  i  =  lastNaN  -  1;  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	int  i  =  lastNaN  -  1;	      int    i    =    j    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
71	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
72	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  currY;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
73	[BUG]  [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(i  >  0)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  mIY;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
74	[BUG]  [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "' ");  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  goalType.createConvergenceException( "Could  not  instantiate  prev  ' "  +  prevX  + "'  with  max  ' "  +  max  + "' ");	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
75	[BUG]  [BUGGY]  if(mIX  >  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
76	[BUG]  [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  0)  {  mIX  =  optima[0];  mIY  =  optima[1];  }	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
77	[BUG]  [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  ==  0)  {  mIX  =  optima[0];  mIY  =  optima[0];  }	      if(mIX    >=    0)    {    mIX    =    optima[0];    mIY    =    optima[0];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
78	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
79	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIX);  NeighborUtilities.checkArgument(mIY!=  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIX);  NeighborUtilities.checkArgument(mIY!=  mIY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  mIX);  NeighborUtilities.checkArgument(mIY!=  mIY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
80	[BUG]  [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIX);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  NeighborUtilities.checkArgument(mIX  >=  mIX);  NeighborUtilities.checkArgument(mIY  ==  mIY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	NeighborUtilities.checkArgument(mIX  >=  mIX);  NeighborUtilities.checkArgument(mIY  ==  mIY);	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
81	[BUG]  [BUGGY]  optima[j  +  1]  =  mIX;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optima[j  +  1]  =  mIX;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optima[j  +  1]  =  mIX;	  optima[i    +    1]    =    mIX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
82	[BUG]  [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optima[i  +  1];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i];  mIY  =  optima[i  +  1];	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
83	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Integer  mIX  =  optima[i  +  1];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  1];	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
84	[BUG]  [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Integer  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
85	[BUG]  [BUGGY]  vice.addValue(currX,  currY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vice.addValue(currX,  currY,  mIX,  mIY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(currX,  currY,  mIX,  mIY);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
86	[BUG]  [BUGGY]  vice.addOptima(optima,  prevX,  prevY,  mIX,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vice.addOptima(optima,  prevX,  prevY,  mIX,  mIY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  prevX,  prevY,  mIX,  mIY);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
87	[BUG]  [BUGGY]  vice.addOptima(optima,  prevX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vice.addOptima(optima,  prevX,  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  prevX,  prevY);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
88	[BUG]  [BUGGY]  vice.addValue(currX,  currY,  mIX,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vice.addValue(currX,  currY,  mIX,  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(currX,  currY,  mIX,  prevY);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
89	[BUG]  [BUGGY]  optimaValues[i  +  1]  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  optimaValues[i  +  1]  =  min;  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	optimaValues[i  +  1]  =  min;	  optimaValues[i    +    1]    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
90	[BUG]  [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1  &&  mIY  <  bound2)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
91	[BUG]  [BUGGY]  if(mIX  >=  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >=  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  currX)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
92	[BUG]  [BUGGY]  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound1)  {  mIX  =  bound1;  mIY  =  currY;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
93	[BUG]  [BUGGY]  vice.addValue(currX,  currY,  prevY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vice.addValue(currX,  currY,  prevY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addValue(currX,  currY,  prevY);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    currX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
94	[BUG]  [BUGGY]  Integer  mIX  =  optimisea[i  +  1];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Integer  mIX  =  optimisea[i  +  1];  mIY  =  optima[i  +  1];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optimisea[i  +  1];  mIY  =  optima[i  +  1];	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
95	[BUG]  [BUGGY]  Integer  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Integer  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  1];  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[j  +  1];  mIY  =  optima[i  +  1];	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
96	[BUG]  [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	Integer  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }	      if(j    >    0)    {    for(int    i    =    j    -    1;    i    <    0;    i--    >=    0;)    {    mIX    =    optima[i    +    1];    mIY    =    optima[i    +    1];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
97	[BUG]  [BUGGY]  if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  <  =  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
98	[BUG]  [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >  max)  {  mIX  =  bound1;  mIY  =  bound2;  }	      if(mIX    >    bound1)    {    mIX    =    bound1;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
99	[BUG]  [BUGGY]  vice.addOptima(optima,  prevX,  prevY,  mIX,  mY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  vice.addOptima(optima,  prevX,  prevY,  mIX,  mY);  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	vice.addOptima(optima,  prevX,  prevY,  mIX,  mY);	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
100	[BUG]  [BUGGY]  ConvergenceException  ce  =  bucati.getCurrentScope();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  ConvergenceException  ce  =  bucati.getCurrentScope();  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	ConvergenceException  ce  =  bucati.getCurrentScope();	      if(i    >    0)    {    for(int    i    =    j    -    1;    i    >=    0;    i--    >=    0;)    {    optima[i    +    1]    =    mIX;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
101	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i];  mIY  =  optima[i  +  1];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
102	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  }  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
103	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }  [BUGGY]    if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(j  >  0)  {  for(int  i  =  j  -  1;  i  >=  0;  i--)  {  mIX  =  optima[i  +  1];  mIY  =  optima[i  +  1];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
104	[BUG]  [BUGGY]  if(mIX  >=  currX)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >=  currX)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  currX)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
105	[BUG]  [BUGGY]  if(mIX  >=  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];  double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;    [BUGGY]  if(mIX  >=  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }  [BUGGY]    optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  }  optima[i  +  1]  =  currX;  optimaValues[i  +  1]  =  currY;  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	if(mIX  >=  bound2)  {  mIX  =  bound2;  mIY  =  bound2;  }  else  {  optima[i  +  1]  =  bound2;  }	      if(mIX    >=    bound1)    {    mIX    =    bound2;    mIY    =    bound2;    }    else    {    optima[i    +    1]    =    bound2;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
