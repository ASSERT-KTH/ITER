bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  bound1  =(min  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound1  =(min  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(min  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound1    =(i    ==    0)?    min    :    min    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
2	[BUG]  [BUGGY]  final  double  bound1  =(min  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound1  =(min  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(min  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound1    =(i    ==    0)?    min    :    min    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
3	[BUG]  [BUGGY]  final  double  max  =  Math.max(max,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(max,  bound1),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(max,  bound1),  max;	  final    double    max    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
4	[BUG]  [BUGGY]  final  double  max  =  Math.max(min,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(min,  bound1),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(min,  bound1),  max;	  final    double    max    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
5	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max  +  1;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  bound2),  max  +  1;	  final    double    max    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
6	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  bound1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  bound1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  bound1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
10	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
11	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
12	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
13	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
14	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
15	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
16	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound2),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound2),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  bound2),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
17	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
18	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
25	[BUG]  [BUGGY]  Integer  f  =  generator.getOptimizedValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  generator.getOptimizedValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  generator.getOptimizedValue();	  Integer    f    =    optimizer.getOptimizedValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
26	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  max,  Math.max(bound2,  min);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  max,  Math.max(bound2,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  max,  Math.max(bound2,  min);	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    max,    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
27	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  bound2));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    max,    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
28	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  bound1));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound2,  bound1));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    max,    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
29	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    max,    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
30	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.generateRandomGenerator(f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.generateRandomGenerator(f);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.generateRandomGenerator(f);	  RandomGenerator    generator    =    optimizer.generateRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
31	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.generateOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.generateOptimizer();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.generateOptimizer();	  RandomGenerator    generator    =    optimizer.generateRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    starts;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    starts;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
34	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  max),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  max),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  bound1,  max),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
35	[BUG]  [BUGGY]  final  double  max  =  Math.max(max,  bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(max,  bound1,  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(max,  bound1,  bound2);	  final    double    max    =    Math.max(bound1,    bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  lastNaN;  ++i)  {  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  lastNaN;  ++i)  {	  for(int    i    =    0;    i    <    starts;    ++i)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  ++i)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  ++i)  {  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  maxIterations;  ++i)  {	  for(int    i    =    0;    i    <    starts;    ++i)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  count;  ++i)  {  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  count;  ++i)  {	  for(int    i    =    0;    i    <    starts;    ++i)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.starts;  ++i)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  this.starts;  ++i)  {  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  this.starts;  ++i)  {	  for(int    i    =    0;    i    <    starts;    ++i)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
40	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
41	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
42	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
43	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
44	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
46	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  max),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  max),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2,  max),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
47	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
48	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(starts,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
49	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
50	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound1),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound1),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound1),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
51	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(starts,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
52	[BUG]  [BUGGY]  Integer  f  =  generator.getInitialValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  generator.getInitialValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  generator.getInitialValue();	  Integer    f    =    generator.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
53	[BUG]  [BUGGY]  Integer  f  =  generator.getInternalFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  generator.getInternalFunctionValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  generator.getInternalFunctionValue();	  Integer    f    =    generator.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
54	[BUG]  [BUGGY]  Integer  f  =  generator.getFunctionValue(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  generator.getFunctionValue(bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  generator.getFunctionValue(bound1);	  Integer    f    =    generator.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
55	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
56	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX),  Math.min(bound2,  bound1),  Math.max(currY,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX),  Math.min(bound2,  bound1),  Math.max(currY,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX),  Math.min(bound2,  bound1),  Math.max(currY,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
57	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
58	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
59	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    goalType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
60	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
64	[BUG]  [BUGGY]  int  count  =  Math.min(max,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.min(max,  bound1),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(max,  bound1),  max;	  int    count    =    Math.min(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
65	[BUG]  [BUGGY]  int  count  =  Math.min(bound1,  bound2),  maxEvaluations;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.min(bound1,  bound2),  maxEvaluations;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(bound1,  bound2),  maxEvaluations;	  int    count    =    Math.min(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    n    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    n    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
70	[BUG]  [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
71	[BUG]  [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
72	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
73	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
74	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
75	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
76	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
77	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
78	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
79	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(min,  bound1),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(min,  bound1),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(min,  bound1),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(min,    bound1),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
80	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(min,    bound1),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
81	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1,  max),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1,  max),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1,  max),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(min,    bound1),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
82	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(min,    bound1),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
83	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
84	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound1));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1,  max);  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
92	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    min,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
93	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound1,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound1,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound1,  min);	  optima[i]    =    optimizer.optimize(f,    min,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
94	[BUG]  [BUGGY]  Integer  f  =  generator.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  generator.getOptimizer();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  generator.getOptimizer();	  Integer    f    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
95	[BUG]  [BUGGY]  Integer  f  =  optimizer.getOptimizer(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizer.getOptimizer(bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getOptimizer(bound1);	  Integer    f    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
96	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	137	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	137	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	137	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	137	None	replace
100	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
101	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
102	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min);	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
103	[BUG]  [BUGGY]  final  double  goalType  =  f.getRealFunctionType();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  f.getRealFunctionType();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  f.getRealFunctionType();	  final    double    goalType    =    goalType.getRealFunctionType();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
104	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getFunctionType();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  goalType.getFunctionType();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getFunctionType();	  final    double    goalType    =    goalType.getRealFunctionType();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
105	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getOwnerFunctionType();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  goalType.getOwnerFunctionType();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getOwnerFunctionType();	  final    double    goalType    =    goalType.getRealFunctionType();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
106	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
108	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound1,  bound2),  Math.max(currY));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound1,  bound2),  Math.max(currY));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound1,  bound2),  Math.max(currY));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY));    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
109	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound1,  bound2),  Math.max(currY));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound1,  bound2),  Math.max(currY));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound1,  bound2),  Math.max(currY));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY));    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
110	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(currY));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY));    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
111	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY));    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
112	[BUG]  [BUGGY]  final  double  bound1  =(min  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound1  =(min  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(min  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound1    =(i    ==    0)?    min    :    max    +    generator.nextDouble()    *    (min    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
113	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
114	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound1),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound1),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  bound1),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
115	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
116	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
117	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  min);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound1,  bound2));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
124	[BUG]  [BUGGY]  int  count  =  Math.max(min,  max,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(min,  max,  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(min,  max,  bound2);	  int    count    =    Math.max(max,    bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
125	[BUG]  [BUGGY]  int  count  =  Math.max(max,  bound1,  bound2),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(max,  bound1,  bound2),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(max,  bound1,  bound2),  max;	  int    count    =    Math.max(max,    bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
128	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
129	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
130	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
131	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  max);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  max);	  RandomGenerator    generator    =    optimizer.getRandomGenerator(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
132	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  goalType);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  goalType);	  RandomGenerator    generator    =    optimizer.getRandomGenerator(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
133	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  bound1);	  RandomGenerator    generator    =    optimizer.getRandomGenerator(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
134	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getGenerator(f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getGenerator(f);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getGenerator(f);	  RandomGenerator    generator    =    optimizer.getGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
135	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
136	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
137	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
138	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currX,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currX,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currX,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
139	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    ne)    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    ne)    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
144	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
146	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    min,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
147	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  max,  Math.min(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  max,  Math.min(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1),  max,  Math.min(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    min,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
148	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound1,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound1,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound1,  min);	  optima[i]    =    optimizer.optimize(f,    min,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
151	[BUG]  [BUGGY]  final  double  goalType  =  f.getRealFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  f.getRealFunctionValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  f.getRealFunctionValue();	  final    double    goalType    =    goalType.getRealFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
152	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
153	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  bound1),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  bound1),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  bound1),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
154	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
155	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
159	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
160	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getOptimizer(f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getOptimizer(f);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getOptimizer(f);	  RandomGenerator    generator    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
161	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getRawGenerator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getRawGenerator();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getRawGenerator();	  RandomGenerator    generator    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
162	[BUG]  [BUGGY]  final  double  max  =  Math.max(min,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(min,  bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(min,  bound1);	  final    double    max    =    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
163	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  i);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  i);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  i);	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
164	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
165	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  10.0));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  10.0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  10.0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
166	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
167	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max),  Math.min(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max),  Math.min(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max),  Math.min(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
169	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
171	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
172	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
173	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  boundY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  boundY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  boundY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
174	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
175	[BUG]  [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
176	[BUG]  [BUGGY]  Integer  f  =  optimizer.getInternalFunctionType();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizer.getInternalFunctionType();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getInternalFunctionType();	  Integer    f    =    optimizer.getInternalFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nf    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nf    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
179	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
180	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
183	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  startCount;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  startCount;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  startCount;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
190	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
191	[BUG]  [BUGGY]  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(bound1,  bound2),  Math.max(bound2,  max);	  Math.min(bound1,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
192	[BUG]  [BUGGY]  Math.min(max,  bound1),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Math.min(max,  bound1),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(max,  bound1),  Math.max(bound2,  bound1);	  Math.min(bound1,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
193	[BUG]  [BUGGY]  Math.min(bound1,  bound2),  Math.max(bound2,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Math.min(bound1,  bound2),  Math.max(bound2,  i);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(bound1,  bound2),  Math.max(bound2,  i);	  Math.min(bound1,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
194	[BUG]  [BUGGY]  Math.min(max,  bound1,  bound2),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Math.min(max,  bound1,  bound2),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(max,  bound1,  bound2),  Math.max(bound2,  bound1);	  Math.min(bound1,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
195	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    min,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
196	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
197	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
198	[BUG]  [BUGGY]  final  double  goalType  =  f.getFunctionType();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  f.getFunctionType();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  f.getFunctionType();	  final    double    goalType    =    f.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
199	[BUG]  [BUGGY]  final  double  goalType  =  f.getOwnerFunctionType();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  f.getOwnerFunctionType();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  f.getOwnerFunctionType();	  final    double    goalType    =    f.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
200	[BUG]  [BUGGY]  final  double  goalType  =  f.getOwner();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  f.getOwner();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  f.getOwner();	  final    double    goalType    =    f.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
201	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2),  Math.max(bound1,  bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2),  Math.max(bound1,  bound2),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound2),  Math.max(bound1,  bound2),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
202	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
203	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound1,  bound2),  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound1,  bound2),  bound2;  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound1,  bound2),  bound2;	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
204	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
205	[BUG]  [BUGGY]  final  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
206	[BUG]  [BUGGY]  final  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
207	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
208	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
209	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
210	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	145	None	replace
211	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(max,  bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(max,  bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(max,  bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	145	None	replace
212	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	145	None	replace
213	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	145	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound1,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound1,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound1,  max);  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
216	[BUG]  [BUGGY]  optima[0]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[0]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[0]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
217	[BUG]  [BUGGY]  Integer  f  =  optimizer.getFunctionInitialValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizer.getFunctionInitialValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getFunctionInitialValue();	  Integer    f    =    optimizer.getInitialValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
218	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
219	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
220	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  goalType));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximumIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximumIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
226	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximumIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximumIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
228	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
231	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
232	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
233	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.generateGandomGenerator();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.generateGandomGenerator();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.generateGandomGenerator();	  RandomGenerator    generator    =    optimizer.getGandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
234	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getGandomGenerator(f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getGandomGenerator(f);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getGandomGenerator(f);	  RandomGenerator    generator    =    optimizer.getGandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
235	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound1),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2,  Math.min(bound1),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
236	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
237	[BUG]  [BUGGY]  int  count  =  Math.max(min,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(min,  bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(min,  bound1);	  int    count    =    Math.max(max,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
238	[BUG]  [BUGGY]  int  count  =  Math.max(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(min,  max);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(min,  max);	  int    count    =    Math.max(max,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
239	[BUG]  [BUGGY]  final  double  max  =  Math.max(min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(min,  max);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(min,  max);	  final    double    max    =    Math.max(bound1,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
240	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
241	[BUG]  [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  generator.nextDouble()  *(max  -  min,  bound1);	  final    double    max    =    generator.nextDouble()    *(max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
242	[BUG]  [BUGGY]  final  double  max  =  generator.nextDouble()  *(min  -  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  generator.nextDouble()  *(min  -  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  generator.nextDouble()  *(min  -  max);	  final    double    max    =    generator.nextDouble()    *(max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
243	[BUG]  [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  generator.nextDouble()  *(max  -  bound1);	  final    double    max    =    generator.nextDouble()    *(max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
244	[BUG]  [BUGGY]  final  double  max  =  generator.nextDouble()  *(bound1  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  generator.nextDouble()  *(bound1  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  generator.nextDouble()  *(bound1  -  min);	  final    double    max    =    generator.nextDouble()    *(max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
245	[BUG]  [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);	  final    double    bound2    =(i    ==    0)?    min    :    min    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
246	[BUG]  [BUGGY]  final  double  bound2  =(min  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound2  =(min  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(min  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound2    =(i    ==    0)?    min    :    min    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
247	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
248	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  max,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
249	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currY,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currY,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currY,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
250	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
251	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound1,  bound2),  Math.max(currY,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
252	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
253	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound1,  bound2),  Math.max(currY,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
254	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
255	[BUG]  [BUGGY]  int  count  =  Math.max(max,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(max,  bound1),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(max,  bound1),  max;	  int    count    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
256	[BUG]  [BUGGY]  int  count  =  Math.max(min,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(min,  bound1),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(min,  bound1),  max;	  int    count    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
257	[BUG]  [BUGGY]  int  count  =  Math.max(bound1,  bound2),  max  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(bound1,  bound2),  max  +  1;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(bound1,  bound2),  max  +  1;	  int    count    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
258	[BUG]  [BUGGY]  final  double  goalType  =  f.getOwnerFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  f.getOwnerFunctionValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  f.getOwnerFunctionValue();	  final    double    goalType    =    goalType.getOwnerFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
259	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getOwnerFunction();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  goalType.getOwnerFunction();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getOwnerFunction();	  final    double    goalType    =    goalType.getOwnerFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
260	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(min,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
261	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimaValues[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimaValues[i]);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimaValues[i]);	  optima[i]    =    optimizer.optimize(min,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
262	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
263	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  min);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  min);	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
264	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
265	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
266	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
267	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
268	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
269	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
270	[BUG]  [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (mIX  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (mIX  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (mIX  -  min);	  final    double    bound2    =(i    ==    0)?    min    :    max    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
271	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  bound2.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start1;  i  <  bound2.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  bound2.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
274	[BUG]  [BUGGY]  int  count  =  Math.max(bound1,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(bound1,  bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(bound1,  bound1);	  int    count    =    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
275	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
276	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  max;  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  max;	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
277	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
278	[BUG]  [BUGGY]  for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    starts;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
279	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
280	[BUG]  [BUGGY]  for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0,  starts  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
281	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
282	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  bound2.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start1;  i  <  bound2.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  bound2.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
284	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1),  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1),  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1),  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound1),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
285	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1.length;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
286	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
288	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	For(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
289	[BUG]  [BUGGY]  final  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
290	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
291	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
292	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  min);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  min);	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
294	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  bound2;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
297	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
298	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
299	[BUG]  [BUGGY]  int  count  =  Math.min(max,  bound1,  bound2),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.min(max,  bound1,  bound2),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(max,  bound1,  bound2),  max;	  int    count    =    Math.min(max,    bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
300	[BUG]  [BUGGY]  int  count  =  Math.min(max,  bound1  -  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.min(max,  bound1  -  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(max,  bound1  -  bound2);	  int    count    =    Math.min(max,    bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
301	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
303	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
304	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
305	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
306	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  min,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  min,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  min,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
307	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  min;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
308	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  max;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
310	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    min,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
311	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    min,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
312	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(bound1,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    min,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
313	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	145	None	replace
314	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
315	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
316	[BUG]  [BUGGY]  Integer  f  =  optimizer.getInternalFunctionValue(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizer.getInternalFunctionValue(bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getInternalFunctionValue(bound1);	  Integer    f    =    optimizer.getInternalFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
317	[BUG]  [BUGGY]  final  double  bound2  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound2  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound2    =(i    ==    0)?    min    :    max    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
318	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts-1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts-1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts-1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
319	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
320	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  bound1),  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  bound1),  bound2;  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2),  bound1),  bound2;	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound1),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
321	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  For(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	For(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
322	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts-1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts-1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts-1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
323	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0);	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
324	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.generateRandomGenerator(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.generateRandomGenerator(bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.generateRandomGenerator(bound1);	  RandomGenerator    generator    =    optimizer.generateRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
325	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1),  max);	  optima[i]    =    optimizer.optimize(f,    max,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
326	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  =  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start1;  i  <  =  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  =  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  min);  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
328	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  startIterations;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  startIterations;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  startIterations;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
329	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
330	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  buffer,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  buffer,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  buffer,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
331	[BUG]  [BUGGY]  final  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
332	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
333	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(min,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
334	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getRealFunctionType(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  goalType.getRealFunctionType(bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getRealFunctionType(bound1);	  final    double    goalType    =    goalType.getRealFunctionType();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
335	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
336	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
337	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
338	[BUG]  [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (mIX  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (mIX  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (mIX  -  min);	  final    double    bound1    =(i    ==    0)?    min    :    max    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
339	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
340	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getGandomGenerator(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getGandomGenerator(bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getGandomGenerator(bound1);	  RandomGenerator    generator    =    optimizer.getGandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  min);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  min);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  min);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
342	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  bound2,  mIY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound1,  bound2,  mIY);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  bound2,  mIY);	  final    double    max    =    Math.max(bound1,    bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
343	[BUG]  [BUGGY]  final  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
344	[BUG]  [BUGGY]  Integer  f  =  optimizer.getRealFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizer.getRealFunctionValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getRealFunctionValue();	  Integer    f    =    optimizer.getInitialValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
345	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
346	[BUG]  [BUGGY]  Integer  f  =  generator.getRealFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  generator.getRealFunctionValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  generator.getRealFunctionValue();	  Integer    f    =    generator.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
347	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    starts;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
348	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(starts,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
349	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(starts,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(starts,  bound2),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(starts,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
351	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
352	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  min);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  min);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
353	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2),  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2),  bound1;  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2),  bound1;	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
354	[BUG]  [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min  +  1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  generator.nextDouble()  *(max  -  min  +  1);	  final    double    max    =    generator.nextDouble()    *(max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
356	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
357	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  bound2),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  bound2),  Math.max(currY,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currX,  Math.min(bound2,  bound2),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
358	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  mIX,  Math.min(bound2,  bound1),  Math.max(bound2,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  mIX,  Math.min(bound2,  bound1),  Math.max(bound2,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  mIX,  Math.min(bound2,  bound1),  Math.max(bound2,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
359	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
360	[BUG]  [BUGGY]  final  double  bound2  =(min  ==  0)?  bound1  :  min  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound2  =(min  ==  0)?  bound1  :  min  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(min  ==  0)?  bound1  :  min  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound2    =(i    ==    0)?    min    :    min    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
361	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound2,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound2,  bound1),  max;  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound2,  bound1),  max;	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  min);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  min);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  min);  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
364	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1),  Math.max(bound2,  0),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1),  Math.max(bound2,  0),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1),  Math.max(bound2,  0),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
365	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
366	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
367	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
368	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
369	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  bound1));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  bound1));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
370	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    n    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
371	[BUG]  [BUGGY]  int  count  =  Math.min(bound2,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.min(bound2,  bound1),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(bound2,  bound1),  max;	  int    count    =    Math.min(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
372	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound4));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound4));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound4));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
373	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
374	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
375	[BUG]  [BUGGY]  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
376	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound2,  max);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound2,  max);	  final    double    max    =    Math.max(max,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
377	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  min);	  optima[i]    =    optimizer.optimize(f,    min,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
378	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1),  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1),  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
379	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max,  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max,  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max,  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    max,    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
380	[BUG]  [BUGGY]  Integer  f  =  optimizer.getOptimizedValue(bound1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizer.getOptimizedValue(bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getOptimizedValue(bound1);	  Integer    f    =    optimizer.getOptimizedValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
381	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
382	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1),  Math.max(bound2,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1),  Math.max(bound2,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1),  Math.max(bound2,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
383	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
384	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
385	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getGetterOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getGetterOptimizer();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getGetterOptimizer();	  RandomGenerator    generator    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
386	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  targetType);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  targetType);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getRandomGenerator(f,  targetType);	  RandomGenerator    generator    =    optimizer.getRandomGenerator(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
387	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(min,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
388	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  max,  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  max,  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  max,  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(min,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
389	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  bound1,  bound2,  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(min,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
390	[BUG]  [BUGGY]  int  count  =  Math.max(bound1,  bound2),  maxEvaluations;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(bound1,  bound2),  maxEvaluations;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(bound1,  bound2),  maxEvaluations;	  int    count    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
391	[BUG]  [BUGGY]  int  count  =  Math.max(bound1,  bound2),  max  -  min;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(bound1,  bound2),  max  -  min;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(bound1,  bound2),  max  -  min;	  int    count    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
392	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(min),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
394	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
395	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY));    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
396	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound2,  bound1),  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound2,  bound1),  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound2,  bound1),  max;	  final    double    max    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
397	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max  +  min;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  bound2),  max  +  min;	  final    double    max    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
398	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bound1;  ++i)  {  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bound1;  ++i)  {	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optimiza[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
400	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  runs;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  runs;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  runs;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
401	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximumIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
402	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound2),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound2),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound2),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
403	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound2,  bound1),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound2,  bound1),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.min(bound2,  bound1),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
404	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  currX,  currY,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
405	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  min));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
406	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
407	[BUG]  [BUGGY]  int  count  =  Math.min(max,  bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.min(max,  bound2,  bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(max,  bound2,  bound1);	  int    count    =    Math.min(max,    bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
408	[BUG]  [BUGGY]  int  count  =  Math.max(min,  bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(min,  bound1,  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(min,  bound1,  bound2);	  int    count    =    Math.max(max,    bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
409	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound2,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound2,  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound2,  bound2);	  final    double    max    =    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
410	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
411	[BUG]  [BUGGY]  int  starts  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  starts  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  starts  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
412	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  min));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
413	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max),  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max),  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max),  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
414	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  null,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  null,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  null,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
415	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  bound2);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
416	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
417	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(UnsupportedOperationException  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(UnsupportedOperationException  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(UnsupportedOperationException  e)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
418	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  min);	  optima[i]    =    optimizer.optimize(f,    min,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
419	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  max);	  optima[i]    =    optimizer.optimize(f,    min,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
420	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
421	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0),  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
422	[BUG]  [BUGGY]  final  double  bound2  =(i  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound2  =(i  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(i  ==  0)?  max  :  min  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound2    =(i    ==    0)?    min    :    min    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
423	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
424	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
425	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
426	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
427	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(max,  bound2));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2),    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
428	[BUG]  [BUGGY]  final  double  bound1  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound1  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);	  final    double    bound1    =(i    ==    0)?    min    :    max    +    generator.nextDouble()    *    (max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
429	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max  +  generator.nextDouble()  *  max;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max  +  generator.nextDouble()  *  max;  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  bound2),  max  +  generator.nextDouble()  *  max;	  final    double    max    =    Math.max(bound1,    bound2),    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
430	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
431	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
432	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
433	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
434	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
435	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
436	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximumIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
437	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximumIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
438	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
439	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound1,    bound2),    Math.max(currY,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
440	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
441	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
442	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(NumberFormatException  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(NumberFormatException  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(NumberFormatException  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
443	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
444	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
445	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
446	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  optima,  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  optima,  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  optima,  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    max,    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
447	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  max,  Math.min(bound2,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  max,  Math.min(bound2,  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  max,  Math.min(bound2,  min);	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    max,    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
448	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
449	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currX,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currX,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound1,  currX,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
450	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    currY,    Math.min(bound2,    bound1),    Math.max(currY,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
451	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
452	[BUG]  [BUGGY]  static  final  double  max  =  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  static  final  double  max  =  Math.max(bound1,  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	static  final  double  max  =  Math.max(bound1,  bound2);	  final    double    max    =    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
453	[BUG]  [BUGGY]  final  double  max  =  Math.min(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.min(bound1,  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.min(bound1,  bound2);	  final    double    max    =    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
454	[BUG]  [BUGGY]  int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  starts;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
455	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
456	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  startIterations;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  startIterations;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  startIterations;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
457	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getRealFunction();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  goalType  =  goalType.getRealFunction();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getRealFunction();	  final    double    goalType    =    goalType.getRealFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
458	[BUG]  [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min,  starts);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min,  starts);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  generator.nextDouble()  *(max  -  min,  starts);	  final    double    max    =    generator.nextDouble()    *(max    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
459	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
460	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max));  }	  for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound3));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
461	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(max);  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    max);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
462	[BUG]  [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
463	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
464	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
465	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max1));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max1));  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
466	[BUG]  [BUGGY]  int  count  =  Math.min(starts,  end1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.min(starts,  end1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(starts,  end1);	  int    count    =    Math.min(end1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
467	[BUG]  [BUGGY]  final  double  i  =  start;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  i  =  start;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  i  =  start;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
468	[BUG]  [BUGGY]  final  double  i  =  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  i  =  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  i  =  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
469	[BUG]  [BUGGY]  final  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
470	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound1),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound1),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound1),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
471	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  start1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
472	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start1);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
473	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    start);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	137	None	replace
474	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
475	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1,  bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1,  bound2);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1,  bound2);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
476	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound1),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound1),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound1),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
477	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
478	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMinimumIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
479	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
480	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(min,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(min,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(min,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(min,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
481	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound1),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound1),  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound1),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound1),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
482	[BUG]  [BUGGY]  Integer  f  =  optimizationr.getInitialValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizationr.getInitialValue();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizationr.getInitialValue();	  Integer    f    =    optimizer.getInitialValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
483	[BUG]  [BUGGY]  Math.min(starts,  end),  Math.max(ends,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Math.min(starts,  end),  Math.max(ends,  bound1);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(starts,  end),  Math.max(ends,  bound1);	  Math.min(bound1,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
484	[BUG]  [BUGGY]  Math.min(starts,  i),  Math.max(ends,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Math.min(starts,  i),  Math.max(ends,  i);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(starts,  i),  Math.max(ends,  i);	  Math.min(bound1,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
485	[BUG]  [BUGGY]  Math.min(starts,  i),  Math.max(ends,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Math.min(starts,  i),  Math.max(ends,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(starts,  i),  Math.max(ends,  i));	  Math.min(bound1,    bound2),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
486	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
487	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  0));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  0));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
488	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
489	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1,  bound2);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1,  bound2);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1,  bound2);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    bound2);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
490	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
491	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.generateValueGenerator();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.generateValueGenerator();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.generateValueGenerator();	  RandomGenerator    generator    =    optimizer.generateRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
492	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound2));	  optima[i]    =    optimizer.optimize(f,    min,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
493	[BUG]  [BUGGY]  int  count  =  Math.max(max,  bound1  -  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  count  =  Math.max(max,  bound1  -  bound2);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(max,  bound1  -  bound2);	  int    count    =    Math.max(max,    bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
494	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
495	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
496	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
497	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.min(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.min(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.min(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
498	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.min(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
499	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound1),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound1),  Math.max(bound1,  bound2);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1),  Math.min(bound2,  bound1),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.min(bound2,    bound1),    Math.max(bound2,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
500	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY),  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY),  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY),  min);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
501	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
502	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  min);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2),    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
503	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  mIY),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  mIY),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  mIY),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
504	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  min,  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  min,  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  min,  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
505	[BUG]  [BUGGY]  int  starts  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  starts  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  starts  =  0;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
506	[BUG]  [BUGGY]  int  starts  =  1;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  starts  =  1;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  starts  =  1;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
507	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
508	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(bound1    -    min);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
509	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(bound1,  max);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  max);	  final    double    max    =    Math.max(max,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
510	[BUG]  [BUGGY]  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
511	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  curr2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  curr2),  Math.max(bound2,  max);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  curr2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    max,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
512	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
513	[BUG]  [BUGGY]  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  start;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  start;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	  for(int    i    =    start;    i    <    bound1;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
514	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound1),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound1),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound1),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
515	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
516	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
517	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
518	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
519	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound2));  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound2));  }	  for(int    i    =    1;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
520	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound1),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound1),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
521	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  max),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  max),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  max),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
522	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  i),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  i),  Math.max(bound2,  i));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  i),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(starts,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
523	[BUG]  [BUGGY]  final  double  bound1  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  bound1  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(max  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);	  final    double    bound1    =(i    ==    0)?    min    :    max    +    generator.nextDouble()    *    (min    -    min);    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
524	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  max,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound1,    max,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
525	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f).generateOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f).generateOptimizer();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getRandomGenerator(f).generateOptimizer();	  RandomGenerator    generator    =    optimizer.getRandomGenerator(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
526	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(min,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
527	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.generateValues();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  RandomGenerator  generator  =  optimizer.generateValues();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.generateValues();	  RandomGenerator    generator    =    optimizer.getGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
528	[BUG]  [BUGGY]  final  double  max  =  Math.max(length1,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  max  =  Math.max(length1,  bound1);  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(length1,  bound1);	  final    double    max    =    Math.max(max,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
529	[BUG]  [BUGGY]  Integer  f  =  optimizationr.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizationr.getOptimizer();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizationr.getOptimizer();	  Integer    f    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
530	[BUG]  [BUGGY]  Integer  f  =  optimizer.getFunctionOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  Integer  f  =  optimizer.getFunctionOptimizer();  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getFunctionOptimizer();	  Integer    f    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
531	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  bounds;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
532	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    ne)    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
533	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    ne)    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
534	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
535	[BUG]  [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }	  for(int    i    =    0;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
536	[BUG]  [BUGGY]  final  double  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
537	[BUG]  [BUGGY]  final  double  i  =  start;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  final  double  i  =  start;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  i  =  start;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	  final    for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
538	[BUG]  [BUGGY]  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);      [BUGGY]  int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]      optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	  for(int    i    =    start1;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
