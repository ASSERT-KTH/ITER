bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
2	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
3	[BUG]  [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(i  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
4	[BUG]  [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
5	[BUG]  [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(i  ==  0)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
6	[BUG]  [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound2  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (max  -  min);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
7	[BUG]  [BUGGY]  int  count  =  Math.min(max,  bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.min(max,  bound1,  bound2);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(max,  bound1,  bound2);	      int    count    =    Math.min(max,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
8	[BUG]  [BUGGY]  int  count  =  Math.min(max,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.min(max,  bound2);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(max,  bound2);	      int    count    =    Math.min(max,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
9	[BUG]  [BUGGY]  int  count  =  Math.max(bound1,  bound2),  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.max(bound1,  bound2),  max;  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(bound1,  bound2),  max;	      int    count    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
10	[BUG]  [BUGGY]  int  count  =  Math.max(max,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.max(max,  bound1);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(max,  bound1);	      int    count    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Throwable  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
15	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
16	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(Throwable  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
21	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
22	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
23	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
24	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
25	[BUG]  [BUGGY]  Integer  f  =  generator.getFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  Integer  f  =  generator.getFunctionValue();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  generator.getFunctionValue();	      Integer    f    =    optimizer.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
26	[BUG]  [BUGGY]  Integer  f  =  optimizer.getInitialValue();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  Integer  f  =  optimizer.getInitialValue();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getInitialValue();	      Integer    f    =    optimizer.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
27	[BUG]  [BUGGY]  Integer  f  =  optimizer.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  Integer  f  =  optimizer.getOptimizer();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getOptimizer();	      Integer    f    =    optimizer.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
28	[BUG]  [BUGGY]  Integer  f  =  optimizer.getInternalFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  Integer  f  =  optimizer.getInternalFunctionValue();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getInternalFunctionValue();	      Integer    f    =    optimizer.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Throwable  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximumIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
33	[BUG]  [BUGGY]  final  double  max  =  Math.max(max,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  max  =  Math.max(max,  bound1);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(max,  bound1);	      final    double    max    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
34	[BUG]  [BUGGY]  final  double  max  =  Math.max(max,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  max  =  Math.max(max,  bound2);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(max,  bound2);	      final    double    max    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
35	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  max  =  Math.max(bound1,  bound2),  max;  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  bound2),  max;	      final    double    max    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
36	[BUG]  [BUGGY]  final  double  goalType  =  f.getFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  goalType  =  f.getFunctionValue();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  f.getFunctionValue();	      final    double    goalType    =    goalType.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
37	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getRealFunctionType();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  goalType  =  goalType.getRealFunctionType();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getRealFunctionType();	      final    double    goalType    =    goalType.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
38	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getRealFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  goalType  =  goalType.getRealFunctionValue();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getRealFunctionValue();	      final    double    goalType    =    goalType.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
39	[BUG]  [BUGGY]  int  count  =  Math.min(bound1,  bound2),  max;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.min(bound1,  bound2),  max;  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(bound1,  bound2),  max;	      int    count    =    Math.min(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound2));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
43	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
44	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
45	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(min,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
46	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
47	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
48	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
49	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
50	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
51	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
52	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound2),  Math.min(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
53	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(min,  bound1),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe)	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  n	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
58	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.generateRandomGenerator();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  RandomGenerator  generator  =  optimizer.generateRandomGenerator();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.generateRandomGenerator();	      RandomGenerator    generator    =    optimizer.getRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
59	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  RandomGenerator  generator  =  optimizer.getOptimizer();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getOptimizer();	      RandomGenerator    generator    =    optimizer.getRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
60	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  RandomGenerator  generator  =  optimizer.getRandomGenerator(f);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getRandomGenerator(f);	      RandomGenerator    generator    =    optimizer.getRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
61	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  max,  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
62	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
63	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound1,  bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound1,  bound2),  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(bound1,  bound2),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
64	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  bound1;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Throwable  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
76	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
77	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  min);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  min);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  min);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
78	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
79	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound1),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound1),  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound1),  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
80	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getGandomGenerator();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  RandomGenerator  generator  =  optimizer.getGandomGenerator();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getGandomGenerator();	      RandomGenerator    generator    =    optimizer.getRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
81	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
82	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  Math.max(bound2,  bound1);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.min(bound2,  bound1),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
83	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  bound1);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  bound1);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
84	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
85	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  max  =  Math.max(bound2,  bound1);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound2,  bound1);	      final    double    max    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
86	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  max  =  Math.max(bound1,  bound2,  max);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  bound2,  max);	      final    double    max    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
87	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  i);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  i);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  i);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
88	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  bound3));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
90	[BUG]  [BUGGY]  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  Math.min(bound1,  bound2),  Math.max(bound2,  bound1);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Math.min(bound1,  bound2),  Math.max(bound2,  bound1);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
91	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
94	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
95	[BUG]  [BUGGY]  int  count  =  Math.min(bound1,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.min(bound1,  bound1);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(bound1,  bound1);	      int    count    =    Math.min(max,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
96	[BUG]  [BUGGY]  int  count  =  Math.min(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.min(bound2,  bound1);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(bound2,  bound1);	      int    count    =    Math.min(max,    bound1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
97	[BUG]  [BUGGY]  int  count  =  Math.max(bound2,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.max(bound2,  bound1);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(bound2,  bound1);	      int    count    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start1;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getFunctionValue();  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getFunctionValue();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nf	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound2);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
103	[BUG]  [BUGGY]  final  double  goalType  =  goalType.getOwnerFunctionValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  goalType  =  goalType.getOwnerFunctionValue();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  goalType  =  goalType.getOwnerFunctionValue();	      final    double    goalType    =    goalType.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
104	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  min,  bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  bound2);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(bound1  -  min);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
107	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
108	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
109	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound2),  Math.max(bound2,  i));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(starts,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
112	[BUG]  [BUGGY]  final  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
113	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
114	[BUG]  [BUGGY]  Integer  f  =  optimizer.getOptimizedValue();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  Integer  f  =  optimizer.getOptimizedValue();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	Integer  f  =  optimizer.getOptimizedValue();	      Integer    f    =    optimizer.getFunctionValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
115	[BUG]  [BUGGY]  RandomGenerator  generator  =  optimizer.getGenerator();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  RandomGenerator  generator  =  optimizer.getGenerator();  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	RandomGenerator  generator  =  optimizer.getGenerator();	      RandomGenerator    generator    =    optimizer.getRandomGenerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  1;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  starts;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
120	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
121	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound1,  bound2);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound2),  Math.max(bound1,  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
122	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
123	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound1),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound1),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound1),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound1),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
124	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound2,  max),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
125	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound2,  bound1),  Math.max(currY,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
126	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
127	[BUG]  [BUGGY]  final  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  for(int  i  =  start;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations);  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
128	[BUG]  [BUGGY]  int  count  =  Math.max(max,  bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.max(max,  bound1,  bound2);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.max(max,  bound1,  bound2);	      int    count    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1),  Math.max(bound2,  max);  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  bound1));  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  start;  i  <  starts;  ++i)  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2),  Math.max(bound2,  max);  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1),    Math.max(bound2,    bound2));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
133	[BUG]  [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  bound1  =(i  ==  0)?  min  :  max  +  generator.nextDouble()  *  (min  -  min);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
134	[BUG]  [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  max  =  generator.nextDouble()  *(max  -  min);  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  generator.nextDouble()  *(max  -  min);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  ne)	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  }  catch(NumberFormatException  nfe	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(NumberFormatException    nfe)    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  starts);  }  catch(Exception  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxEvaluations  -  start1);  }  catch(IOException  ioe)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optimizer.setMaximalIterationCount(maxEvaluations    -    starts);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
140	[BUG]  [BUGGY]  final  double  max  =  Math.max(bound1,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  final  double  max  =  Math.max(bound1,  bound1);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	final  double  max  =  Math.max(bound1,  bound1);	      final    double    max    =    Math.max(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
141	[BUG]  [BUGGY]  int  count  =  Math.min(end1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  int  count  =  Math.min(end1,  bound2);  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	int  count  =  Math.min(end1,  bound2);	      int    count    =    Math.min(bound1,    bound2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
142	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
143	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
144	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  currY,  Math.min(bound1,  bound2),  Math.max(currY,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
145	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]    Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound1,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    totalEvaluations  =  0;  for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);    [BUGGY]  for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }  [BUGGY]    optima[i]  =  optimizer.optimize(f,  goalType,              Math.min(bound1,  bound2),                            Math.max(bound1,  bound2));  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	for(int  i  =  0;  i  <  starts;  ++i)  {  try  {  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  }  catch(Exception  e)  {  }	      for(int    i    =    start;    i    <    starts;    ++i)    {    try    {    optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    }    catch(Exception    e)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
