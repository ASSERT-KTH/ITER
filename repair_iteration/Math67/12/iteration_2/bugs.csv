bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  vices.add(currX,  currY);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  vices.add(currX,  currY);  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	vices.add(currX,  currY);	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
2	[BUG]  [BUGGY]  final  int  j  =  j  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  final  int  j  =  j  -  1;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	final  int  j  =  j  -  1;	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
3	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Convergence  ce  =  getConvergence();  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Convergence  ce  =  getConvergence();	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
4	[BUG]  [BUGGY]  Convergence  ce  =  getConvergence(i);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Convergence  ce  =  getConvergence(i);  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Convergence  ce  =  getConvergence(i);	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
5	[BUG]  [BUGGY]  double  mIX  =  currX[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currX[i  +  1];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currX[i  +  1];	      double    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
6	[BUG]  [BUGGY]  double  mIX  =  optima[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  optima[i  +  1];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  optima[i  +  1];	      double    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
7	[BUG]  [BUGGY]  double  mIX  =  prevY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  prevY[i  +  1];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  prevY[i  +  1];	      double    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
8	[BUG]  [BUGGY]  double  mIX  =  currX;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currX;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currX;	      double    mIX    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
9	[BUG]  [BUGGY]  double  mIX  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currY;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currY;	      double    mIX    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
10	[BUG]  [BUGGY]  double  mIX  =  bound1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  bound1;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  bound1;	      double    mIX    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
11	[BUG]  [BUGGY]  double  mIX  =  currX[i];  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currX[i];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currX[i];	      double    mIX    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
12	[BUG]  [BUGGY]  double  mIX  =  curr[i];  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  curr[i];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  curr[i];	      double    mIX    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
13	[BUG]  [BUGGY]  double  mIY  =  max;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  max;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  max;	  double    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
14	[BUG]  [BUGGY]  double  mIX  =  min;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  min;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  min;	      double    mIX    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
15	[BUG]  [BUGGY]  double  mIX  =  max  +  min;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  max  +  min;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  max  +  min;	      double    mIX    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
16	[BUG]  [BUGGY]  double  mIX  =  currX  +  optimaValues[i].doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currX  +  optimaValues[i].doubleValue();  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currX  +  optimaValues[i].doubleValue();	      double    mIX    =    optimaValues[i].doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
17	[BUG]  [BUGGY]  double  mIX  =  prevY  +  optimaValues[i].doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  prevY  +  optimaValues[i].doubleValue();  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  prevY  +  optimaValues[i].doubleValue();	      double    mIX    =    optimaValues[i].doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
18	[BUG]  [BUGGY]  double  mIX  =  currX[i].doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currX[i].doubleValue();  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currX[i].doubleValue();	      double    mIX    =    optimaValues[i].doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
19	[BUG]  [BUGGY]  double  mIY  =  curr;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  curr;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  curr;	  double    mIY    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
20	[BUG]  [BUGGY]  double  mIY  =  curry;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  curry;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  curry;	  double    mIY    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
21	[BUG]  [BUGGY]  final  int  j  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  final  int  j  =  0;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	final  int  j  =  0;	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
22	[BUG]  [BUGGY]  vices.add(currX);  currY  =  currY;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  vices.add(currX);  currY  =  currY;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	vices.add(currX);  currY  =  currY;	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
23	[BUG]  [BUGGY]  ConvergenceException  ce  =  getConvergenceException(i);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  ConvergenceException  ce  =  getConvergenceException(i);  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	ConvergenceException  ce  =  getConvergenceException(i);	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
24	[BUG]  [BUGGY]  vices.add(currX);  currY  =  optima[j];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  vices.add(currX);  currY  =  optima[j];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	vices.add(currX);  currY  =  optima[j];	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
25	[BUG]  [BUGGY]  vices.add(currX  -  currY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  vices.add(currX  -  currY);  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	vices.add(currX  -  currY);	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
26	[BUG]  [BUGGY]  double  mIY  =  currX[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  currX[i];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  currX[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
27	[BUG]  [BUGGY]  double  mIY  =  prevY[i];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  prevY[i];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  prevY[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
28	[BUG]  [BUGGY]  double  mIY  =  currY[i  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  currY[i  +  1];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  currY[i  +  1];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
29	[BUG]  [BUGGY]  double  mIY  =  currY[i]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  currY[i]  +  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  currY[i]  +  1;	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
30	[BUG]  [BUGGY]  double  mIY  =  currX  +  currY;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  currX  +  currY;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  currX  +  currY;	  double    mIY    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
31	[BUG]  [BUGGY]  double  mIY  =  currX  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  currX  +  prevY;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  currX  +  prevY;	  double    mIY    =    currX;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
32	[BUG]  [BUGGY]  double  mIY  =  currY  +  prevY;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  currY  +  prevY;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  currY  +  prevY;	  double    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
33	[BUG]  [BUGGY]  double  mIY  =  currY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  currY  +  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  currY  +  1;	  double    mIY    =    currY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  j;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  j;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  j;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
38	[BUG]  [BUGGY]  double  mIX  =  prevX;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  prevX;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  prevX;	      double    mIX    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  j;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  j;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  j;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
43	[BUG]  [BUGGY]  double  mIY  =  bound1[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  bound1[i];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  bound1[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
44	[BUG]  [BUGGY]  double  mIX  =  max  +  bound2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  max  +  bound2;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  max  +  bound2;	      double    mIX    =    max;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  len;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  max;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  max;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	Preconditions.checkState(i  >  0)  {  for(int  j  =  0;  j  <  max;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
49	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
50	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
51	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
52	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  2;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  2;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  2;  ++j)  {  currX  =  currX;  currY  =  optima[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optima[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
53	[BUG]  [BUGGY]  double  mIY  =  prevY  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  prevY  +  1;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  prevY  +  1;	  double    mIY    =    prevY;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
54	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
55	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
56	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(j  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(j  >  0)  {  for(int  j  =  0;  j  <  lastNaN;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
57	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  1;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  1;  ++j)  {  currX  =  currX;  currY  =  currY;  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  1;  ++j)  {  currX  =  currX;  currY  =  currY;  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    currY;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
58	[BUG]  [BUGGY]  double  mIX  =  currX  +  optima[i];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currX  +  optima[i];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currX  +  optima[i];	      double    mIX    =    optima[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
59	[BUG]  [BUGGY]  double  mIX  =  optimaValues[i  +  1]  -  currX;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  optimaValues[i  +  1]  -  currX;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  optimaValues[i  +  1]  -  currX;	      double    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
60	[BUG]  [BUGGY]  double  mIX  =  optimaValues[j  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  optimaValues[j  +  1];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  optimaValues[j  +  1];	      double    mIX    =    optimaValues[i    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
61	[BUG]  [BUGGY]  double  mIX  =  optima[i].doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  optima[i].doubleValue();  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  optima[i].doubleValue();	      double    mIX    =    optimaValues[i].doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
62	[BUG]  [BUGGY]  double  mIX  =  optimaValues[i].doubleValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  optimaValues[i].doubleValue()  +  1;  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  optimaValues[i].doubleValue()  +  1;	      double    mIX    =    optimaValues[i].doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
63	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  prevY;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
64	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  1;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  1;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  1;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
65	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  2;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  2;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  2;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
66	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  4;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  if(i  >  0)  {  for(int  j  =  0;  j  <  4;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	if(i  >  0)  {  for(int  j  =  0;  j  <  4;  ++j)  {  currX  =  currX;  currY  =  optimaValues[j];  }	      if(i    >    0)    {    for(int    j    =    0;    j    <    lastNaN;    ++j)    {    currX    =    currX;    currY    =    optimaValues[j];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
67	[BUG]  [BUGGY]  double  mIY  =  curra[i];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  curra[i];  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  curra[i];	  double    mIY    =    currY[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
68	[BUG]  [BUGGY]  double  mIY  =  curr2;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIY  =  curr2;  [BUGGY]    while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIY  =  curr2;	  double    mIY    =    bound1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
69	[BUG]  [BUGGY]  double  mIX  =  currX  +  optimaValues[i];  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    double  currX  =  optima[0];  double  currY  =  optimaValues[0];  for  (int  j  =  1;  j  <  lastNaN;  ++j)  {  final  double  prevY  =  currY;  currX  =  optima[j];  currY  =  optimaValues[j];  if  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  prevY))  {  int  i  =  j  -  1;  double  mIX  =  optima[i];    [BUGGY]  double  mIX  =  currX  +  optimaValues[i];  [BUGGY]    double  mIY  =  optimaValues[i];  while  ((i  >=  0)  &&  ((goalType  ==  GoalType.MAXIMIZE)  ^  (currY  <  mIY)))  {  optima[i  +  1]  =  mIX;  optimaValues[i  +  1]  =  mIY;  if  (i--  !=  0)  {  mIX  =  optima[i];  mIY  =  optimaValues[i];  }  else  {  mIX  =  Double.NaN;  mIY  =  Double.NaN;  }  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	double  mIX  =  currX  +  optimaValues[i];	      double    mIX    =    optimaValues[i];    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
