bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optima[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
2	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
3	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));	  optima[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
4	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
5	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
6	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
7	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.getOptimization(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
8	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.getOptimization(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
9	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.getOptimization(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
10	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.getOptimization(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
11	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
12	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
13	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
14	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
15	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
16	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
17	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
18	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
19	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
20	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
21	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
22	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
23	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
24	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
25	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
26	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimizedValue(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimizedValue(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimizedValue(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));	  optima[i]    =    optimizer.getOptimizedValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
27	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimizedValue(f,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimizedValue(f,  goalType);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimizedValue(f,  goalType);	  optima[i]    =    optimizer.getOptimizedValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
28	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  min));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
29	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
30	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(max,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(max,  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(max,  bound1));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
31	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.min(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.min(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.min(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
32	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  goalType.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  goalType.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  goalType.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
33	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
34	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  optimaValues[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  optimaValues[i]);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  optimaValues[i]);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
35	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  goalType.max(bound1,  bound2),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  goalType.max(bound1,  bound2),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  goalType.max(bound1,  bound2),  optima);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
36	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
37	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
38	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.max(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
39	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.max(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
40	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
41	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
42	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
43	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
44	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
45	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
46	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
47	[BUG]  [BUGGY]  optimisation.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisation.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisation.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optimisation.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
48	[BUG]  [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima[i]);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima[i]);	  optimisation.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
49	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
50	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
51	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
52	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
53	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
54	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
55	[BUG]  [BUGGY]  optima[0]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[0]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[0]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[0]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[0]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[0]));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
56	[BUG]  [BUGGY]  optima[i]  =  optimiza.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimiza.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimiza.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
57	[BUG]  [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimizer.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimiser.setOptimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
58	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.min(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.min(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.min(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
59	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
60	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
61	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  goalType.max(bound1,  bound2));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
62	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  optimaValues[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  optimaValues[i]);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2),  max,  optimaValues[i]);	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
63	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1,  bound2);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1,  bound2);	  optimaValues[i]    =    optimizer.getOptimizedValue(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
64	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1);	  optimaValues[i]    =    optimizer.getOptimizedValue(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
65	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max    -    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
66	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max    -    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
67	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max  -  bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max    -    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
68	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
69	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
70	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  i));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  i));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    i));    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
71	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
72	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  optima);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  optima);	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
73	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(max),  optima);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound2),  Math.max(max),  optima);	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
74	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
75	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
76	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
77	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
78	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
79	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
80	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
81	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
82	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
83	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max,  goalType);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(max,  goalType);	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
84	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
85	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
86	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optimaValues[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
87	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
88	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
89	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  headerType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  headerType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  headerType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
90	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  bound1,  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  bound1,  bound2);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  bound1,  bound2);	  optimaValues[i]    =    optimizer.getOptimizer(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
91	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  bound1);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  bound1);	  optimaValues[i]    =    optimizer.getOptimizer(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
92	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimizer(f,  goalType,  Math.min(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimizer(f,  goalType,  Math.min(bound1,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimizer(f,  goalType,  Math.min(bound1,  bound2));	  optimaValues[i]    =    optimizer.getOptimizer(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
93	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
94	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max),  bound2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max),  bound2);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max),  bound2);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
95	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
96	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
97	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
98	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
99	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  goalType));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  goalType));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
100	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
101	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
102	[BUG]  [BUGGY]  optimiser.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimiser.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimiser.setOptimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType));	  optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
103	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima[i]);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima[i]);	  optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
104	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
105	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
106	[BUG]  [BUGGY]  optimaValues[i]  =  optimiser.getOptimizedValue(f,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimiser.getOptimizedValue(f,  goalType);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimiser.getOptimizedValue(f,  goalType);	  optimaValues[i]    =    optimizer.getOptimizedValue(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
107	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
108	[BUG]  [BUGGY]  optima[0]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[0]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[0]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
109	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
110	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
111	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
112	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimization(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
113	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
114	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  bound1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  bound1);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  bound1);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
115	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
116	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
117	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max),  optima);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
118	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType),  optima);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
119	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound2,  max),  optima);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
120	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimizer(f,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimizer(f,  goalType);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimizer(f,  goalType);	  optimaValues[i]    =    optimizer.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
121	[BUG]  [BUGGY]  optimisationaValues[i]  =  optimizer.getOptimizer(f,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationaValues[i]  =  optimizer.getOptimizer(f,  goalType);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationaValues[i]  =  optimizer.getOptimizer(f,  goalType);	  optimaValues[i]    =    optimizer.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
122	[BUG]  [BUGGY]  optimaValues[i]  =  optimiza.getOptimizer(f);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimiza.getOptimizer(f);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimiza.getOptimizer(f);	  optimaValues[i]    =    optimizer.getOptimizer(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
123	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2),  Math.min(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
124	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(bound1,    max),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
125	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(bound1,    max),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
126	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  headerType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  headerType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  headerType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
127	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
128	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  min,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    goalType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
129	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2  -  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2  -  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2  -  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
130	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2  -  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2  -  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2  -  max);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
131	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound2  -  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound2  -  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound2  -  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
132	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1  -  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1  -  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound2,  max),  Math.max(bound1  -  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
133	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(max,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
134	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
135	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
136	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
137	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.max(bound2,  max);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
138	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
139	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  goalType);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
140	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  min);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  min);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  min);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
141	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimizer(f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimizer(f);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimizer(f);	  optima[i]    =    optimizer.getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
142	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound2));	  optima[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
143	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
144	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
145	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  i));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  i));	  optimaValues[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
146	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
147	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
148	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
149	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
150	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optima[i]));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
151	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
152	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
153	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  optima);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2),  optima);	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
154	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  max),  Math.max(bound2),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  max),  Math.max(bound2),  optima);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  max),  Math.max(bound2),  optima);	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
155	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
156	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max),  optima);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
157	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
158	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
159	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2  -  min),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2  -  min),  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2  -  min),  max);	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max    -    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
160	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(bound1,    max),    Math.max(bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
161	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType);	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
162	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound3));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
163	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
164	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
165	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  0));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
166	[BUG]  [BUGGY]  optimisationaValues[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationaValues[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationaValues[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
167	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
168	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
169	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
170	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  1));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  1));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  1));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
171	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  i));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
172	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
173	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
174	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound2,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
175	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound2,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
176	[BUG]  [BUGGY]  optimisationa[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
177	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  bound1));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
178	[BUG]  [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimiser.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optimiser.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
179	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
180	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  min));	  optima[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
181	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimaValues);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimaValues);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimaValues);	  optima[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
182	[BUG]  [BUGGY]  optimisationaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
183	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
184	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimization.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimization.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optimization.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
185	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  bound2));	  optimaValues[i]    =    optimizer.getOptimize(f,    bound1,    bound2,    Math.min(bound2),    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
186	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
187	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimization(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
188	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
189	[BUG]  [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optimisation.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
190	[BUG]  [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  optima));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  optima));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisation.setOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  optima));	  optimisation.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
191	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
192	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2,  goalType));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
193	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
194	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
195	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
196	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1.doubleValue());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1.doubleValue());  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  bound1.doubleValue());	  optimaValues[i]    =    optimizer.getOptimizedValue(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
197	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound2));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
198	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(bound1,  bound2),  Math.max(max  -  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
199	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2  -  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2  -  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  Math.max(bound2  -  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
200	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimizer(f,  goalType,  max);	  optimaValues[i]    =    optimizer.getOptimizer(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
201	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  Math.max(bound1));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2,    max),    Math.max(bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
202	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
203	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));	  optima[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
204	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
205	[BUG]  [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima[i]));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    optima[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
206	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
207	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optima));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optima));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optima));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
208	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optima));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optima));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  max,  Math.max(bound1,  bound2),  Math.min(max,  optima));	  optimisationa[i]    =    optimizer.optimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
209	[BUG]  [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
210	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  max,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
211	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2,  max),  Math.min(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2,  max),  Math.min(max,  optimaValues[i]));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2,  max),  Math.min(max,  optimaValues[i]));	  optimaValues[i]    =    optimizer.getOptimization(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
212	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
213	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimization(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimization(f,  targetType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.getOptimization(f,    bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
214	[BUG]  [BUGGY]  optimaValues[i]  =  optimiza.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimiza.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimiza.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optimaValues[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
215	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
216	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(bound1,  max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
217	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  goalType.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  goalType.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max,  bound2),  goalType.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
218	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max),  goalType.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max),  goalType.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  bound1,  bound2,  Math.min(max),  goalType.max(bound1,  bound2));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
219	[BUG]  [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisation.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisation.setOptimize(f,  goalType,  Math.min(max,  bound1),  Math.max(bound2,  max));	  optimisation.setOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
220	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
221	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
222	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
223	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimization(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));	  optima[i]    =    optimizer.getOptimization(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
224	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optima));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
225	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimaValues[i]));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
226	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimas[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimas[i]));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  optimas[i]));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
227	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  maxType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  maxType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  maxType,  Math.min(bound1,  bound2),  Math.max(bound2,  max));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
228	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  max);	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    goalType.max(bound1,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
229	[BUG]  [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisationa[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(bound1,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
230	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  max));	  optimisationa[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound2),    Math.max(bound1,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
231	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));	  optimaValues[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
232	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  bound2));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
233	[BUG]  [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimiser.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max);	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2),    Math.max(bound2,    max);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
234	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2,    max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
235	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max  -  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max  -  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  bound1,  bound2),  Math.max(bound2,  max  -  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
236	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  bound1));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  bound1));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max  -  bound1));	  optima[i]    =    optimizer.optimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2    -    bound1));    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
237	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound1),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
238	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound2,  bound2),  Math.max(max));	  optima[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
239	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  max);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  max);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimizedValue(f,  goalType,  max);	  optimaValues[i]    =    optimizer.getOptimizedValue(f,    goalType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
240	[BUG]  [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimisera[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max));	  optimisera[i]    =    optimizer.optimize(f,    bound1,    bound2,    Math.min(max,    bound2),    Math.max(max));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
241	[BUG]  [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optimaValues[i]  =  optimizer.getOptimize(f,  min,  goalType,  Math.max(bound1,  bound2),  Math.min(max,  optimaValues[i]));	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.max(bound1,    bound2),    Math.min(max,    bound2));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
242	[BUG]  [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);  [BUGGY]      }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.getOptimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound2,  max),  optima);	  optimaValues[i]    =    optimizer.getOptimize(f,    goalType,    Math.min(bound1,    bound2),    Math.max(bound2),    optima);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
243	[BUG]  [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2,  optima));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  0;  i  <  starts;  ++i)  {  try  {  optimizer.setMaximalIterationCount(maxIterations  -  totalIterations);  optimizer.setMaxEvaluations(maxEvaluations  -  totalEvaluations);  final  double  bound1  =  (i  ==  0)  ?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  final  double  bound2  =  (i  ==  0)  ?  max  :  min  +  generator.nextDouble()  *  (max  -  min);  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(bound1,  bound2));      [BUGGY]  optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2,  optima));  [BUGGY]      optimaValues[i]  =  optimizer.getFunctionValue();  }  catch  (FunctionEvaluationException  fee)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  catch  (ConvergenceException  ce)  {  optima[i]  =  Double.NaN;  optimaValues[i]  =  Double.NaN;  }  totalIterations+=  optimizer.getIterationCount();  totalEvaluations  +=  optimizer.getEvaluations();  [CLASS]  MultiStartUnivariateRealOptimizer  [METHOD]  optimize  [RETURN_TYPE]  double  UnivariateRealFunction  f  GoalType  goalType  final  double  min  final  double  max  [VARIABLES]  boolean  double[]  optima  optimaValues  double  bound1  bound2  currX  currY  mIX  mIY  max  min  prevY  ConvergenceException  ce  UnivariateRealFunction  f  GoalType  goalType  UnivariateRealOptimizer  optimizer  FunctionEvaluationException  fee  long  serialVersionUID  int  count  i  j  lastNaN  maxEvaluations  maxIterations  starts  totalEvaluations  totalIterations  RandomGenerator  generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	optima[i]  =  optimizer.optimize(f,  goalType,  Math.min(bound1,  bound2),  Math.max(max,  bound2,  optima));	  optima[i]    =    optimizer.optimize(f,    max,    Math.min(bound1,    bound2),    Math.max(bound2,    goalType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
