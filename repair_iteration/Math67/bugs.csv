bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return optimizer.getResult(); [FE] AssertionError [CONTEXT] public double getResult() { [BUGGY] return optimizer.getResult(); [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getResult [RETURN_TYPE] double  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	97	97	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double getResult() { [BUGGY] [BUGGY] return optimizer.getResult(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getResult [RETURN_TYPE] double  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	97	97	1	add	
3	[BUG] [BUGGY] return optimizer.getAbsoluteAccuracy(); [FE] AssertionError [CONTEXT] public double getAbsoluteAccuracy() { [BUGGY] return optimizer.getAbsoluteAccuracy(); [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getAbsoluteAccuracy [RETURN_TYPE] double  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	102	102	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double getAbsoluteAccuracy() { [BUGGY] [BUGGY] return optimizer.getAbsoluteAccuracy(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getAbsoluteAccuracy [RETURN_TYPE] double  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	102	102	1	add	
5	[BUG] [BUGGY] return optimizer.getRelativeAccuracy(); [FE] AssertionError [CONTEXT] public double getRelativeAccuracy() { [BUGGY] return optimizer.getRelativeAccuracy(); [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getRelativeAccuracy [RETURN_TYPE] double  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	127	127	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double getRelativeAccuracy() { [BUGGY] [BUGGY] return optimizer.getRelativeAccuracy(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getRelativeAccuracy [RETURN_TYPE] double  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	127	127	1	add	
7	[BUG] [BUGGY] optimizer.setAbsoluteAccuracy(accuracy); [FE] AssertionError [CONTEXT] public void setAbsoluteAccuracy(double accuracy) { [BUGGY] optimizer.setAbsoluteAccuracy(accuracy); [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setAbsoluteAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	147	147	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setAbsoluteAccuracy(double accuracy) { [BUGGY] [BUGGY] optimizer.setAbsoluteAccuracy(accuracy); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setAbsoluteAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	147	147	1	add	
9	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void setAbsoluteAccuracy(double accuracy) { optimizer.setAbsoluteAccuracy(accuracy); [BUGGY] } [BUGGY]  [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setAbsoluteAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	148	148	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setAbsoluteAccuracy(double accuracy) { optimizer.setAbsoluteAccuracy(accuracy); [BUGGY] [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setAbsoluteAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	148	148	1	add	
11	[BUG] [BUGGY] optimizer.setRelativeAccuracy(accuracy); [FE] AssertionError [CONTEXT] public void setRelativeAccuracy(double accuracy) { [BUGGY] optimizer.setRelativeAccuracy(accuracy); [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setRelativeAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	162	162	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setRelativeAccuracy(double accuracy) { [BUGGY] [BUGGY] optimizer.setRelativeAccuracy(accuracy); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setRelativeAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	162	162	1	add	
13	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void setRelativeAccuracy(double accuracy) { optimizer.setRelativeAccuracy(accuracy); [BUGGY] } [BUGGY]  [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setRelativeAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	163	163	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setRelativeAccuracy(double accuracy) { optimizer.setRelativeAccuracy(accuracy); [BUGGY] [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setRelativeAccuracy [RETURN_TYPE] void  double accuracy [VARIABLES] boolean double[] optima optimaValues double accuracy UnivariateRealOptimizer optimizer long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	163	163	1	add	
15	[BUG] [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); [FE] AssertionError [CONTEXT] public double[] getOptima() throws IllegalStateException { if (optima == null) { [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); [BUGGY] } return optima.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptima [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	194	194	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double[] getOptima() throws IllegalStateException { if (optima == null) { [BUGGY] [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); } return optima.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptima [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	194	194	1	add	
17	[BUG] [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); [FE] AssertionError [CONTEXT] public double[] getOptimaValues() throws IllegalStateException { if (optimaValues == null) { [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); [BUGGY] } return optimaValues.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptimaValues [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	220	220	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double[] getOptimaValues() throws IllegalStateException { if (optimaValues == null) { [BUGGY] [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); } return optimaValues.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptimaValues [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	220	220	1	add	
19	[BUG] [BUGGY] int i = j - 1; [FE] AssertionError [CONTEXT] } double currX = optima[0]; double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  [BUGGY] int i = j - 1; [BUGGY] double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } double currX = optima[0]; double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  [BUGGY] [BUGGY] int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	280	280	1	add	
21	[BUG] [BUGGY] double mIX = optima[i]; [FE] AssertionError [CONTEXT] double currX = optima[0]; double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; [BUGGY] double mIX = optima[i]; [BUGGY] double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	281	281	1	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double currX = optima[0]; double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; [BUGGY] [BUGGY] double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	281	281	1	add	
23	[BUG] [BUGGY] double mIY = optimaValues[i]; [FE] AssertionError [CONTEXT] double currX = optima[0]; double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; [BUGGY] double mIY = optimaValues[i]; [BUGGY] while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double currX = optima[0]; double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; [BUGGY] [BUGGY] double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	282	282	1	add	
25	[BUG] [BUGGY] while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { [FE] AssertionError [CONTEXT] double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; [BUGGY] while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { [BUGGY] optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double currY = optimaValues[0]; for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; [BUGGY] [BUGGY] while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	283	283	1	add	
27	[BUG] [BUGGY] optima[i + 1] = mIX; [FE] AssertionError [CONTEXT] for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { [BUGGY] optima[i + 1] = mIX; [BUGGY] optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for (int j = 1; j < lastNaN; ++j) { final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { [BUGGY] [BUGGY] optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	284	284	1	add	
29	[BUG] [BUGGY] optimaValues[i + 1] = mIY; [FE] AssertionError [CONTEXT] final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; [BUGGY] optimaValues[i + 1] = mIY; [BUGGY] if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double prevY = currY; currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; [BUGGY] [BUGGY] optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	285	285	1	add	
31	[BUG] [BUGGY] if (i-- != 0) { [FE] AssertionError [CONTEXT] currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; [BUGGY] if (i-- != 0) { [BUGGY] mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	286	286	1	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] currX = optima[j]; currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; [BUGGY] [BUGGY] if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	286	286	1	add	
33	[BUG] [BUGGY] mIX = optima[i]; [FE] AssertionError [CONTEXT] currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { [BUGGY] mIX = optima[i]; [BUGGY] mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; currY = optimaValues[j]; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	287	287	1	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] currY = optimaValues[j]; if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { [BUGGY] [BUGGY] mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; currY = optimaValues[j]; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	287	287	1	add	
35	[BUG] [BUGGY] mIY = optimaValues[i]; [FE] AssertionError [CONTEXT] if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; [BUGGY] mIY = optimaValues[i]; [BUGGY] } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; currY = optimaValues[j]; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {  int i = j - 1; double mIX = optima[i]; double mIY = optimaValues[i]; while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) { optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; [BUGGY] [BUGGY] mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; currY = optimaValues[j]; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	288	288	1	add	
37	[BUG] [BUGGY] optima[i + 1] = currX; [FE] AssertionError [CONTEXT] optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } [BUGGY] optima[i + 1] = currX; [BUGGY] optimaValues[i + 1] = currY; currX = optima[j]; currY = optimaValues[j]; } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	294	294	1	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] optima[i + 1] = mIX; optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } [BUGGY] [BUGGY] optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; currY = optimaValues[j]; } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	294	294	1	add	
39	[BUG] [BUGGY] optimaValues[i + 1] = currY; [FE] AssertionError [CONTEXT] optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; [BUGGY] optimaValues[i + 1] = currY; [BUGGY] currX = optima[j]; currY = optimaValues[j]; } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] optimaValues[i + 1] = mIY; if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; [BUGGY] [BUGGY] optimaValues[i + 1] = currY; currX = optima[j]; currY = optimaValues[j]; } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	295	295	1	add	
41	[BUG] [BUGGY] currX = optima[j]; [FE] AssertionError [CONTEXT] if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; [BUGGY] currX = optima[j]; [BUGGY] currY = optimaValues[j]; } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); }  [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (i-- != 0) { mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; [BUGGY] [BUGGY] currX = optima[j]; currY = optimaValues[j]; } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); }  [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	296	296	1	add	
43	[BUG] [BUGGY] currY = optimaValues[j]; [FE] AssertionError [CONTEXT] mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; [BUGGY] currY = optimaValues[j]; [BUGGY] } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); }   [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] mIX = optima[i]; mIY = optimaValues[i]; } else { mIX = Double.NaN; mIY = Double.NaN; } } optima[i + 1] = currX; optimaValues[i + 1] = currY; currX = optima[j]; [BUGGY] [BUGGY] currY = optimaValues[j]; } } if (Double.isNaN(optima[0])) { throw new OptimizationException( LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT, starts); }   [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	1.0	297	297	1	add	
45	[BUG] [BUGGY] final RandomGenerator generator) { [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, [BUGGY] final RandomGenerator generator) { [BUGGY] this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	80	80	1	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, [BUGGY] [BUGGY] final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	80	80	1	add	
47	[BUG] [BUGGY] this.optimizer= optimizer; [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { [BUGGY] this.optimizer= optimizer; [BUGGY] this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	81	81	1	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { [BUGGY] [BUGGY] this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	81	81	1	add	
49	[BUG] [BUGGY] this.totalIterations= 0; [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; [BUGGY] this.totalIterations= 0; [BUGGY] this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	82	82	1	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; [BUGGY] [BUGGY] this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	82	82	1	add	
51	[BUG] [BUGGY] this.starts = starts; [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; [BUGGY] this.starts = starts; [BUGGY] this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	83	83	1	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; [BUGGY] [BUGGY] this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	83	83	1	add	
53	[BUG] [BUGGY] this.generator= generator; [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; [BUGGY] this.generator= generator; [BUGGY] this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	84	84	1	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; [BUGGY] [BUGGY] this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	84	84	1	add	
55	[BUG] [BUGGY] this.optima = null; [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; [BUGGY] this.optima = null; [BUGGY] setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	85	85	1	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; [BUGGY] [BUGGY] this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	85	85	1	add	
57	[BUG] [BUGGY] setMaximalIterationCount(Integer.MAX_VALUE); [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; [BUGGY] setMaximalIterationCount(Integer.MAX_VALUE); [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	86	86	1	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; [BUGGY] [BUGGY] setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	86	86	1	add	
59	[BUG] [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	87	87	1	replace	
60	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); [BUGGY] [BUGGY] setMaxEvaluations(Integer.MAX_VALUE); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	87	87	1	add	
61	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); [BUGGY] } [BUGGY]  [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	88	88	1	replace	
62	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer, final int starts, final RandomGenerator generator) { this.optimizer= optimizer; this.totalIterations= 0; this.starts = starts; this.generator= generator; this.optima = null; setMaximalIterationCount(Integer.MAX_VALUE); setMaxEvaluations(Integer.MAX_VALUE); [BUGGY] [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] <init> [RETURN_TYPE] RandomGenerator)  UnivariateRealOptimizer optimizer final int starts RandomGenerator generator [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	88	88	1	add	
63	[BUG] [BUGGY] this.maxIterations = count; [FE] AssertionError [CONTEXT] public void setMaximalIterationCount(int count) { [BUGGY] this.maxIterations = count; [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaximalIterationCount [RETURN_TYPE] void  int count [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	152	152	1	replace	
64	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setMaximalIterationCount(int count) { [BUGGY] [BUGGY] this.maxIterations = count; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaximalIterationCount [RETURN_TYPE] void  int count [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	152	152	1	add	
65	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void setMaximalIterationCount(int count) { this.maxIterations = count; [BUGGY] } [BUGGY]  [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaximalIterationCount [RETURN_TYPE] void  int count [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	153	153	1	replace	
66	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setMaximalIterationCount(int count) { this.maxIterations = count; [BUGGY] [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaximalIterationCount [RETURN_TYPE] void  int count [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	153	153	1	add	
67	[BUG] [BUGGY] this.maxEvaluations = maxEvaluations; [FE] AssertionError [CONTEXT] public void setMaxEvaluations(int maxEvaluations) { [BUGGY] this.maxEvaluations = maxEvaluations; [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaxEvaluations [RETURN_TYPE] void  int maxEvaluations [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	157	157	1	replace	
68	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setMaxEvaluations(int maxEvaluations) { [BUGGY] [BUGGY] this.maxEvaluations = maxEvaluations; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaxEvaluations [RETURN_TYPE] void  int maxEvaluations [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	157	157	1	add	
69	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void setMaxEvaluations(int maxEvaluations) { this.maxEvaluations = maxEvaluations; [BUGGY] } [BUGGY]  [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaxEvaluations [RETURN_TYPE] void  int maxEvaluations [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	158	158	1	replace	
70	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void setMaxEvaluations(int maxEvaluations) { this.maxEvaluations = maxEvaluations; [BUGGY] [BUGGY] } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] setMaxEvaluations [RETURN_TYPE] void  int maxEvaluations [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	158	158	1	add	
71	[BUG] [BUGGY] if (optima == null) { [FE] AssertionError [CONTEXT] public double[] getOptima() throws IllegalStateException { [BUGGY] if (optima == null) { [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); } return optima.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptima [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	193	193	1	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double[] getOptima() throws IllegalStateException { [BUGGY] [BUGGY] if (optima == null) { throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); } return optima.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptima [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	193	193	1	add	
73	[BUG] [BUGGY] if (optimaValues == null) { [FE] AssertionError [CONTEXT] public double[] getOptimaValues() throws IllegalStateException { [BUGGY] if (optimaValues == null) { [BUGGY] throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); } return optimaValues.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptimaValues [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	219	219	1	replace	
74	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double[] getOptimaValues() throws IllegalStateException { [BUGGY] [BUGGY] if (optimaValues == null) { throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET); } return optimaValues.clone(); } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] getOptimaValues [RETURN_TYPE] double[]  [VARIABLES] UnivariateRealOptimizer optimizer boolean double[] optima optimaValues long serialVersionUID int count maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	219	219	1	add	
75	[BUG] [BUGGY] optima = new double[starts]; [FE] AssertionError [CONTEXT] FunctionEvaluationException { [BUGGY] optima = new double[starts]; [BUGGY] optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	231	231	1	replace	
76	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] FunctionEvaluationException { [BUGGY] [BUGGY] optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	231	231	1	add	
77	[BUG] [BUGGY] optimaValues = new double[starts]; [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; [BUGGY] optimaValues = new double[starts]; [BUGGY] totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	232	232	1	replace	
78	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; [BUGGY] [BUGGY] optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	232	232	1	add	
79	[BUG] [BUGGY] totalIterations= 0; [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; optimaValues = new double[starts]; [BUGGY] totalIterations= 0; [BUGGY] totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	233	233	1	replace	
80	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; optimaValues = new double[starts]; [BUGGY] [BUGGY] totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	233	233	1	add	
81	[BUG] [BUGGY] totalEvaluations = 0; [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; [BUGGY] totalEvaluations = 0; [BUGGY]   for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	234	234	1	replace	
82	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; [BUGGY] [BUGGY] totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	234	234	1	add	
83	[BUG] [BUGGY] for (int i = 0; i < starts; ++i) { [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  [BUGGY] for (int i = 0; i < starts; ++i) { [BUGGY]  try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	237	237	1	replace	
84	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] FunctionEvaluationException { optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  [BUGGY] [BUGGY] for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	237	237	1	add	
85	[BUG] [BUGGY] optimizer.setMaximalIterationCount(maxIterations - totalIterations); [FE] AssertionError [CONTEXT] optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { [BUGGY] optimizer.setMaximalIterationCount(maxIterations - totalIterations); [BUGGY] optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	240	240	1	replace	
86	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { [BUGGY] [BUGGY] optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	240	240	1	add	
87	[BUG] [BUGGY] optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); [FE] AssertionError [CONTEXT] optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); [BUGGY] optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); [BUGGY] final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	241	241	1	replace	
88	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] optima = new double[starts]; optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); [BUGGY] [BUGGY] optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	241	241	1	add	
89	[BUG] [BUGGY] final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); [FE] AssertionError [CONTEXT] optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); [BUGGY] final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); [BUGGY] final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	242	242	1	replace	
90	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] optimaValues = new double[starts]; totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); [BUGGY] [BUGGY] final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	242	242	1	add	
91	[BUG] [BUGGY] final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); [FE] AssertionError [CONTEXT] totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); [BUGGY] final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); [BUGGY] optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	243	243	1	replace	
92	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] totalIterations= 0; totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); [BUGGY] [BUGGY] final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	243	243	1	add	
93	[BUG] [BUGGY] optima[i] = optimizer.optimize(f, goalType,    Math.min(bound1, bound2),       Math.max(bound1, bound2)); [FE] AssertionError [CONTEXT] totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); [BUGGY] optima[i] = optimizer.optimize(f, goalType,              Math.min(bound1, bound2),                           Math.max(bound1, bound2)); [BUGGY] Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	replace	
94	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] totalEvaluations = 0;  for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); [BUGGY] [BUGGY] optima[i] = optimizer.optimize(f, goalType,              Math.min(bound1, bound2),                           Math.max(bound1, bound2)); Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	244	246	1	add	
95	[BUG] [BUGGY] optimaValues[i] = optimizer.getFunctionValue(); [FE] AssertionError [CONTEXT] for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); [BUGGY] optimaValues[i] = optimizer.getFunctionValue(); [BUGGY] } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } totalIterations+= optimizer.getIterationCount(); totalEvaluations += optimizer.getEvaluations(); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	replace	
96	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for (int i = 0; i < starts; ++i) { try { optimizer.setMaximalIterationCount(maxIterations - totalIterations); optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations); final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min); final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min); optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); [BUGGY] [BUGGY] optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } totalIterations+= optimizer.getIterationCount(); totalEvaluations += optimizer.getEvaluations(); [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	247	247	1	add	
97	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; [BUGGY] } [BUGGY]  totalIterations+= optimizer.getIterationCount(); totalEvaluations += optimizer.getEvaluations(); }  int lastNaN = optima.length; for (int i = 0; i < lastNaN; ++i) { if (Double.isNaN(optima[i])) { [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	replace	
98	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] optima[i] = optimizer.optimize(f, goalType, Math.min(bound1, bound2), Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; [BUGGY] [BUGGY] } totalIterations+= optimizer.getIterationCount(); totalEvaluations += optimizer.getEvaluations(); }  int lastNaN = optima.length; for (int i = 0; i < lastNaN; ++i) { if (Double.isNaN(optima[i])) { [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	254	254	1	add	
99	[BUG] [BUGGY] totalIterations+= optimizer.getIterationCount(); [FE] AssertionError [CONTEXT] Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } [BUGGY] totalIterations+= optimizer.getIterationCount(); [BUGGY] totalEvaluations += optimizer.getEvaluations(); }  int lastNaN = optima.length; for (int i = 0; i < lastNaN; ++i) { if (Double.isNaN(optima[i])) { optima[i] = optima[--lastNaN]; optima[lastNaN + 1] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	256	256	1	replace	
100	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Math.max(bound1, bound2)); optimaValues[i] = optimizer.getFunctionValue(); } catch (FunctionEvaluationException fee) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } catch (ConvergenceException ce) { optima[i] = Double.NaN; optimaValues[i] = Double.NaN; } [BUGGY] [BUGGY] totalIterations+= optimizer.getIterationCount(); totalEvaluations += optimizer.getEvaluations(); }  int lastNaN = optima.length; for (int i = 0; i < lastNaN; ++i) { if (Double.isNaN(optima[i])) { optima[i] = optima[--lastNaN]; optima[lastNaN + 1] = Double.NaN; [CLASS] MultiStartUnivariateRealOptimizer [METHOD] optimize [RETURN_TYPE] double  UnivariateRealFunction f GoalType goalType final double min final double max [VARIABLES] boolean double[] optima optimaValues double bound1 bound2 currX currY mIX mIY max min prevY ConvergenceException ce UnivariateRealFunction f GoalType goalType UnivariateRealOptimizer optimizer FunctionEvaluationException fee long serialVersionUID int count i j lastNaN maxEvaluations maxIterations starts totalEvaluations totalIterations RandomGenerator generator  	projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java	0.7071067811865475	256	256	1	add	
