projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer();
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=0;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=0L;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=1000;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=0;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=start;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator);this.starts=starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.optimizer;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.Optimizer;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorGenerator.DEFAULT_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorUtilities.generator(generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=Generator.DEFAULT_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newdouble[starts];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=2;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=Integer.MAX_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=Integer.MIN_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(generator);this.starts=starts;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(generator);this.starts=starts;}else{setOptimizer(null);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIMIZER;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newint[starts];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts],maxIterations);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts-1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts+1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.getOptimizer();
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=100;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts,generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=totalIterations;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=start+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator,starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82setGenerator(generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts,generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=start;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=start-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizationr;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorGenerator.DEFAULT;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorGenerator.INSTANCE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=10;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=Generator.DEFAULT;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts>0?starts:0;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(generator);this.starts=starts;}else{System.arraycopy(this.starts,0,this.generator,generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_SIZE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=Generator.DEFAULT_VALUE+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=Generator.DEFAULT_VALUE|Generator.DEFAULT_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorUtilities.generator(generator,starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorUtilities.generator(generator,true);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(starts,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(starts,starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.Optimizer();
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorGenerator.DEFAULT_VALUE+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorGenerator.DEFAULT_VALUE|GeneratorGenerator.DEFAULT_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_VALUE+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_VALUE|Generator.DEFAULT_OPTIONAL_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=generator.DEFAULT;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts/1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts+2;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts,generator,null;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82System.arraycopy(this.starts,0,this.starts,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82System.arraycopy(this.starts,0,this.generator,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts-1L;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts-2;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts/1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts+2;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newint[starts-1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newint[starts],maxIterations;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.getOptimizer(starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=Integer.MIN_VALUE-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=Integer.MIN_VALUE+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=generator.INSTANCE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.getOptimizer(generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(this.starts,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newdouble[starts],maxIterations;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newdouble[starts-1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=maxIterations;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=start+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts*1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts/1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts+2];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIMIZER|Generator.DEFAULT_OPTIMIZER;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIMIZER||Generator.DEFAULT_OPTIMIZER;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts],starts,maxIterations);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts],maxEvaluations);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts],starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts],maxIterations,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_SIZE+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_SIZE-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_SIZE|Generator.DEFAULT_OPTIONAL_SIZE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts-1L;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator,starts,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator,starts,Generator.DEFAULT_VALUE);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator,starts,generator.getOptimizationCount());
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=starts+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=starts-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=Integer.MAX_VALUE-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts>0?starts:1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts>0?1:0;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=generator;this.starts=starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){setGenerator(generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){setGenerator(generator);}else{System.arraycopy(starts,0,generator,0,generator.length);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){setGenerator(generator);}else{Set<UnivariateRealOptimizer>optimizer=newHashSet<UnivariateRealOptimizer>();System.arraycopy(generator,0,this.generator,
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimiser;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(this.starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newint[1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator==null){super(generator);this.starts=starts;}else{System.arraycopy(this.starts,0,this.generator,generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(starts);this.starts=starts;}else{System.arraycopy(this.starts,0,this.generator,generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=start+2;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorGenerator.DEFAULT_VALUE+generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=starts,generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIMIZER+generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts-1,generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator==null){super(generator);this.starts=starts;}else{setOptimizer(null);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newint[starts],maxIterations);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.getOptimizer(this.starts);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=start-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){setGenerator(generator);}else{Set<UnivariateRealOptimizer>optimizer=newHashSet<UnivariateRealOptimizer>();setGenerator(generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(starts-1);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.getOptimizer(starts,null);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=2;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts-1]+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator,starts,GeneratorType.DEFAULT);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator,starts,generator.getOptimizer());
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizer.optionalOptimizer;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=start-1L;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=Integer.MAX_VALUE+1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_SIZE+starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorUtilities.generator(generator,start);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=Generator.DEFAULT_VALUE-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts-1,generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.starts=starts-2;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_VALUE-1;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=Generator.DEFAULT_OPTIONAL_VALUE+generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newdouble[starts+1];
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newdouble[starts],maxIterations);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=Starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=startIterations;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximumValues=newdouble[starts],startIterations);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.DEFAULT_OPTIMIZER;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(generator,starts);this.starts=starts;}else{setOptimizer(null);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.maximalIterations=starts>0?starts:0;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(generator,starts);this.starts=starts;}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newdouble[starts],starts;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.DEFAULT_OPTIONAL_VALUE;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.generator=GeneratorUtilities.generator(generator,optimizer);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts+totalIterations;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.getOptimizer(this);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=starts,generator);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=generator.Optimizer;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.totalIterations=newint[starts],generator;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82this.optimizer=optimizationr.optimizer;
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82super(generator,starts,Generator.DEFAULT);
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(generator,starts);this.starts=starts;}else{System.arraycopy(this.starts,0,this.generator,generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){super(generator,starts);}else{System.arraycopy(this.starts,0,this.generator,generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){System.arraycopy(this.starts,0,this.generator,generator);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){setGenerator(generator);}else{setGenerator(null);}
projects/Math67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java82if(generator!=null){setGenerator(generator);}else{this.starts=starts;}
