projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ArrayList<String>matchingOpts=newArrayList<String>(longOpt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){longOpt=Long.parseLong(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){longOpt=Long.parseLong(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){longOpt=Long.valueOf(longOpt.substring(1));}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(matchingOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts=newArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toLowerCase(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(requiredOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){for(StringlongOpt:shortOpts.keySet()){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){for(StringlongOpt:shortOpts.values()){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){for(StringlongOpt:longOpts.keySet()){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=shortOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,requiredOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(requiredOpts,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")||longOpt.equals("-")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")||longOpt.equals("")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){matchingOpts.add(longOpt);}if(longOpt.equals("")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){matchingOpts.add(longOpt);}if(longOpt.equals(".")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){matchingOpts.add(longOpt);}if(longOpt.equals(",")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){matchingOpts.add(longOpt);}if(longOpt.equals(")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(optionGroups.get(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(newString(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){returnmatchingOpts;}if(longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){returnmatchingOpts;}if(longOpt.equals(".")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){returnmatchingOpts;}if(longOpt.equals(",")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+2);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchedOpts.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.equals(""));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.valueOf(longOpt.substring(1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245StringlongOpt=Long.valueOf(longOpt.substring(1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.valueOf(longOpt.substring(1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpts.keySet());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.keySet());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts=newArrayList<String>();}if(longOpt.startsWith("-")){matchingOpts=newArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts=newArrayList<String>();}if(longOpt.startsWith(".-")){matchingOpts=newArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts=newArrayList<String>();}if(longOpt.startsWith(",-")){matchingOpts=newArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toUpperCase(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.parseLong(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.parseLong(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longueOpt=Long.parseLong(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toLowerCase(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toLowerCase(option));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts=newArrayList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.startsWith("-"));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(longOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=matchingOpts.sort(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(matchingOpts,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(requiredOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("*")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,shortOpts,optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt,optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,longOpt,optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);matchingOpts.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);if(longOpt.startsWith(opt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);if(longOpt.startsWith("-")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);if(longOpt!=null){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);if(longOpt.startsWith("_")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatchingOpts("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowStripLeadingHyphens(opt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatching("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatchingOption("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.valueOf(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ArrayList<String>matchingOpts=newArrayList<String>(longOpt.size()-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=newArrayList<String>(longOpt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ArrayList<String>matchingOpts=newArrayList<String>(longOpt.size()+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.values());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);matchingOpts.add(longOpt+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);if(longOpt.startsWith("-")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);if(longOpt.startsWith("-")||longOpt.startsWith("-")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);if(longOpt!=null){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);if(longOpt.startsWith("-")){matchingOpts.add(longOpt+1);}else{matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(LongOpt.valueOf(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchedOpts=newArrayList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=newPair<String>(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(matchingOpts,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(optionGroups.keySet());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245bucket==null||longOpt.equals("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowStripLeadingHyphens(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+3);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+11);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowStripLeadingHyphens(opt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowStripLeadingHyphens(longOpt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245atchingOpts.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.equals(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);if(longOpt.equals("")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toLowerCase(longOpt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);if(longOpt.equals("")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);if(longOpt.startsWith("_")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){longOpt=Long.valueOf(longOpt.substring(2));}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pending||longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pending||longOpt.equals(optionGroups.get(opt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,opt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245[Delete]
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowStripLeadingHyphens(opt,longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatchingHyphens(opt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatchingHyphens(opt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245found(longOpt,false)){matchingOpts=newArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=shortOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245foundOrEqual(longOpt,opt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=shortOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=shortOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){returnmatchingOpts;}if(longOpt.equals(")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245lungul.startsWith("-")){longOpt=Long.parseLong(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt*1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("_")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toLowerCase(optionGroup));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longueOpt=Long.valueOf(longOpt.substring(1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(matchingOpts,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1);if(longOpt.startsWith(".")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try==if(longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=longOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=matchingOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245buckets.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245bucketGroups.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=Pair.class.getSimpleName();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=longOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=longOpt.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt+3);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+1,longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.valueOf(longOpt.substring(2));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longueOpt=Long.valueOf(longOpt.substring(2));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.substring(0,longOpt.length()-1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.substring(0,longOpt.length()));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatchingOpts(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowingMatchingOpts(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.length(),longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(newString(longOpt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(newString(longOpt,opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(newString(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245lungul.startsWith(longOpt)){longOpt=Long.parseLong(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatchingHyphens(longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ensureMatchingHyphens(longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245enforceMatchingHyphens(longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt!=null){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith(opt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.valueOf(longOpt.substring(0,longOpt.length()-1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longueOpt=Long.valueOf(longOpt.substring(1),longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245StringlongOpt=Long.valueOf(longOpt.substring(2));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245StringlongOpt=Long.valueOf(longOpt.substring(0,longOpt.length()-1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245StringlongOpt=Long.valueOf(longOpt.substring(0,longOpt.length()));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(opt)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt)+2);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toUpperCase(opt)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.startsWith("-"),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.startsWith(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("_")||longOpt.startsWith("__")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(longOpts,matchingOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(matchingOpts,longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(longOpt,matchingOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")||longOpt.startsWith("-")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts.add(longOpt);}else{requiredOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=Long.valueOf(longOpt.toLowerCase());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=Long.valueOf(longOpt.getValue());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=stringOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.valueOf(longOpt.substring(0,longOpt.length()));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("-")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(LongOpt.valueOf(longOpt.toLowerCase()));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(LongOpt.valueOf(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts.add(longOpt+1);}else{matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=longOpt.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=longOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=longOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=Long.valueOf(longOpt.values());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=lengthOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.parseLong(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longueOpt=Long.parseLong(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("*")||longOpt.equals("*")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("*")&&longOpt.startsWith("*")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=matchingOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=matchingOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt)){returnCollections.EMPTY_LIST;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt)&&longOpt.startsWith("-")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.parseLong(longOpt)+1;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("_")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchedOpts=newLinkedList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245for(StringlongOpt:shortOpts.keySet()){if(longOpt.startsWith("-")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245for(StringlongOpt:shortOpts.keySet()){if(longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245for(StringlongOpt:shortOpts.keySet()){if(longOpt.startsWith("-")||longOpt.startsWith("-")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.valueOf(longOpt.substring(2));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.valueOf(longOpt.substring(0,longOpt.length()-1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.valueOf(longOpt.substring(1),longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245&&longOpt.equals("-")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245||longOpt.equals("-")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("-")||longOpt.equals("-")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=longOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=optionGroups.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=opt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(opt)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt)+2);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt)+3);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatchingHyphens(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ensureMatchingHyphens(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatching(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,longOpt+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.keySet(),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.getValue());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try==if(longOpt.equals("*")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try==if(longOpt.equals("-")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt+1,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,option+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=newPair<String>(longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=newPair<String>(longOpt.hashCode());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=newPair<String>(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(requiredOpts,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt),LongOpt.toUpperCase(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+18);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt+2);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,shortOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt,longOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt,requiredOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=shortOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=stringOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245MatchingOptsrequiredOpts=(MatchingOpts)requiredOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245MatchingOptsrequiredOpts=matchingOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245MatchingOptsrequiredOpts=(MatchingOpts)requiredOpts.clone();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt,longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase(option));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,null);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,0);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=newArrayList<String>(longOpt.size()+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=newArrayList<String>(longOpt.size()-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.equals("/"));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.equals("*"));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=longOpts.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=longOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,requiredOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,neededOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,requirementOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowStripLeadingHyphens(longOpt,opt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowStripLeadingHyphens(longOpt,longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245found(longOpt,true)){matchingOpts=newArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=longOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=optionGroups.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpt.getValue();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,longOpt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.equals("-"));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.equals(optionGroups.get(opt)));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,shortOpt,optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.getValue();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.getKey();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt*1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase(),opt*1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt*2);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(longOpts,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(addedOpts,longOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.values(),longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.values(),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toLowerCase(opt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase(opt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245acceptStripLeadingHyphens(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ensureCapacity(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals(optionGroups.get(opt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245&&longOpt.equals(optionGroups.get(opt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts||longOpt.equals(optionGroups.get(opt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245||longOpt.equals(optionGroups.get(opt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,optionGroups,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toLowerCase(longOpt),LongOpt.toLowerCase(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try{[Delete]catch(NumberFormatExceptionnfe){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try{[Delete]catch(NumberFormatExceptione){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try{[Delete]catch(NumberFormatException.class){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245bucket==null&&longOpt.equals("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245bucket==null||longOpt.equals("_")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowingStripLeadingHyphens(longOpt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ensureCapacity(longOpt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(requiredOpts,longOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245&&longOpt.equals("")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245||longOpt.equals("")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("*")||longOpt.equals("*")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatching(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toUpperCase(opt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toUpperCase(option));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245ArrayList<String>matchingOpts=newArrayList<String>(lengthOpt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Set<String>matchingOpts=newHashSet<String>(longOpt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt.keySet());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(optionGroups.values());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(optionGroups.keySet(),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245AllowStripLeadingHyphens(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals(opt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.parseLong(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.parseLong(longOpt)+1;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt)+1,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(opt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=longOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=longOpt.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=optionGroups.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase(opt)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(opt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(longOpts,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(longOpts,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245||longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245&&longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(optionGroups.get(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(optionGroups.get(longOpt),requiredOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(optionGroups.get(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts=newLinkedList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts=newArrayList<String>(longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts=newArrayList<String>(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,option)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,shortOpts)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,longOpt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase(optionGroup));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=matchingOpts.sort(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=matchingOpts.sort(longOpt,optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=matchingOpts.sort(longOpt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=longOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=longOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=shortOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){atchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){atchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("_")){atchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=newPair<String>(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=Long.valueOf(longOpt.substring(1)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,LongOpt.valueOf(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatching(longOpt,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=shortOpt.getKey();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=shortOpt.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt),opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt),LongOpt.valueOf(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245enableMatching(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=preferredOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")||longOpt.startsWith("-")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt)+1,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.toLowerCase());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=(List<String>)longOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(LongOpt.valueOf(longOpt)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(LongOpt.valueOf(longOpt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245AllowStripLeadingHyphens(longOpt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.parseLong(longOpt+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.equals("*")){returnlongOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")||longOpt.startsWith("--")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245lungul.startsWith("-")){longOpt=Long.parseLong(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.substring(1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.valueOf(opt),longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith(optionGroups)){matchingOpts.add(optionGroups);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt)){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt)&&longOpt.startsWith(opt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt)&&!longOpt.equals("")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.equals(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>pair=shortOpt.keySet();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=opt.getValues();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(addedOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(longOpts,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt)+4);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("_")||longOpt.startsWith("__")){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=newArrayList<String>(longOpt.size()+2);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts.add(longOpt);}else{matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("-")){matchingOpts.add(longOpt);}else{matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,opt)&&longOpt.startsWith("-")){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pending&&longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts||longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(opt+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+8);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245MatchingOpts.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=newPair<String>(longOpt.trim());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=newPair<String>(longOpt.substring(1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.substring(0,longOpt.length()-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.substring(0,longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.getKey());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.trim());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(newString(longOpt),LongOpt.valueOf(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245MutableStripLeadingHyphens(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=matchingOpts.sort(longOpt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatchingOption(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("")){matchingOpts.add(longOpt);}else{requiredOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpt.getValues();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.valueOf(longOpt.substring(1)+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=newPair<String>(longOpt.startsWith(".-"));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,LongOpt.toLowerCase(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts=newjava.util.ArrayList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=Long.valueOf(longOpt.values());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245enableMatchingOpts(longOpt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245finding(longOpt,true)){matchingOpts=newArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("_")){matchingOpts.add(longOpt);}else{requiredOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith("_")){matchingOpts.add(longOpt);}else{shortOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245MatchingOptsrequiredOpts=(MatchingOpts)requiredOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245enforceMatching(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=shortOpt.getKey();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try{if(longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245try>>if(longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245bucket==null||longOpt.startsWith("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(longOpt,preferred);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pending||longOpt.equals(optionGroups.get(longOpt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pending&&longOpt.equals(optionGroups.get(opt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts||longOpt.equals(optionGroups.get(longOpt))){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt/1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(LongOpt.toUpperCase(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.equals("*")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(optionGroups.containsKey(longOpt)){matchingOpts.addAll(optionGroups.get(longOpt));}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(optionGroups.containsKey(longOpt)){matchingOpts.addAll(optionGroups.get(longOpt));}else{requiredOpts.addAll(optionGroups.get(longOpt));}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=longOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,newLinkedHashMap<String,String>());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245foundValues.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt)/1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.valueOf(longOpt),LongOpt.MAX_VALUE);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(matchingOpts,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Gründen.checkState(longOpt.equals("")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,opt)){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=matchingOpts.sort(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245List<String>matchingOpts=matchingOpts.sort(opt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>matchingOpts=longOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pending||longOpt.equals("-")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatchingOption(")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchedOpts=newArrayList<String>(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchedOpts=newArrayList<String>(longOpt.length());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(opt.equals(longOpt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(opt.startsWith(longOpt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.trim().toLowerCase();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245yearOpt=Long.valueOf(longOpt.substring(2));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(LongOpt.toUpperCase(longOpt)/1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(requiredOpts,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245bucket!=null||longOpt.equals("")){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase()*1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatchingOpts(opt)){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatchingOpts(longOpt.toLowerCase())){thrownewIllegalArgumentException("");}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt)){returnCollections.EMPTYList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245buckets.add("*")){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(longOpt.startsWith(opt)){matchingOpts.add(longOpt+1);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatchingHyphens(longOpt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245forceMatchingHyphens(opt,shortOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(opt.startsWith("_")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245langOpt=Long.valueOf(longOpt.substring(0,longOpt.length()));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Arrays.sort(optionGroups,longOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pass!=0&&longOpt.startsWith("-")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt*3);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,optionGroups,shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longueOpt=Long.valueOf(longOpt.substring(0,longOpt.length()-1));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longueOpt=Long.valueOf(longOpt.substring(0,longOpt.length()));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt,shortOpts,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,null)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245aleger(longOpt,shortOpt)){returnCollections.emptyList();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt+13);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Set<String>matchingOpts=newTreeSet<String>(longOpt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt/1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(requiredOpt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(opt,requiredOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=longOpt.split(":");
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt.toLowerCase(opt),longOpt.toLowerCase());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245pass!=0&&longOpt.startsWith("__")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245for(StringlongOpt:shortOpts.keySet()){if(longOpt.equals("")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>requiredOpts=shortOpt.toLowerCase();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(newString(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=shortOpt.toLowerCase();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245Pair<String>shortOpts=shortOpt.split(":");
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(opt!=null){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(opt.equals("")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245if(opt.startsWith("-")){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245opt=Util.stripLeadingHyphens(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245opt=Util.stripLeadingHyphens(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(opt,longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.addAll(optionGroups);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchedOpts.add(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245allowMatching("-")){thrownewIllegalArgumentException("");}
