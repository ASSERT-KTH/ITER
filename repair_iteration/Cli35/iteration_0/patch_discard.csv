compilation error,58,add,[CE] illegal start of type,,  if(!requiredOpts.contains(prefix)) { requiredOpts = new ArrayList < Object>(); }
compilation error,58,add,[CE] illegal start of type,,  if(requiredOpts == null) { requiredOpts = new ArrayList < Object>(); }
compilation error,58,add,[CE] illegal start of type,,  if(requiredOpts.contains("-prefix")) { requiredOpts = new ArrayList < Object>(); }
compilation error,58,add,[CE] illegal start of type,,  if(!requiredOpts.contains("-prefix")) { requiredOpts = new ArrayList < Object>(); }
compilation error,58,add,[CE] illegal start of type,,  if(!requiredOpts.contains(prefix)) { requiredOpts.add(new ArrayList < Object>()); }
compilation error,249,add,[CE] illegal start of expression,,  if(!matchingOpts.isEmpty()) { for(String shortOpt : shortOpts.keySet()) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,249,add,[CE] illegal start of expression,,  if(!matchingOpts.isEmpty()) { for(String shortOpt : longOpts.keySet()) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,249,add,[CE] illegal start of expression,,  if(!matchingOpts.isEmpty()) { for(String shortOpt : shortOpts.keySet()) { matchingOpts.add(shortOpt); }
compilation error,249,add,[CE] illegal start of expression,,  if(!matchingOpts.isEmpty()) { for(String shortOpt : shortOpts.keySet()) { matchingOpts.remove(shortOpt); }
compilation error,249,add,[CE] illegal start of expression,,  if(!matchingOpts.isEmpty()) { for(String shortOpt : longOpts.keySet()) { matchingOpts.add(shortOpt); }
compilation error,53,replace,[CE] cannot find symbol longOpts,private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); , 
increase failing tests,243,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,if (longOpt.startsWith(opt)) { ,if(opt.startsWith(longOpt)) {
increase failing tests,243,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,if (longOpt.startsWith(opt)) { ,if(!longOpt.startsWith(opt)) {
compilation error,243,replace,[CE] illegal start of type,if (longOpt.startsWith(opt)) { , 
increase failing tests,245,replace, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefix' testExactOptionNameMatch,matchingOpts.add(longOpt); ,matchingOpts.add(opt);
compilation error,245,replace,[CE] no suitable method found for add(Long),matchingOpts.add(longOpt); ,matchingOpts.add(new Long(longOpt));
increase failing tests,245,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,matchingOpts.add(longOpt); ,matchingOpts.remove(longOpt);
increase failing tests,245,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,matchingOpts.add(longOpt); , 
compilation error,247,replace,[CE] illegal start of expression,} ,if(!matchingOpts.contains(opt)) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,247,replace,[CE] illegal start of expression,} ,if(!matchingOpts.isEmpty()) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,247,replace,[CE] illegal start of expression,} ,matchingOpts.remove(opt);
compilation error,247,replace,[CE] illegal start of expression,} ,if(!matchingOpts.contains(opt)) { if(shortOpt.startsWith(opt)) { matchingOpts.remove(shortOpt); }
compilation error,247,replace,[CE] illegal start of expression,} , 
compilation error,50,add,[CE] illegal start of type,,  if(shortOpts == null) { shortOpts = new ShortOpts(); }
compilation error,50,add,[CE] variable shortOpts is already defined in class Options,,  String shortOpts = new LinkedHashMap < String, Option>();
compilation error,50,add,[CE] illegal start of type,,  if(shortOpts == null) { shortOpts = new LinkedHashMap < String, Option>(); }
compilation error,50,add,[CE] illegal start of type,,  super.setOption(shortOpts);
compilation error,50,add,[CE] illegal start of type,,  if(shortOpts == null) { longOpts = new ShortOpts(); }
compilation error,58,replace,[CE] cannot find symbol,private final List<Object> requiredOpts = new ArrayList<Object>(); ,private static final List < Object> requiredOpts = new LinkedList < Object>();
compilation error,58,replace,[CE] cannot find symbol,private final List<Object> requiredOpts = new ArrayList<Object>(); ,private final List < Object> requiredOpts = new LinkedList < Object>();
compilation error,235,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { return; }
compilation error,235,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { return; }
compilation error,235,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.add(opt); }
compilation error,235,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.remove(opt); }
increase failing tests,245,add, [FE] AssertionError testAmbiquousOptionName,,  matchingOpts.clear();
compilation error,237,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { for(String shortOpt : shortOpts.keySet()) { requiredOpts.add(shortOpt); }
compilation error,237,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { for(String longOpt : shortOpts.keySet()) { requiredOpts.clear(); }
compilation error,237,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { for(String shortOpt : shortOpts.keySet()) { requiredOpts.clear(); }
compilation error,237,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { for(String longOpt : shortOpts.keySet()) { requiredOpts.remove(opt); }
compilation error,237,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { for(String shortOpt : shortOpts.keySet()) { requiredOpts.remove(0); }
increase failing tests,235,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,opt = Util.stripLeadingHyphens(opt); ,opt = Util.stripLeadingHyphens(opt + 1);
increase failing tests,235,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,opt = Util.stripLeadingHyphens(opt); ,opt = Util.stripLeadingHyphens(opt)+ 1;
compilation error,235,replace,[CE] bad operand types for binary operator '-',opt = Util.stripLeadingHyphens(opt); ,opt = Util.stripLeadingHyphens(opt - 1);
increase failing tests,247,add, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefix' testExactOptionNameMatch,,  matchingOpts.add(opt);
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.remove(opt); }
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.add(opt); }
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.clear(); }
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(longOpt.startsWith(opt)) { matchingOpts.add(opt); }
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(longOpt.startsWith(opt)) { return matchingOpts; }
compilation error,237,replace,[CE] cannot find symbol,List<String> matchingOpts = new ArrayList<String>(); ,List < String> matchingOpts = new LinkedList < String>();
compilation error,237,replace,[CE] variable matchingOpts might not have been initialized,List<String> matchingOpts = new ArrayList<String>(); ,List < String> matchingOpts = new ArrayList < String>(matchingOpts.size());
compilation error,241,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { for(String shortOpt : shortOpts.keySet()) { matchingOpts.add(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { for(String shortOpt : shortOpts.keySet()) { matchingOpts.remove(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.add(opt); }
compilation error,241,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.remove(opt); }
compilation error,241,add,[CE] illegal start of expression,,  if(matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.clear(); }
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts = new LongOpts(); }
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts = new LongHashMap < String, Option>(); }
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts = LongOpts.getLongOpt(); }
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts = LongOpts.getLongOpts(); }
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts.put("-" + longOpts.getLocalName()); }
compilation error,241,replace,[CE] cannot find symbol,for (String longOpt : longOpts.keySet()) { ,for(String longOpt : opt.keySet()) {
compilation error,241,replace,[CE] cannot find symbol,for (String longOpt : longOpts.keySet()) { ,for(String longOpt : matchingOpts.keySet()) {
increase failing tests,241,replace, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefix' testExactOptionNameMatch,for (String longOpt : longOpts.keySet()) { ,for(String longOpt : shortOpts.keySet()) {
compilation error,249,replace,[CE] incompatible types,return matchingOpts; ,return opt;
compilation error,249,replace,[CE] cannot find symbol matchingOpts,return matchingOpts; ,return this.matchingOpts;
compilation error,249,replace,[CE] cannot find symbol,return matchingOpts; ,return matchingOpts.values();
compilation error,243,add,[CE] incompatible types,,  longOpt = longOpts.get(opt);
increase failing tests,243,add, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefix' testExactOptionNameMatch,,  opt = longOpt.substring(0, longOpt.length() - 1);
compilation error,243,add,[CE] cannot find symbol,,  opt = longOpt.getLongOpt();
compilation error,243,add,[CE] incompatible types,,  longOpt = longOpts.get(longOpt);
increase failing tests,243,add, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,,  opt = longOpt.substring(0, longOpt.length())+ 1;
compilation error,235,replace,[CE] cannot find symbol matchingOpts,opt = Util.stripLeadingHyphens(opt); ,opt = Util.stripLeadingHyphens(opt, this.matchingOpts);
compilation error,235,replace,[CE] cannot find symbol matchingOptions,opt = Util.stripLeadingHyphens(opt); ,opt = Util.stripLeadingHyphens(opt, this.matchingOptions);
compilation error,50,add,[CE] illegal start of type,,  if(shortOpts == null) { private final Map < String, Option> shortOpts = new LinkedHashMap < String, Option>(); ShortOpts.putAll(shortOpts.values()); }
compilation error,50,add,[CE] illegal start of type,,  if(shortOpts == null) { private final Map < String, Option> shortOpts = new LinkedHashMap < String, Option>(); }
compilation error,50,add,[CE] illegal start of type,,  if(shortOpts == null) { private final Map < String, Option> shortOpts = new LinkedHashMap < String, Option>(); ShortOpts.putAll(shortOpts); }
compilation error,235,add,[CE] cannot find symbol,,  List < String> matchingOpts = new ArrayList < String>(opt.size());
compilation error,235,add,[CE] cannot find symbol,,  List < String> shortOpts = new ShortOpts(opt.toLowerCase());
compilation error,235,add,[CE] variable matchingOpts is already defined in method getMatchingOptions(String),,  List < String> matchingOpts = new ArrayList < String>();
compilation error,235,add,[CE] cannot find symbol,,  List < String> requiredOpts = new ArrayList < String>(opt.size());
compilation error,50,replace,[CE] cannot find symbol,private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> shortOpts = new LinkedList < String, Option>();
compilation error,50,replace,[CE] wrong number of type arguments; required 1,private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> shortOpts = new ArrayList < String, Option>();
compilation error,245,replace,[CE] no suitable method found for add(String,String),matchingOpts.add(longOpt); ,matchingOpts.add(longOpt, opt);
compilation error,58,add,[CE] variable requiredOpts is already defined in class Options,,  private final ArrayList < Object> requiredOpts = new ArrayList < Object>();
compilation error,58,add,[CE] illegal start of type,,  if(!requiredOpts.containsKey(prefix)) { requiredOpts = new ArrayList < Object>(); }
compilation error,58,add,[CE] illegal start of type,,  if(!requiredOpts.containsKey(prefix)) { requiredOpts.addAll(options.getRequiredOpts()); }
compilation error,58,add,[CE] variable requiredOpts is already defined in class Options,,  private final ArrayList < Object> requiredOpts = Lists.newArrayList();
compilation error,53,replace,[CE] cannot find symbol,private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> longOpts = new LinkedList < String, Option>();
compilation error,53,replace,[CE] wrong number of type arguments; required 1,private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> longOpts = new ArrayList < String, Option>();
compilation error,249,add,[CE] illegal start of expression,,  if(shortOpts.containsKey(opt)) { Map < String> shortOpt = shortOpts.get(opt); if(shortOpt.startsWith(shortOpt)) { matchingOpts.add(shortOpt); }
compilation error,249,add,[CE] illegal start of expression,,  if(opt.equals(getLongOpt())) { Map < String> shortOpt = shortOpts.get(opt); if(shortOpt.startsWith(shortOpt)) { matchingOpts.add(shortOpt); }
compilation error,249,add,[CE] illegal start of expression,,  if(shortOpts.containsKey(opt)) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,249,add,[CE] illegal start of expression,,  if(shortOpts.containsKey(opt)) { Map < String> shortOpt = shortOpts.get(opt); if(shortOpt.endsWith(shortOpt)) { matchingOpts.add(shortOpt); }
compilation error,249,add,[CE] ')' expected,,  if(opt.equals(getLongOpt())) { Map < String> shortOpt = shortOpts.get(opt); if(shortOpt.startsWith(shortOpt)) { matchingOpts.add(shortOpt
compilation error,237,add,[CE] cannot find symbol,,  List < String> shortOpts = opt.getShortOpts();
compilation error,237,add,[CE] cannot find symbol,,  List < String> shortOpts = new ShortOpts(opt.toLowerCase());
compilation error,237,add,[CE] cannot find symbol matchingOpts,,  return(List < String>)matchingOpts.get(opt);
compilation error,237,add,[CE] cannot find symbol,,  List < String> shortOpts = getShortOpts();
compilation error,237,add,[CE] cannot find symbol,,  List < String> shortOpts = new ShortOpts(opt.toString());
increase failing tests,245,add, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefi' testExactOptionNameMatch,,  longOpt = longOpt.substring(0, longOpt.length() - 1);
increase failing tests,245,add, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'x' testExactOptionNameMatch,,  longOpt = longOpt.substring(opt.length() - 1);
compilation error,245,add,[CE] ';' expected,,  longOpt = longOpt.substring(0, longOpt.length())+ 1);
increase failing tests,245,add, [FE] AssertionError testAmbiquousOptionName,,  opt = longOpt.substring(opt.length() - 1);
increase failing tests,245,add, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefix1' testExactOptionNameMatch,,  longOpt = longOpt.substring(0, longOpt.length())+ 1;
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts = new LongOpt(LongOpt.getLongOpt()); }
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts = LongOpt.getLongOpt(); }
compilation error,53,add,[CE] <identifier> expected,,  longOpts.put("-prefix")|| longOpts.put("-prefix"));
compilation error,53,add,[CE] illegal start of type,,  if(longOpts == null) { longOpts = new LongOptMap < String, Option>(); }
compilation error,53,add,[CE] <identifier> expected,,  longOpts = LongOpt.getLongOpt();
compilation error,241,replace,[CE] cannot find symbol,for (String longOpt : longOpts.keySet()) { ,for(String longOpt : opt.getLongOpt()) {
compilation error,241,replace,[CE] cannot find symbol,for (String longOpt : longOpts.keySet()) { ,for(String longOpt : opt.getLongOpts()) {
compilation error,247,add,[CE] illegal start of expression,,  if(shortOpt.startsWith(opt)) { Map < String> shortOpt = shortOpts.get(opt); if(shortOpt.startsWith(shortOpt)) { matchingOpts.add(shortOpt); }
compilation error,247,add,[CE] illegal start of expression,,  if(shortOpt.startsWith(opt)) { Map < String> shortOpts = shortOpts.get(opt); if(shortOpt.startsWith(shortOpt)) { matchingOpts.add(shortOpt); }
compilation error,247,add,[CE] illegal start of expression,,  if(shortOpt.startsWith(opt)) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,247,add,[CE] illegal start of expression,,  if(shortOpt.startsWith(opt)) { for(String shortOpt : shortOpts.keySet()) { matchingOpts.add(shortOpt); }
compilation error,247,add,[CE] illegal start of expression,,  if(shortOpt.startsWith(opt)) { if(shortOpt.startsWith(shortOpt)) { matchingOpts.add(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.startsWith(shortOpt)) { matchingOpts.add(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.startsWith(opt)) { matchOpts.add(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.startsWith(shortOpt)) { return matchingOpts; }
compilation error,241,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.startsWith(shortOpt)) { return matchingOpts.get(shortOpt); }
compilation error,237,replace,[CE] no suitable constructor found for ArrayList(String),List<String> matchingOpts = new ArrayList<String>(); ,List < String> matchingOpts = new ArrayList < String>(opt);
compilation error,237,replace,[CE] cannot find symbol optim,List<String> matchingOpts = new ArrayList<String>(); ,List < String> matchingOpts = new ArrayList < String>(optim);
compilation error,243,replace,[CE] cannot find symbol longOpt,if (longOpt.startsWith(opt)) { ,if(longOpt.startsWith(this.longOpt)) {
increase failing tests,243,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,if (longOpt.startsWith(opt)) { ,if(longOpt.startsWith("-")) {
compilation error,58,add,[CE] cannot find symbol,,  private final ObjectList < Object> requiredOpts = Lists.newArrayList();
compilation error,58,add,[CE] cannot find symbol,,  private final ObjectList < Object> requiredOpts = new ArrayList < Object>();
compilation error,58,add,[CE] variable requiredOpts is already defined in class Options,,  private final ArrayList < Object> requiredOpts = new ArrayList < Object>(values());
compilation error,53,add,[CE] variable longOpts is already defined in class Options,,  private final Map < String, Option> longOpts = new LongHashMap < String, Option>();
compilation error,53,add,[CE] variable longOpts is already defined in class Options,,  private final Map < String, Option> longOpts = Long.valueOf('-');
compilation error,53,add,[CE] illegal start of type,,  return longOpts.get(Option.None.class);
compilation error,53,add,[CE] illegal start of type,,  return LongOpts.valueOf('-');
compilation error,247,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,247,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.equals(opt)) { matchingOpts.add(shortOpt); }
compilation error,247,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.values()) { if(shortOpt.startsWith(opt)) { matchingOpts.add(shortOpt); }
compilation error,247,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.values()) { if(shortOpt.equals(opt)) { matchingOpts.add(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  for(String longOpt : shortOpts.keySet()) { if(!matchingOpts.contains(longOpt)) { matchingOpts.add(longOpt); }
compilation error,241,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { matchingOpts.add(opt); }
compilation error,241,add,[CE] illegal start of expression,,  for(String shortOpt : shortOpts.keySet()) { if(shortOpt.equals(shortOpt.getKey())) { matchingOpts.add(shortOpt); }
compilation error,241,add,[CE] illegal start of expression,,  for(String longOpt : longOpts.values()) { if(!matchingOpts.contains(longOpt)) { matchingOpts.add(longOpt); }
compilation error,50,add,[CE] variable shortOpts is already defined in class Options,,  public static final Map < String, Option> shortOpts = new LinkedHashMap < String, Option>();
compilation error,50,add,[CE] variable shortOpts is already defined in class Options,,  public Map < String, Option> shortOpts = new LinkedHashMap < String, Option>();
compilation error,50,add,[CE] variable shortOpts is already defined in class Options,,  public Map < String, Option> shortOpts = new HashMap < String, Option>();
increase failing tests,249,add, [FE] UnrecognizedOptionException testSimpleLong,,  matchingOpts.remove(opt);
increase failing tests,249,add, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,,  matchingOpts.clear();
compilation error,249,add,[CE] method put in interface Map<K,V> cannot be applied to given types;,,  shortOpts.put(opt, opt);
compilation error,249,add,[CE] method put in interface Map<K,V> cannot be applied to given types;,,  shortOpts.put(opt, true);
compilation error,249,add,[CE] cannot find symbol,,  matchingOpts.push(opt);
compilation error,237,add,[CE] inconvertible types,,  return(String)optionGroups.get(opt);
compilation error,237,add,[CE] incompatible types,,  return(opt == null)? null : opt.toString();
compilation error,237,add,[CE] method getMatchingOptions in class Options cannot be applied to given types;,,  return getMatchingOptions(opt, null);
compilation error,237,add,[CE] incompatible types,,  return(opt == null)? null : opt.trim();
compilation error,237,add,[CE] cannot find symbol,,  return(opt == null)? null : opt.getKey();
compilation error,237,replace,[CE] cannot find symbol optimizer,List<String> matchingOpts = new ArrayList<String>(); ,List < String> matchingOpts = new ArrayList < String>(optimizer);
compilation error,241,replace,[CE] incompatible types,for (String longOpt : longOpts.keySet()) { ,for(String longOpt : longOpts.values()) {
compilation error,249,replace,[CE] cannot find symbol matchedOpts,return matchingOpts; ,return this.matchedOpts;
compilation error,249,replace,[CE] cannot find symbol minimumOpts,return matchingOpts; ,return this.minimumOpts;
compilation error,235,replace,[CE] method stripLeadingHyphens in class Util cannot be applied to given types;,opt = Util.stripLeadingHyphens(opt); ,opt = Util.stripLeadingHyphens(opt, false);
compilation error,235,replace,[CE] method stripLeadingHyphens in class Util cannot be applied to given types;,opt = Util.stripLeadingHyphens(opt); ,opt = Util.stripLeadingHyphens(opt, this);
compilation error,235,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { return new ArrayList < String>(mappingOpts.size()); }
compilation error,235,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { return new ArrayList < String>(mappingOpts.get(opt)); }
compilation error,235,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { return new ArrayList < String>(mappingOpts.keySet()); }
compilation error,235,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(opt)) { if(!matchingOpts.contains(opt)) { return new ArrayList < String>(); }
increase failing tests,243,replace, [FE] java.lang.Exception: Unexpected exception testAmbiquousOptionName,if (longOpt.startsWith(opt)) { ,if(opt.equals(longOpt)) {
increase failing tests,243,replace, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--enable-a'  (could be: 'bfile' testSimpleLong,if (longOpt.startsWith(opt)) { ,if(!longOpt.equals(opt)) {
compilation error,243,replace,[CE] cannot find symbol prefix,if (longOpt.startsWith(opt)) { ,if(longOpt.startsWith(opt)|| longOpt.startsWith(prefix)) {
compilation error,245,add,[CE] no suitable method found for substring(int,boolean),,  longOpt = longOpt.substring(0, longOpt.startsWith(opt));
compilation error,245,add,[CE] ';' expected,,  longOpt = longOpt.substring(0, longOpt.startsWith(opt)));
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(longOpt)) { for(String shortOpt : longOpts.values()) { matchingOpts.add(shortOpt); }
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(longOpt)) { for(String longOpt : longOpts.values()) { matchingOpts.add(longOpt); }
increase failing tests,243,add, [FE] org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefix' testExactOptionNameMatch,,  matchingOpts.add(longOpt);
compilation error,243,add,[CE] illegal start of expression,,  if(!matchingOpts.contains(longOpt)) { for(String longOpt : longOpts.keySet()) { matchingOpts.add(longOpt); }
