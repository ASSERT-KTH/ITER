bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] matchingOpts.add(longOpt); [FE] 'prefixplusplus') [CONTEXT] opt = Util.stripLeadingHyphens(opt); List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { [BUGGY] matchingOpts.add(longOpt); [BUGGY] } } return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.22941573387056174	245	245	1	replace	
2	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] opt = Util.stripLeadingHyphens(opt); List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { [BUGGY] [BUGGY] matchingOpts.add(longOpt); } } return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.22941573387056174	245	245	1	add	
3	[BUG] [BUGGY] if (longOpt.startsWith(opt)) { [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { opt = Util.stripLeadingHyphens(opt); List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { [BUGGY] if (longOpt.startsWith(opt))   { [BUGGY] { matchingOpts.add(longOpt); } } return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.17407765595569785	243	244	1	replace	
4	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { opt = Util.stripLeadingHyphens(opt); List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { [BUGGY] [BUGGY] if (longOpt.startsWith(opt))   { { matchingOpts.add(longOpt); } } return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.17407765595569785	243	244	1	add	
5	[BUG] [BUGGY] } [FE] 'prefixplusplus') [CONTEXT] List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } [BUGGY] } [BUGGY]  return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.17407765595569785	247	247	1	replace	
6	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } [BUGGY] [BUGGY] } return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.17407765595569785	247	247	1	add	
7	[BUG] [BUGGY] opt = Util.stripLeadingHyphens(opt); [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { [BUGGY] opt = Util.stripLeadingHyphens(opt); [BUGGY]  List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	235	235	1	replace	
8	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { [BUGGY] [BUGGY] opt = Util.stripLeadingHyphens(opt); List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	235	235	1	add	
9	[BUG] [BUGGY] List<String> matchingOpts = new ArrayList<String>(); [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { opt = Util.stripLeadingHyphens(opt); [BUGGY] List<String> matchingOpts = new ArrayList<String>(); [BUGGY]   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	237	237	1	replace	
10	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { opt = Util.stripLeadingHyphens(opt); [BUGGY] [BUGGY] List<String> matchingOpts = new ArrayList<String>();   for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	237	237	1	add	
11	[BUG] [BUGGY] for (String longOpt : longOpts.keySet()) { [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { opt = Util.stripLeadingHyphens(opt); List<String> matchingOpts = new ArrayList<String>();   [BUGGY] for (String longOpt : longOpts.keySet())  { [BUGGY] { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } } return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	241	242	1	replace	
12	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public List<String> getMatchingOptions(String opt) { opt = Util.stripLeadingHyphens(opt); List<String> matchingOpts = new ArrayList<String>();   [BUGGY] [BUGGY] for (String longOpt : longOpts.keySet())  { { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } } return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	241	242	1	add	
13	[BUG] [BUGGY] return matchingOpts; [FE] 'prefixplusplus') [CONTEXT]  for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } } [BUGGY] return matchingOpts; [BUGGY] } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	249	249	1	replace	
14	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT]  for (String longOpt : longOpts.keySet()) { if (longOpt.startsWith(opt)) { matchingOpts.add(longOpt); } } [BUGGY] [BUGGY] return matchingOpts; } [CLASS] Options [METHOD] getMatchingOptions [RETURN_TYPE] List  String opt [VARIABLES] List matchingOpts requiredOpts String longOpt opt boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.16666666666666666	249	249	1	add	
16	[BUG] [BUGGY] private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); [FE] 'prefixplusplus') [CONTEXT] [BUGGY] private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	50	50	1	replace	
17	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] [BUGGY] [BUGGY] private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	50	50	1	add	
18	[BUG] [BUGGY] private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); [FE] 'prefixplusplus') [CONTEXT] [BUGGY] private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	53	53	1	replace	
19	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] [BUGGY] [BUGGY] private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	53	53	1	add	
20	[BUG] [BUGGY] private final List<Object> requiredOpts = new ArrayList<Object>(); [FE] 'prefixplusplus') [CONTEXT] [BUGGY] private final List<Object> requiredOpts = new ArrayList<Object>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	58	58	1	replace	
21	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] [BUGGY] [BUGGY] private final List<Object> requiredOpts = new ArrayList<Object>(); [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	58	58	1	add	
22	[BUG] [BUGGY] private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>(); [FE] 'prefixplusplus') [CONTEXT] [BUGGY] private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	61	61	1	replace	
23	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] [BUGGY] [BUGGY] private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>(); [CLASS] Options  [VARIABLES] 	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	61	61	1	add	
24	[BUG] [BUGGY] return new HashSet<OptionGroup>(optionGroups.values()); [FE] 'prefixplusplus') [CONTEXT] Collection<OptionGroup> getOptionGroups() { [BUGGY] return new HashSet<OptionGroup>(optionGroups.values()); [BUGGY] } [CLASS] Options [METHOD] getOptionGroups [RETURN_TYPE] Collection  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	97	97	1	replace	
25	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] Collection<OptionGroup> getOptionGroups() { [BUGGY] [BUGGY] return new HashSet<OptionGroup>(optionGroups.values()); } [CLASS] Options [METHOD] getOptionGroups [RETURN_TYPE] Collection  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	97	97	1	add	
26	[BUG] [BUGGY] addOption(new Option(opt, longOpt, hasArg, description)); [FE] 'prefixplusplus') [CONTEXT] public Options addOption(String opt, String longOpt, boolean hasArg, String description) { [BUGGY] addOption(new Option(opt, longOpt, hasArg, description)); [BUGGY] return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  String opt String longOpt boolean hasArg String description [VARIABLES] List requiredOpts String description longOpt opt boolean hasArg Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	142	142	1	replace	
27	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public Options addOption(String opt, String longOpt, boolean hasArg, String description) { [BUGGY] [BUGGY] addOption(new Option(opt, longOpt, hasArg, description)); return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  String opt String longOpt boolean hasArg String description [VARIABLES] List requiredOpts String description longOpt opt boolean hasArg Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	142	142	1	add	
28	[BUG] [BUGGY] return this; [FE] 'prefixplusplus') [CONTEXT] public Options addOption(String opt, String longOpt, boolean hasArg, String description) { addOption(new Option(opt, longOpt, hasArg, description)); [BUGGY] return this; [BUGGY] } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  String opt String longOpt boolean hasArg String description [VARIABLES] List requiredOpts String description longOpt opt boolean hasArg Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	143	143	1	replace	
29	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public Options addOption(String opt, String longOpt, boolean hasArg, String description) { addOption(new Option(opt, longOpt, hasArg, description)); [BUGGY] [BUGGY] return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  String opt String longOpt boolean hasArg String description [VARIABLES] List requiredOpts String description longOpt opt boolean hasArg Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	143	143	1	add	
30	[BUG] [BUGGY] String key = opt.getKey(); [FE] 'prefixplusplus') [CONTEXT] public Options addOption(Option opt) { [BUGGY] String key = opt.getKey(); [BUGGY]   if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	154	154	1	replace	
31	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public Options addOption(Option opt) { [BUGGY] [BUGGY] String key = opt.getKey();  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	154	154	1	add	
32	[BUG] [BUGGY] if (opt.hasLongOpt()) { [FE] 'prefixplusplus') [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  [BUGGY] if (opt.hasLongOpt())  { [BUGGY] { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	157	158	1	replace	
33	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  [BUGGY] [BUGGY] if (opt.hasLongOpt())  { { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	157	158	1	add	
34	[BUG] [BUGGY] longOpts.put(opt.getLongOpt(), opt); [FE] 'prefixplusplus') [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  if (opt.hasLongOpt()) { [BUGGY] longOpts.put(opt.getLongOpt(), opt); [BUGGY] }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	159	159	1	replace	
35	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  if (opt.hasLongOpt()) { [BUGGY] [BUGGY] longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	159	159	1	add	
36	[BUG] [BUGGY] if (opt.isRequired()) { [FE] 'prefixplusplus') [CONTEXT] { String key = opt.getKey();  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  [BUGGY] if (opt.isRequired())  { [BUGGY] { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt);  [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	163	164	1	replace	
37	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] { String key = opt.getKey();  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  [BUGGY] [BUGGY] if (opt.isRequired())  { { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt);  [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	163	164	1	add	
38	[BUG] [BUGGY] shortOpts.put(key, opt); [FE] 'prefixplusplus') [CONTEXT]  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } [BUGGY] shortOpts.put(key, opt); [BUGGY]  return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	172	172	1	replace	
39	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT]  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } [BUGGY] [BUGGY] shortOpts.put(key, opt); return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	172	172	1	add	
40	[BUG] [BUGGY] return this; [FE] 'prefixplusplus') [CONTEXT] { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt); [BUGGY] return this; [BUGGY] } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	174	174	1	replace	
41	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt); [BUGGY] [BUGGY] return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	174	174	1	add	
42	[BUG] [BUGGY] return Collections.unmodifiableList(requiredOpts); [FE] 'prefixplusplus') [CONTEXT] public List getRequiredOptions() { [BUGGY] return Collections.unmodifiableList(requiredOpts); [BUGGY] } [CLASS] Options [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	204	204	1	replace	
43	[BUG] [BUGGY] [FE] 'prefixplusplus') [CONTEXT] public List getRequiredOptions() { [BUGGY] [BUGGY] return Collections.unmodifiableList(requiredOpts); } [CLASS] Options [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli35/src/main/java/org/apache/commons/cli/Options.java	0.12909944487358055	204	204	1	add	
