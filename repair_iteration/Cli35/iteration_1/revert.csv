projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58if(!requiredOpts.contains(prefix)){requiredOpts=newArrayList<Object>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58if(requiredOpts==null){requiredOpts=newArrayList<Object>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58if(requiredOpts.contains("-prefix")){requiredOpts=newArrayList<Object>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58if(!requiredOpts.contains("-prefix")){requiredOpts=newArrayList<Object>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58if(!requiredOpts.contains(prefix)){requiredOpts.add(newArrayList<Object>());}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(!matchingOpts.isEmpty()){for(StringshortOpt:shortOpts.keySet()){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(!matchingOpts.isEmpty()){for(StringshortOpt:longOpts.keySet()){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(!matchingOpts.isEmpty()){for(StringshortOpt:shortOpts.keySet()){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(!matchingOpts.isEmpty()){for(StringshortOpt:shortOpts.keySet()){matchingOpts.remove(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(!matchingOpts.isEmpty()){for(StringshortOpt:longOpts.keySet()){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLinkedHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatestaticfinalMap<String,Option>longOpts=newLinkedHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatestaticfinalMap<String,Option>longOpts=newHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(longOpt.startsWith(opt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(opt.startsWith(longOpt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(longOpt.startsWith(opt)||longOpt.startsWith(opt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!longOpt.startsWith(opt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(longOpt.startsWith(opt)||longOpt.endsWith(opt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(newLong(longOpt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.remove(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(!matchingOpts.contains(opt)){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(!matchingOpts.isEmpty()){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247matchingOpts.remove(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(!matchingOpts.contains(opt)){if(shortOpt.startsWith(opt)){matchingOpts.remove(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts=newShortOpts();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50StringshortOpts=newLinkedHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts=newLinkedHashMap<String,Option>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50super.setOption(shortOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){longOpts=newShortOpts();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235Util.stripLeadingHyphens(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){return;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){return;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.add(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.remove(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.remove(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245requiredOpts.remove(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.clear();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237if(matchingOpts.contains(opt)){for(StringshortOpt:shortOpts.keySet()){requiredOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237if(matchingOpts.contains(opt)){for(StringlongOpt:shortOpts.keySet()){requiredOpts.clear();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237if(matchingOpts.contains(opt)){for(StringshortOpt:shortOpts.keySet()){requiredOpts.clear();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237if(matchingOpts.contains(opt)){for(StringlongOpt:shortOpts.keySet()){requiredOpts.remove(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237if(matchingOpts.contains(opt)){for(StringshortOpt:shortOpts.keySet()){requiredOpts.remove(0);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt)+1;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247matchingOpts.add(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.remove(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.add(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.clear();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(opt)){if(longOpt.startsWith(opt)){matchingOpts.add(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(opt)){if(longOpt.startsWith(opt)){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>matchingOpts=newArrayList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>matchingOpts=newLinkedList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>matchingOpts=newArrayList<String>(matchingOpts.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241if(matchingOpts.contains(opt)){for(StringshortOpt:shortOpts.keySet()){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241if(matchingOpts.contains(opt)){for(StringshortOpt:shortOpts.keySet()){matchingOpts.remove(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241if(matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.add(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241if(matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.remove(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241if(matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.clear();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts=newLongOpts();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts=newLongHashMap<String,Option>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts=LongOpts.getLongOpt();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts=LongOpts.getLongOpts();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts.put("-"+longOpts.getLocalName());}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:longOpts.keySet()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:opt.keySet()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:matchingOpts.keySet()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:shortOpts.keySet()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:this.longOpts.keySet()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249returnmatchingOpts;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249returnopt;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249returnthis.matchingOpts;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249returnmatchingOpts.values();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243longOpt=longOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243opt=longOpt.substring(0,longOpt.length()-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243opt=longOpt.getLongOpt();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243longOpt=longOpts.get(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243opt=longOpt.substring(0,longOpt.length())+1;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt,this.matchingOpts);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt,this.matchingOptions);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();ShortOpts.putAll(shortOpts.values());}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();ShortOpts.putAll(shortOpts);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235List<String>matchingOpts=newArrayList<String>(opt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235List<String>shortOpts=newShortOpts(opt.toLowerCase());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235List<String>matchingOpts=newArrayList<String>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235List<String>requiredOpts=newArrayList<String>(opt.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedList<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newArrayList<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245matchingOpts.add(longOpt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58if(!requiredOpts.containsKey(prefix)){requiredOpts=newArrayList<Object>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58if(!requiredOpts.containsKey(prefix)){requiredOpts.addAll(options.getRequiredOpts());}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=Lists.newArrayList();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLinkedList<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newArrayList<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(shortOpts.containsKey(opt)){Map<String>shortOpt=shortOpts.get(opt);if(shortOpt.startsWith(shortOpt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(opt.equals(getLongOpt())){Map<String>shortOpt=shortOpts.get(opt);if(shortOpt.startsWith(shortOpt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(shortOpts.containsKey(opt)){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(shortOpts.containsKey(opt)){Map<String>shortOpt=shortOpts.get(opt);if(shortOpt.endsWith(shortOpt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249if(opt.equals(getLongOpt())){Map<String>shortOpt=shortOpts.get(opt);if(shortOpt.startsWith(shortOpt)){matchingOpts.add(shortOpt
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>shortOpts=opt.getShortOpts();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>shortOpts=newShortOpts(opt.toLowerCase());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237return(List<String>)matchingOpts.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>shortOpts=getShortOpts();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>shortOpts=newShortOpts(opt.toString());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=longOpt.substring(0,longOpt.length()-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=longOpt.substring(opt.length()-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=longOpt.substring(0,longOpt.length())+1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245opt=longOpt.substring(opt.length()-1);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=longOpt.substring(0,longOpt.length())+1;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts=newLongOpt(LongOpt.getLongOpt());}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts=LongOpt.getLongOpt();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53longOpts.put("-prefix")||longOpts.put("-prefix"));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53if(longOpts==null){longOpts=newLongOptMap<String,Option>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53longOpts=LongOpt.getLongOpt();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:opt.getLongOpt()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:opt.getLongOpts()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(shortOpt.startsWith(opt)){Map<String>shortOpt=shortOpts.get(opt);if(shortOpt.startsWith(shortOpt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(shortOpt.startsWith(opt)){Map<String>shortOpts=shortOpts.get(opt);if(shortOpt.startsWith(shortOpt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(shortOpt.startsWith(opt)){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(shortOpt.startsWith(opt)){for(StringshortOpt:shortOpts.keySet()){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247if(shortOpt.startsWith(opt)){if(shortOpt.startsWith(shortOpt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringshortOpt:shortOpts.keySet()){if(shortOpt.startsWith(shortOpt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringshortOpt:shortOpts.keySet()){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringshortOpt:shortOpts.keySet()){if(shortOpt.startsWith(opt)){matchOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringshortOpt:shortOpts.keySet()){if(shortOpt.startsWith(shortOpt)){returnmatchingOpts;}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringshortOpt:shortOpts.keySet()){if(shortOpt.startsWith(shortOpt)){returnmatchingOpts.get(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>matchingOpts=newArrayList<String>(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>matchingOpts=newArrayList<String>(optim);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(longOpt.startsWith(this.longOpt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(longOpt.startsWith("-")){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatefinalObjectList<Object>requiredOpts=Lists.newArrayList();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatefinalObjectList<Object>requiredOpts=newArrayList<Object>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=newArrayList<Object>(values());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLongHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=Long.valueOf('-');
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53returnlongOpts.get(Option.None.class);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java53returnLongOpts.valueOf('-');
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247for(StringshortOpt:shortOpts.keySet()){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247for(StringshortOpt:shortOpts.keySet()){if(shortOpt.equals(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247for(StringshortOpt:shortOpts.values()){if(shortOpt.startsWith(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java247for(StringshortOpt:shortOpts.values()){if(shortOpt.equals(opt)){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:shortOpts.keySet()){if(!matchingOpts.contains(longOpt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){matchingOpts.add(opt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringshortOpt:shortOpts.keySet()){if(shortOpt.equals(shortOpt.getKey())){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:longOpts.values()){if(!matchingOpts.contains(longOpt)){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50publicstaticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50publicMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java50publicMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249matchingOpts.remove(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249matchingOpts.clear();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249shortOpts.put(opt,opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249shortOpts.put(opt,true);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249matchingOpts.push(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237return(String)optionGroups.get(opt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237return(opt==null)?null:opt.toString();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237returngetMatchingOptions(opt,null);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237return(opt==null)?null:opt.trim();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237return(opt==null)?null:opt.getKey();
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>matchingOpts=newArrayList<String>(optimizer);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java237List<String>matchingOpts=newArrayList<String>(optionGroups.size());
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java241for(StringlongOpt:longOpts.values()){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249returnthis.matchedOpts;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java249returnthis.minimumOpts;
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt,false);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235opt=Util.stripLeadingHyphens(opt,this);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){returnnewArrayList<String>(mappingOpts.size());}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){returnnewArrayList<String>(mappingOpts.get(opt));}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){returnnewArrayList<String>(mappingOpts.keySet());}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java235if(!matchingOpts.contains(opt)){if(!matchingOpts.contains(opt)){returnnewArrayList<String>();}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(opt.equals(longOpt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!longOpt.equals(opt)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(longOpt.startsWith(opt)||longOpt.startsWith(prefix)){
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=longOpt.substring(0,longOpt.startsWith(opt));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java245longOpt=longOpt.substring(0,longOpt.startsWith(opt)));
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(longOpt)){for(StringshortOpt:longOpts.values()){matchingOpts.add(shortOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(longOpt)){for(StringlongOpt:longOpts.values()){matchingOpts.add(longOpt);}
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243matchingOpts.add(longOpt);
projects/Cli35/src/main/java/org/apache/commons/cli/Options.java243if(!matchingOpts.contains(longOpt)){for(StringlongOpt:longOpts.keySet()){matchingOpts.add(longOpt);}
