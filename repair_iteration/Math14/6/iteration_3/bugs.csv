bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  cost);  [CE]  '.class'  expected  [FE]            OutOfMemoryError      [CONTEXT]      private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {  if  (data  instanceof  Weight)  {      [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  cost);  [BUGGY]        break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  cost);	  weightMatrixSqrt    =    squareRoot(((Width)data).getWeight(),    covarianceSingularityThreshold);    	non-compiled	[CE]  '.class'  expected	3	None	replace
2	[BUG]  [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  threshold);  [CE]  '.class'  expected  [FE]              OutOfMemoryError      [CONTEXT]      private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {  if  (data  instanceof  Weight)  {      [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  threshold);  [BUGGY]        break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  threshold);	  weightMatrixSqrt    =    squareRoot(((Width)data).getWeight(),    covarianceSingularityThreshold);    	non-compiled	[CE]  '.class'  expected	3	None	replace
3	[BUG]  [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getHeight(),  covarianceSingularityThreshold);  [CE]  '.class'  expected  [FE]              OutOfMemoryError      [CONTEXT]      private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {  if  (data  instanceof  Weight)  {      [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getHeight(),  covarianceSingularityThreshold);  [BUGGY]        break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	weightMatrixSqrt  =  squareRoot(((Width)data).getHeight(),  covarianceSingularityThreshold);	  weightMatrixSqrt    =    squareRoot(((Width)data).getHeight());    	non-compiled	[CE]  '.class'  expected	4	None	replace
4	[BUG]  [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getHeight()  +  1);  [CE]  '.class'  expected  [FE]                OutOfMemoryError      [CONTEXT]      private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {  if  (data  instanceof  Weight)  {      [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getHeight()  +  1);  [BUGGY]        break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	weightMatrixSqrt  =  squareRoot(((Width)data).getHeight()  +  1);	  weightMatrixSqrt    =    squareRoot(((Width)data).getHeight());    	non-compiled	[CE]  '.class'  expected	4	None	replace
5	[BUG]  [BUGGY]  Weight  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);  [CE]  '.class'  expected  [FE]              OutOfMemoryError      [CONTEXT]      private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {  if  (data  instanceof  Weight)  {      [BUGGY]  Weight  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);  [BUGGY]        break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	Weight  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);	  weightMatrixSqrt    =    squareRoot(((Weight)data).getWeight(),    threshold);    	non-compiled	[CE]  '.class'  expected	2	None	replace
6	[BUG]  [BUGGY]  weightMatrixSqrt  =  squareRoot(((  Weight)data).getHeight());  [CE]  '.class'  expected  [FE]              OutOfMemoryError      [CONTEXT]      private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {  if  (data  instanceof  Weight)  {      [BUGGY]  weightMatrixSqrt  =  squareRoot(((  Weight)data).getHeight());  [BUGGY]        break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	weightMatrixSqrt  =  squareRoot(((  Weight)data).getHeight());	  weightMatrixSqrt    =    squareRoot(((Width)data).getHeight());    	non-compiled	[CE]  '.class'  expected	4	None	replace
7	[BUG]  [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  data.length);  [CE]  '.class'  expected  [FE]            OutOfMemoryError      [CONTEXT]      private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {  if  (data  instanceof  Weight)  {      [BUGGY]  weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  data.length);  [BUGGY]        break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	weightMatrixSqrt  =  squareRoot(((Width)data).getWeight(),  data.length);	  weightMatrixSqrt    =    squareRoot(((Width)data).getWeight(),    covarianceSingularityThreshold);    	non-compiled	[CE]  '.class'  expected	3	None	replace
