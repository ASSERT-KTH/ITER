bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weightMatrix,  weightMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weightMatrix,  weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weightMatrix  =  super.weightMatrix(weightMatrix,  weightMatrix);	  Weight[]    weightMatrix    =    super.weightMatrix(weightMatrix);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
2	[BUG]  [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weightMatrix,  weight);  [CE]  class,  interface,  or  enum  expected  [FE]                OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weightMatrix,  weight);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weightMatrix  =  super.weightMatrix(weightMatrix,  weight);	  Weight[]    weightMatrix    =    super.weightMatrix(weightMatrix);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
3	[BUG]  [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weightMatrix,  weight);  [CE]  class,  interface,  or  enum  expected  [FE]            OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weightMatrix,  weight);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  MathUtils.createRealMatrix(weightMatrix,  weight);	  weightMatrix    =    MathUtils.createRealMatrix(weightMatrix);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
4	[BUG]  [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weightMatrix,  weightMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weightMatrix,  weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  MathUtils.createRealMatrix(weightMatrix,  weightMatrix);	  weightMatrix    =    MathUtils.createRealMatrix(weightMatrix);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
5	[BUG]  [BUGGY]  Weight[]  weightMatrix  =  new  Weight[weightMatrix.length  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weightMatrix  =  new  Weight[weightMatrix.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weightMatrix  =  new  Weight[weightMatrix.length  +  1];	  Weight[]    weightMatrix    =    new    Weight[weightMatrix.length];    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
6	[BUG]  [BUGGY]  Weight[]  weightMatrix  =  new  Weight[weightMatrix.length  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weightMatrix  =  new  Weight[weightMatrix.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weightMatrix  =  new  Weight[weightMatrix.length  -  1];	  Weight[]    weightMatrix    =    new    Weight[weightMatrix.length];    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
7	[BUG]  [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weight,  0,  weightMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weight,  0,  weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  MathUtils.createRealMatrix(weight,  0,  weightMatrix);	  weightMatrix    =    MathUtils.createRealMatrix(weight,    0,    dim);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
8	[BUG]  [BUGGY]  Weight[]  weight  =  new  Weight[weightMatrix.length  -  2];  [CE]  class,  interface,  or  enum  expected  [FE]                OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weight  =  new  Weight[weightMatrix.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weight  =  new  Weight[weightMatrix.length  -  2];	  Weight[]    weight    =    new    Weight[weightMatrix.length    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
9	[BUG]  [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weight,  dim  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  MathUtils.createRealMatrix(weight,  dim  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  MathUtils.createRealMatrix(weight,  dim  -  2);	  weightMatrix    =    MathUtils.createRealMatrix(weight,    dim    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
10	[BUG]  [BUGGY]  Weight[]  weight  =  super.weightMatrix,  weightMatrix;  [CE]  class,  interface,  or  enum  expected  [FE]            OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weight  =  super.weightMatrix,  weightMatrix;  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weight  =  super.weightMatrix,  weightMatrix;	  Weight[]    weight    =    super.weightMatrix;    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
11	[BUG]  [BUGGY]  Weight[]  weight  =  new  Weight[weightMatrix.length  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weight  =  new  Weight[weightMatrix.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weight  =  new  Weight[weightMatrix.length  +  1];	  Weight[]    weight    =    new    Weight[weightMatrix.length];    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
12	[BUG]  [BUGGY]  weightMatrix  =  super.weightMatrix  /  2  *  dim;  [CE]  class,  interface,  or  enum  expected  [FE]                OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  super.weightMatrix  /  2  *  dim;  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  super.weightMatrix  /  2  *  dim;	  weightMatrix    =    super.weightMatrix    /    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
13	[BUG]  [BUGGY]  weightMatrix  =  super.weightMatrix  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  super.weightMatrix  +  2;  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  super.weightMatrix  +  2;	  weightMatrix    =    super.weightMatrix    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
14	[BUG]  [BUGGY]  Weight[]  weight  =  getImmediateParentPointer(weightMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]            OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weight  =  getImmediateParentPointer(weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weight  =  getImmediateParentPointer(weightMatrix);	  Weight[]    weight    =    getImmediateParentPointer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
15	[BUG]  [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weight,  weightMatrix,  weightMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weight,  weightMatrix,  weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weightMatrix  =  super.weightMatrix(weight,  weightMatrix,  weightMatrix);	  Weight[]    weightMatrix    =    super.weightMatrix(weight,    weightMatrix);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
16	[BUG]  [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weight,  dim);  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weightMatrix  =  super.weightMatrix(weight,  dim);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weightMatrix  =  super.weightMatrix(weight,  dim);	  Weight[]    weightMatrix    =    super.weightMatrix(weight,    weightMatrix);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
17	[BUG]  [BUGGY]  weightMatrix  =  super.weightMatrix  /  2  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  super.weightMatrix  /  2  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  super.weightMatrix  /  2  +  1;	  weightMatrix    =    super.weightMatrix    /    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
18	[BUG]  [BUGGY]  Weight[]  weight  =  super.weightMatrix,  weightMatrix);  [CE]  ';'  expected  [FE]            OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  Weight[]  weight  =  super.weightMatrix,  weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	Weight[]  weight  =  super.weightMatrix,  weightMatrix);	  Weight[]    weight    =    super.weightMatrix;    	non-compiled	[CE]  ';'  expected	11	None	replace
19	[BUG]  [BUGGY]  weightMatrix  =  Math.max(weightMatrix,  this.weightMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]                OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  Math.max(weightMatrix,  this.weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  Math.max(weightMatrix,  this.weightMatrix);	  weightMatrix    =    this.weightMatrix;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
20	[BUG]  [BUGGY]  weightMatrix  =  super.weightMatrix(weight,  weightMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]              OutOfMemoryError      [CONTEXT]      public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);      [BUGGY]  weightMatrix  =  super.weightMatrix(weight,  weightMatrix);  [BUGGY]      for  (int  i  =  0;  i  <  dim;  i++)  {  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	weightMatrix  =  super.weightMatrix(weight,  weightMatrix);	  Weight[]    weightMatrix    =    super.weightMatrix(weight,    weightMatrix);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
