bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(checker); [FE] OutOfMemoryError testLargeSample [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { [BUGGY] super(checker); [BUGGY] } [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean RealMatrix weightMatrixSqrt double cost  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	53	53	1	replace	
2	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { [BUGGY] [BUGGY] super(checker); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean RealMatrix weightMatrixSqrt double cost  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	53	53	1	add	
3	[BUG] [BUGGY] } [FE] OutOfMemoryError testLargeSample [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { super(checker); [BUGGY] } [BUGGY]  [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean RealMatrix weightMatrixSqrt double cost  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	54	54	1	replace	
4	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { super(checker); [BUGGY] [BUGGY] } [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean RealMatrix weightMatrixSqrt double cost  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	54	54	1	add	
5	[BUG] [BUGGY] parseOptimizationData(optData); [FE] OutOfMemoryError testLargeSample [CONTEXT] public PointVectorValuePair optimize(OptimizationData... optData) throws TooManyEvaluationsException {  [BUGGY] parseOptimizationData(optData); [BUGGY]  return super.optimize(optData); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] optimize [RETURN_TYPE] PointVectorValuePair  optData [VARIABLES] OptimizationData[] optData boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	201	201	1	replace	
6	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] public PointVectorValuePair optimize(OptimizationData... optData) throws TooManyEvaluationsException {  [BUGGY] [BUGGY] parseOptimizationData(optData);  return super.optimize(optData); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] optimize [RETURN_TYPE] PointVectorValuePair  optData [VARIABLES] OptimizationData[] optData boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	201	201	1	add	
7	[BUG] [BUGGY] for (OptimizationData data : optData) { [FE] OutOfMemoryError testLargeSample [CONTEXT] private void parseOptimizationData(OptimizationData... optData) {   [BUGGY] for (OptimizationData data : optData) { [BUGGY] if (data instanceof Weight) { weightMatrixSqrt = squareRoot(((Weight) data).getWeight());   break; } } } [CLASS] AbstractLeastSquaresOptimizer [METHOD] parseOptimizationData [RETURN_TYPE] void  optData [VARIABLES] OptimizationData[] optData OptimizationData data boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	250	250	1	replace	
8	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] private void parseOptimizationData(OptimizationData... optData) {   [BUGGY] [BUGGY] for (OptimizationData data : optData) { if (data instanceof Weight) { weightMatrixSqrt = squareRoot(((Weight) data).getWeight());   break; } } } [CLASS] AbstractLeastSquaresOptimizer [METHOD] parseOptimizationData [RETURN_TYPE] void  optData [VARIABLES] OptimizationData[] optData OptimizationData data boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	250	250	1	add	
9	[BUG] [BUGGY] if (data instanceof Weight) { [FE] OutOfMemoryError testLargeSample [CONTEXT] private void parseOptimizationData(OptimizationData... optData) {   for (OptimizationData data : optData) { [BUGGY] if (data instanceof Weight) { [BUGGY] weightMatrixSqrt = squareRoot(((Weight) data).getWeight());   break; } } } [CLASS] AbstractLeastSquaresOptimizer [METHOD] parseOptimizationData [RETURN_TYPE] void  optData [VARIABLES] OptimizationData[] optData OptimizationData data boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	
10	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] private void parseOptimizationData(OptimizationData... optData) {   for (OptimizationData data : optData) { [BUGGY] [BUGGY] if (data instanceof Weight) { weightMatrixSqrt = squareRoot(((Weight) data).getWeight());   break; } } } [CLASS] AbstractLeastSquaresOptimizer [METHOD] parseOptimizationData [RETURN_TYPE] void  optData [VARIABLES] OptimizationData[] optData OptimizationData data boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	add	
11	[BUG] [BUGGY] weightMatrixSqrt = squareRoot(((Weight) data).getWeight()); [FE] OutOfMemoryError testLargeSample [CONTEXT] private void parseOptimizationData(OptimizationData... optData) {   for (OptimizationData data : optData) { if (data instanceof Weight) { [BUGGY] weightMatrixSqrt = squareRoot(((Weight) data).getWeight()); [BUGGY]   break; } } } [CLASS] AbstractLeastSquaresOptimizer [METHOD] parseOptimizationData [RETURN_TYPE] void  optData [VARIABLES] OptimizationData[] optData OptimizationData data boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	replace	
12	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] private void parseOptimizationData(OptimizationData... optData) {   for (OptimizationData data : optData) { if (data instanceof Weight) { [BUGGY] [BUGGY] weightMatrixSqrt = squareRoot(((Weight) data).getWeight());   break; } } } [CLASS] AbstractLeastSquaresOptimizer [METHOD] parseOptimizationData [RETURN_TYPE] void  optData [VARIABLES] OptimizationData[] optData OptimizationData data boolean RealMatrix j jTj weightMatrixSqrt double cost covarianceSingularityThreshold threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	252	252	1	add	
13	[BUG] [BUGGY] public Weight(double[] weight) { [FE] OutOfMemoryError testLargeSample [CONTEXT] [BUGGY] public Weight(double[] weight) { [BUGGY] final int dim = weight.length; weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); for (int i = 0; i < dim; i++) { weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	41	41	1	replace	
14	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] [BUGGY] [BUGGY] public Weight(double[] weight) { final int dim = weight.length; weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); for (int i = 0; i < dim; i++) { weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	41	41	1	add	
15	[BUG] [BUGGY] final int dim = weight.length; [FE] OutOfMemoryError testLargeSample [CONTEXT] public Weight(double[] weight) { [BUGGY] final int dim = weight.length; [BUGGY] weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); for (int i = 0; i < dim; i++) { weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	42	42	1	replace	
16	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] public Weight(double[] weight) { [BUGGY] [BUGGY] final int dim = weight.length; weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); for (int i = 0; i < dim; i++) { weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	42	42	1	add	
17	[BUG] [BUGGY] weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); [FE] OutOfMemoryError testLargeSample [CONTEXT] public Weight(double[] weight) { final int dim = weight.length; [BUGGY] weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); [BUGGY] for (int i = 0; i < dim; i++) { weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	43	43	1	replace	
18	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] public Weight(double[] weight) { final int dim = weight.length; [BUGGY] [BUGGY] weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); for (int i = 0; i < dim; i++) { weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	43	43	1	add	
19	[BUG] [BUGGY] for (int i = 0; i < dim; i++) { [FE] OutOfMemoryError testLargeSample [CONTEXT] public Weight(double[] weight) { final int dim = weight.length; weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); [BUGGY] for (int i = 0; i < dim; i++) { [BUGGY] weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	replace	
20	[BUG] [BUGGY] [FE] OutOfMemoryError testLargeSample [CONTEXT] public Weight(double[] weight) { final int dim = weight.length; weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim); [BUGGY] [BUGGY] for (int i = 0; i < dim; i++) { weightMatrix.setEntry(i, i, weight[i]); } } [CLASS] Weight [METHOD] <init> [RETURN_TYPE] Weight(double[])  double[] weight [VARIABLES] boolean RealMatrix weightMatrix double[] weight int dim i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	44	44	1	add	
